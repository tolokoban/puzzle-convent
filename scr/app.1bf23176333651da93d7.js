"use strict";(self.webpackChunkpuzzle_convent=self.webpackChunkpuzzle_convent||[]).push([[143],{424:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;IAEI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,WAAW;IACX,SAAS;IACT;;;;;;KAMC;AACL",sourcesContent:["html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n"],sourceRoot:""}]);const l=a},73:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView > .fill > footer > div {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView > .fill > footer > div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView > .fill > footer > div.no {\n    background-color: #b00;\n    color: #fff;\n}\n","",{version:3,sources:["webpack://./src/view/app/app-view.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,gBAAgB;AACpB;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,4BAA4B;IAC5B,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,sBAAsB;IACtB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf",sourcesContent:[".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView > .fill > footer > div {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView > .fill > footer > div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView > .fill > footer > div.no {\n    background-color: #b00;\n    color: #fff;\n}\n"],sourceRoot:""}]);const l=a},532:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/view/convent-3d/convent-3d-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n"],sourceRoot:""}]);const l=a},875:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    color: #000a;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n}\n","",{version:3,sources:["webpack://./src/view/convent-floor/convent-floor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qCAAqC;IACrC,wBAAwB;IACxB,4BAA4B;IAC5B,2BAA2B;IAC3B,wCAAwC;AAC5C;;AAEA;IACI;QACI,mBAAmB;QACnB,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;IAChB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,mCAAmC;IACnC,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;AACnB",sourcesContent:[".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    color: #000a;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n}\n"],sourceRoot:""}]);const l=a},981:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var r=t(379),o=t.n(r),i=t(795),a=t.n(i),l=t(569),s=t.n(l),u=t(565),c=t.n(u),d=t(216),A=t.n(d),f=t(589),v=t.n(f),p=t(424),m={};m.styleTagTransform=v(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),o()(p.Z,m);const h=p.Z&&p.Z.locals?p.Z.locals:void 0},142:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var r=t(379),o=t.n(r),i=t(795),a=t.n(i),l=t(569),s=t.n(l),u=t(565),c=t.n(u),d=t(216),A=t.n(d),f=t(589),v=t.n(f),p=t(73),m={};m.styleTagTransform=v(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),o()(p.Z,m);const h=p.Z&&p.Z.locals?p.Z.locals:void 0},114:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var r=t(379),o=t.n(r),i=t(795),a=t.n(i),l=t(569),s=t.n(l),u=t(565),c=t.n(u),d=t(216),A=t.n(d),f=t(589),v=t.n(f),p=t(532),m={};m.styleTagTransform=v(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),o()(p.Z,m);const h=p.Z&&p.Z.locals?p.Z.locals:void 0},999:(e,n,t)=>{t.r(n),t.d(n,{default:()=>h});var r=t(379),o=t.n(r),i=t(795),a=t.n(i),l=t(569),s=t.n(l),u=t(565),c=t.n(u),d=t(216),A=t.n(d),f=t(589),v=t.n(f),p=t(875),m={};m.styleTagTransform=v(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=A(),o()(p.Z,m);const h=p.Z&&p.Z.locals?p.Z.locals:void 0},137:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,r,o){var i=this;this.element=e,this.onStart=n,this.onPan=r,this.onSwipe=o,this.timeStamp=0,this.x=0,this.y=0,this.handlePointerDown=function(e){i.timeStamp=e.timeStamp;var n=t(i.getCoords(e),2),r=n[0],o=n[1];i.x=r,i.y=o,i.onStart()},this.handlePointerMove=function(e){var n=i,r=n.timeStamp,o=n.onPan;if(0!==r){var a=t(i.getCoords(e),2),l=a[0],s=a[1];o({deltaX:l-i.x,deltaY:s-i.y})}},this.handlePointerUp=function(e){var n=i,r=n.timeStamp,o=n.onSwipe,a=t(i.getCoords(e),2),l=a[0],s=a[1],u=l-i.x,c=s-i.y,d=e.timeStamp-r;o({deltaX:u,deltaY:c,vectorX:u/d,vectorY:c/d}),i.timeStamp=0},e.addEventListener("pointerdown",this.handlePointerDown,!1),e.addEventListener("pointermove",this.handlePointerMove,!1),e.addEventListener("pointerup",this.handlePointerUp,!1)}return e.prototype.detach=function(){var e=this.element;e.removeEventListener("pointerdown",this.handlePointerDown,!1),e.removeEventListener("pointermove",this.handlePointerMove,!1),e.removeEventListener("pointerup",this.handlePointerUp,!1)},e.prototype.getCoords=function(e){var n=this.element.getBoundingClientRect();return[(e.clientX-n.left)/n.width,(e.clientY-n.top)/n.height]},e}();n.default=r},796:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(981);var a=i(t(294)),l=i(t(935)),s=i(t(236)),u=i(t(462)),c=i(t(173)),d=i(t(570)),A=t(827),f=i(t(342));!function(){r(this,void 0,void 0,(function(){var e,n,t,r;return o(this,(function(o){switch(o.label){case 0:return[4,(0,A.loadTexture)(s.default)];case 1:return e=o.sent(),[4,(0,A.loadImage)(d.default,c.default)];case 2:return n=o.sent(),[4,(0,A.loadGLTF)(u.default)];case 3:return t=o.sent(),r={images:{floor:n},meshes:{convent:t},textures:{compass:e}},l.default.render(a.default.createElement(f.default,{assets:r}),document.getElementById("root")),(i=document.getElementById("tgd-logo"))&&(i.classList.add("vanish"),window.setTimeout((function(){var e=i.parentNode;e&&e.removeChild(i)}),900)),[2]}var i}))}))}()},827:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.loadTexture=n.loadGLTF=n.loadImage=void 0;var a=t(212),l=t(217);function s(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){var t=new Image;t.src=e,t.onload=function(){return n(t)},t.onerror=function(){return n(null)}}))]}))}))}n.loadImage=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return r(this,void 0,void 0,(function(){var n,t,r,a,l,u;return o(this,(function(o){switch(o.label){case 0:o.trys.push([0,5,6,7]),n=i(e),t=n.next(),o.label=1;case 1:return t.done?[3,4]:[4,s(t.value)];case 2:if(r=o.sent())return[2,r];o.label=3;case 3:return t=n.next(),[3,1];case 4:return[3,7];case 5:return a=o.sent(),l={error:a},[3,7];case 6:try{t&&!t.done&&(u=n.return)&&u.call(n)}finally{if(l)throw l.error}return[7];case 7:throw Error("Unable to load image from ".concat(e.map((function(e){return'"'.concat(e,'"')})).join(", ")))}}))}))};var u=new l.GLTFLoader;n.loadGLTF=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,u.loadAsync(e)];case 1:return[2,t.sent().scene];case 2:throw n=t.sent(),console.error('Unable to load GLTF "'.concat(e,'":'),n),n;case 3:return[2]}}))}))};var c=new a.TextureLoader;n.loadTexture=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){c.load(e,n)}))]}))}))}},98:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(142);var u=i(t(294)),c=s(t(383)),d=s(t(883));function A(e){var n=["custom","view-AppView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function f(){for(var e=[0,0,0,0,0,0,0,0],n=0;n<e.length;n++){var t=1+Math.floor(9*Math.random());e[n]=t}return e}n.default=function(e){var n=a(u.useState(f()),2),t=n[0],r=n[1],o=a(u.useState(f()),2),i=o[0],s=o[1],v=function(e,n){var t=a(e,8),r=t[0],o=t[1],i=t[2],l=t[3],s=t[4],u=t[5],c=t[6],d=t[7],A=a(n,8),f=A[0],v=A[1],p=A[2],m=A[3],h=A[4],w=A[5],C=A[6],b=A[7];return{ruleDouble:f+v+p+m+h+w+C+b===2*(r+o+i+l+s+u+c+d),ruleN:r+o+i+f+v+p===11,ruleE:i+s+d+p+h+b===11,ruleS:u+c+d+w+C+b===11,ruleW:r+l+u+f+m+w===11,ruleTotal:!1}}(t,i),p=v.ruleN,m=v.ruleE,h=v.ruleS,w=v.ruleW,C=v.ruleDouble,b=v.ruleTotal;return u.createElement("div",{className:A(e)},u.createElement(d.default,{rooms:t,background:e.assets.images.floor,onRoomClick:function(e){var n=l([],a(t),!1);n[e]=1+n[e]%9,r(n)}}),u.createElement(d.default,{rooms:i,background:e.assets.images.floor,onRoomClick:function(e){var n=l([],a(i),!1);n[e]=1+n[e]%9,s(n)}}),u.createElement("div",{className:"fill"},u.createElement(c.default,{roomsFloor1:t,roomsFloor2:i,meshes:e.assets.meshes,compassTexture:e.assets.textures.compass}),u.createElement("footer",null,u.createElement("div",{className:p?"yes":"no"},"N"),u.createElement("div",{className:m?"yes":"no"},"E"),u.createElement("div",{className:h?"yes":"no"},"S"),u.createElement("div",{className:w?"yes":"no"},"W"),u.createElement("div",{className:C?"yes":"no"},"x2"),u.createElement("div",{className:b?"yes":"no"},"∑"))))}},342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(98);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},964:function(e,n,t){var r=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useCanvas3D=void 0;var i=t(294),a=t(212),l=o(t(137)),s=o(t(636)),u=function(e){};function c(e,n){var t=Math.PI*(2-e)*.5,r=1.5*Math.sin(t),o=1.5*Math.cos(t),i=new a.Mesh(new a.PlaneGeometry(1,1),new a.MeshPhongMaterial({map:n,transparent:!0,specular:5}));return i.position.set(r,1,o),i.rotation.set(0,t,0),i}function d(e){var n=128,t=document.createElement("canvas");t.width=n,t.height=n;var r=t.getContext("2d");if(!r)throw Error("Unable to create context 2D!");r.clearRect(0,0,n,n),r.font="bold ".concat(64,"px sans-serif");var o="".concat(e),i=.5*(n-r.measureText(o).width);r.fillStyle=11===e?"#0f07":"#f007",r.fillText(o,i,96),r.strokeStyle="#000",r.lineWidth=1.28,r.strokeText(o,i,96);var l=new a.CanvasTexture(t);return l.flipY=!0,l}n.useCanvas3D=function(e,n,t,o,A){(0,i.useRef)(u);var f=(0,i.useRef)((function(e,n,t,r){})),v=r(n,8),p=v[0],m=v[1],h=v[2],w=v[3],C=v[4],b=v[5],g=v[6],y=v[7],B=r(t,8),I=B[0],_=B[1],x=B[2],k=B[3],S=B[4],E=B[5],P=B[6],M=B[7],V=p+m+h+I+_+x,j=h+C+y+x+S+M,O=b+g+y+E+P+M,T=p+w+b+I+k+E;(0,i.useEffect)((function(){var n=e.current;if(n){var t=function(e,n,t){var r=new a.WebGLRenderer({canvas:e}),o=e.width/e.height,i=new a.PerspectiveCamera(45,o,.1,100);i.position.set(2,3,5),i.lookAt(0,0,0);var l=new a.AmbientLight(14544639,1),s=new a.DirectionalLight(16777215,1);s.position.set(-1,5,5),s.target.position.set(0,0,0);var u=new a.Scene;u.background=new a.Color("#def");var A=new a.Group,f=c(0,d(0)),v=c(1,d(1)),p=c(2,d(2)),m=c(3,d(3));m.material.map=d(666),A.add(n.convent,function(e){var n=new a.Mesh(new a.PlaneGeometry(4,4),new a.MeshPhongMaterial({map:e,transparent:!0}));return n.position.set(0,-.5,0),n.rotateX(-Math.PI/2),n}(t),f,v,p,m),u.add(A,l,s);var h=0,w=0,C=0,b=function(n){var t=null!=n?n:C;C=t,e.clientWidth===h&&e.clientHeight===w||(h=e.clientWidth,w=e.clientHeight,e.width=h,e.height=w,i.aspect=h/w,i.updateProjectionMatrix(),r.setSize(h,w,!1)),A.rotation.set(0,t,0),r.render(u,i)};window.requestAnimationFrame((function(){return b()}));var g=0,y=0,B=0,I=0;return{paint:b,updateTotals:function(e,n,t,r){g!==e&&(g=e,f.material.map=d(e)),y!==n&&(y=e,v.material.map=d(n)),B!==t&&(B=e,p.material.map=d(t)),I!==r&&(I=e,m.material.map=d(r)),window.requestAnimationFrame((function(){return b()}))}}}(n,o,A),r=t.paint,i=t.updateTotals;f.current=i;var u=new s.default(r),v=new l.default(n,u.handleStart,u.handlePan,u.handleSwipe);return function(){return v.detach()}}}),[e]),(0,i.useEffect)((function(){f.current(V,j,O,T)}),[f,V,j,O,T])}},153:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(114);var a=i(t(294)),l=t(964);function s(e){var n=["custom","view-Convent3dView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=a.useRef(null);return(0,l.useCanvas3D)(n,e.roomsFloor1,e.roomsFloor2,e.meshes,e.compassTexture),a.createElement("canvas",{className:s(e),ref:n})}},383:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(153);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},636:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=Math.PI,r=function(){function e(e){var n=this;this.onChange=e,this.angle=0,this.speed=0,this.timeStamp=0,this.handleStart=function(){n.speed=0},this.handlePan=function(e){n.fire(n.angle+t*e.deltaX)},this.handleSwipe=function(e){n.angle+=t*e.deltaX,n.speed=e.vectorX,n.timeStamp=0,window.requestAnimationFrame(n.anim)},this.anim=function(e){if(0===n.timeStamp)return n.timeStamp=e,void window.requestAnimationFrame(n.anim);var t=e-n.timeStamp;n.timeStamp=e,n.angle+=n.speed*t,n.onChange(n.angle);var r=Math.pow(.5,.001*t);n.speed*=r,Math.abs(n.speed)>1e-4?window.requestAnimationFrame(n.anim):console.log("STOP!",n.speed)}}return e.prototype.fire=function(e){var n=this;window.requestAnimationFrame((function(){return n.onChange(e)}))},e}();n.default=r},252:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(999);var a=i(t(294));function l(e){var n=["custom","view-ConventFloorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=e.rooms,t=function(e,n){return function(t){return a.createElement("div",{key:"room-".concat(t),onClick:function(){return n(t)}},e[t])}}(n,e.onRoomClick);return a.createElement("div",{className:l(e),style:{backgroundImage:"url(".concat(e.background.src,")")}},a.createElement("div",null,[0,1,2,3].map(t),a.createElement("div",{className:"total"},function(e){return e.reduce((function(e,n){return e+n}),0)}(n)),[4,5,6,7].map(t)))}},883:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(252);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},236:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/compass.b8b993f8a20a5319a8356fef427a810b.png"},462:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/convent.3f68cd6fb74a45ed7703701bd69fa791.glb"},173:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/floor.14447419a22a2562785cec0065a16cb5.png"},570:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/floor.7337eaa7fe38ab3b2726832843f956b8.webp"}},e=>{e.O(0,[977],(()=>(796,e(e.s=796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,