"use strict";(self.webpackChunkpuzzle_convent=self.webpackChunkpuzzle_convent||[]).push([[143],{1424:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;IAEI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,uBAAuB;IACvB,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,WAAW;IACX,SAAS;IACT;;;;;;KAMC;AACL",sourcesContent:["html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n"],sourceRoot:""}]);const l=a},2404:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".inputDigit-DigicodeView {\n    position: absolute;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    gap: 6px;\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n\n.inputDigit-DigicodeView > button {\n    font: inherit;\n    font-size: 30px;\n    border: none;\n    background-color: oldlace;\n    color: #752;\n    text-shadow: 0.0625em 0.0625em 0.125em #000;\n    display: grid;\n    place-items: center;\n    width: 2em;\n    height: 2em;\n    cursor: pointer;\n    border-radius: 50%;\n}\n","",{version:3,sources:["webpack://./src/input-digit/digicode/digicode-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,aAAa;IACb,qCAAqC;IACrC,kCAAkC;IAClC,QAAQ;IACR,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,2CAA2C;IAC3C,aAAa;IACb,mBAAmB;IACnB,UAAU;IACV,WAAW;IACX,eAAe;IACf,kBAAkB;AACtB",sourcesContent:[".inputDigit-DigicodeView {\n    position: absolute;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    gap: 6px;\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n\n.inputDigit-DigicodeView > button {\n    font: inherit;\n    font-size: 30px;\n    border: none;\n    background-color: oldlace;\n    color: #752;\n    text-shadow: 0.0625em 0.0625em 0.125em #000;\n    display: grid;\n    place-items: center;\n    width: 2em;\n    height: 2em;\n    cursor: pointer;\n    border-radius: 50%;\n}\n"],sourceRoot:""}]);const l=a},6956:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"div.inputDigit {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition: background-color 0.3s;\n    z-index: 9999;\n}\n\ndiv.inputDigit.darken {\n    background-color: #0007;\n}\n","",{version:3,sources:["webpack://./src/input-digit/input-digit.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,iCAAiC;IACjC,aAAa;AACjB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["div.inputDigit {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition: background-color 0.3s;\n    z-index: 9999;\n}\n\ndiv.inputDigit.darken {\n    background-color: #0007;\n}\n"],sourceRoot:""}]);const l=a},4073:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView > .fill > footer > div {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView > .fill > footer > div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView > .fill > footer > div.no {\n    background-color: #b00;\n    color: #fff;\n}\n","",{version:3,sources:["webpack://./src/view/app/app-view.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,gBAAgB;AACpB;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,4BAA4B;IAC5B,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;IACI,sBAAsB;IACtB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf",sourcesContent:[".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView > .fill > footer > div {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView > .fill > footer > div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView > .fill > footer > div.no {\n    background-color: #b00;\n    color: #fff;\n}\n"],sourceRoot:""}]);const l=a},6532:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/view/convent-3d/convent-3d-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n"],sourceRoot:""}]);const l=a},5875:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    color: #000a;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n}\n","",{version:3,sources:["webpack://./src/view/convent-floor/convent-floor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qCAAqC;IACrC,wBAAwB;IACxB,4BAA4B;IAC5B,2BAA2B;IAC3B,wCAAwC;AAC5C;;AAEA;IACI;QACI,mBAAmB;QACnB,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;IAChB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,mCAAmC;IACnC,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;AACnB",sourcesContent:[".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    color: #000a;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n}\n"],sourceRoot:""}]);const l=a},1981:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(1424),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},5389:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(2404),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},9090:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(6956),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},1142:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(4073),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},6114:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(6532),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},7999:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),d=t(9216),f=t.n(d),A=t(4589),p=t.n(A),v=t(5875),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=s().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=f(),o()(v.Z,h);const m=v.Z&&v.Z.locals?v.Z.locals:void 0},6137:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,r,o){var i=this;this.element=e,this.onStart=n,this.onPan=r,this.onSwipe=o,this.timeStamp=0,this.x=0,this.y=0,this.handlePointerDown=function(e){i.timeStamp=e.timeStamp;var n=t(i.getCoords(e),2),r=n[0],o=n[1];i.x=r,i.y=o,i.onStart()},this.handlePointerMove=function(e){var n=i,r=n.timeStamp,o=n.onPan;if(0!==r){var a=t(i.getCoords(e),2),l=a[0],s=a[1];o({deltaX:l-i.x,deltaY:s-i.y})}},this.handlePointerUp=function(e){var n=i,r=n.timeStamp,o=n.onSwipe,a=t(i.getCoords(e),2),l=a[0],s=a[1],u=l-i.x,c=s-i.y,d=e.timeStamp-r;o({deltaX:u,deltaY:c,vectorX:u/d,vectorY:c/d}),i.timeStamp=0},e.addEventListener("pointerdown",this.handlePointerDown,!1),e.addEventListener("pointermove",this.handlePointerMove,!1),e.addEventListener("pointerup",this.handlePointerUp,!1)}return e.prototype.detach=function(){var e=this.element;e.removeEventListener("pointerdown",this.handlePointerDown,!1),e.removeEventListener("pointermove",this.handlePointerMove,!1),e.removeEventListener("pointerup",this.handlePointerUp,!1)},e.prototype.getCoords=function(e){var n=this.element.getBoundingClientRect();return[(e.clientX-n.left)/n.width,(e.clientY-n.top)/n.height]},e}();n.default=r},9927:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useHistoryState=void 0;var l=i(t(7294)),s="".concat(Math.random(),"HistoryState").concat(Date.now()).substr(2);n.useHistoryState=function(e,n){var t=function(n){var t;console.log("🚀 PUSH ",n),window.history.pushState(((t={})[s]=e,t.value=n,t),"")},r=a(l.useState(n),2),o=r[0],i=r[1];return l.useEffect((function(){t(n);var r=function(n){var t=n.state;console.log("🚀 POP ",t),function(e){return!!e&&!Array.isArray(e)&&"object"==typeof e}(t)?t[s]===e?i(t.value):console.error("Wrong key:",s,t):console.error("Not an object!",t)};return window.addEventListener("popstate",r),function(){return window.removeEventListener("popstate",r)}}),[e]),[o,function(e){i(e),t(e)}]}},5796:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1981);var a=t(4827),l=i(t(1342)),s=i(t(7236)),u=i(t(9462)),c=i(t(3173)),d=i(t(2570)),f=i(t(7294)),A=i(t(3935));!function(){r(this,void 0,void 0,(function(){var e,n,t,r;return o(this,(function(o){switch(o.label){case 0:return[4,(0,a.loadTexture)(s.default)];case 1:return e=o.sent(),[4,(0,a.loadImage)(d.default,c.default)];case 2:return n=o.sent(),[4,(0,a.loadGLTF)(u.default)];case 3:return t=o.sent(),r={images:{floor:n},meshes:{convent:t},textures:{compass:e}},A.default.render(f.default.createElement(l.default,{assets:r}),document.getElementById("root")),(i=document.getElementById("tgd-logo"))&&(i.classList.add("vanish"),window.setTimeout((function(){var e=i.parentNode;e&&e.removeChild(i)}),900)),[2]}var i}))}))}()},4060:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(5389);var a=i(t(7294)),l=[1,2,3,4,5,6,7,8,9];function s(e){var n=["custom","inputDigit-DigicodeView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function u(e,n,t){return e<n?n:e>t?t:e}function c(e){return.5*e}n.default=function(e){var n=a.useRef(null);return a.useEffect((function(){var t=n.current;if(t){var r=t.getBoundingClientRect(),o=r.width,i=r.height,a=document.body,l=u(e.x-c(o),0,a.clientWidth-o),s=u(e.y-c(i),0,a.clientHeight-i);t.style.left="".concat(l,"px"),t.style.top="".concat(s,"px"),t.style.opacity="1"}}),[n,e.x,e.y]),a.createElement("div",{ref:n,className:s(e)},l.map((function(n){return a.createElement("button",{key:n,onClick:function(){return e.onClick(n)}},n)})))}},254:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4060);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8991:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.inputDigit=void 0;var r=t(417);Object.defineProperty(n,"inputDigit",{enumerable:!0,get:function(){return r.inputDigit}})},417:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.inputDigit=void 0,t(9090);var a=i(t(254)),l=i(t(7294)),s=i(t(3935));n.inputDigit=function(e,n){return r(this,void 0,void 0,(function(){return o(this,(function(t){return[2,new Promise((function(t){var r=document.createElement("div");r.classList.add("inputDigit"),document.body.appendChild(r),window.setTimeout((function(){return r.classList.add("darken")})),s.default.render(l.default.createElement(a.default,{x:e,y:n,onClick:function(e){document.body.removeChild(r),t(e)}}),r)}))]}))}))}},4827:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.loadTexture=n.loadGLTF=n.loadImage=void 0;var a=t(2212),l=t(1217);function s(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){var t=new Image;t.src=e,t.onload=function(){return n(t)},t.onerror=function(){return n(null)}}))]}))}))}n.loadImage=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return r(this,void 0,void 0,(function(){var n,t,r,a,l,u;return o(this,(function(o){switch(o.label){case 0:o.trys.push([0,5,6,7]),n=i(e),t=n.next(),o.label=1;case 1:return t.done?[3,4]:[4,s(t.value)];case 2:if(r=o.sent())return[2,r];o.label=3;case 3:return t=n.next(),[3,1];case 4:return[3,7];case 5:return a=o.sent(),l={error:a},[3,7];case 6:try{t&&!t.done&&(u=n.return)&&u.call(n)}finally{if(l)throw l.error}return[7];case 7:throw Error("Unable to load image from ".concat(e.map((function(e){return'"'.concat(e,'"')})).join(", ")))}}))}))};var u=new l.GLTFLoader;n.loadGLTF=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,u.loadAsync(e)];case 1:return[2,t.sent().scene];case 2:throw n=t.sent(),console.error('Unable to load GLTF "'.concat(e,'":'),n),n;case 3:return[2]}}))}))};var c=new a.TextureLoader;n.loadTexture=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){c.load(e,n)}))]}))}))}},4429:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.useApplicationState=void 0;var r=t(2726);Object.defineProperty(n,"useApplicationState",{enumerable:!0,get:function(){return r.useApplicationState}})},2726:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.setPeopleInRoomAtFloor2=n.setPeopleInRoomAtFloor1=n.useApplicationState=void 0;var a=t(9927),l={roomsFloor1:[3,1,3,2,2,3,1,3],roomsFloor2:[3,1,3,2,2,3,1,3],totalPeople:36,step:1,showInstructions:!0};n.useApplicationState=function(){var e=o((0,a.useHistoryState)("puzzle/convent",l),2),n=e[0],t=e[1];return{state:n,setPeopleInRoomAtFloor1:function(e,a){if(!(e<0||e>8||a<1||a>9)){var l=i([],o(n.roomsFloor1),!1);l[e]=a,t(r(r({},n),{roomsFloor1:l}))}},setPeopleInRoomAtFloor2:function(e,a){if(!(e<0||e>8||a<1||a>9)){var l=i([],o(n.roomsFloor2),!1);l[e]=a,t(r(r({},n),{roomsFloor2:l}))}}}},n.setPeopleInRoomAtFloor1=function(e,n,t){if(n<0||n>8)return e;if(t<1||t>9)return e;var a=i([],o(e.roomsFloor1),!1);return a[n]=t,r(r({},e),{roomsFloor1:a})},n.setPeopleInRoomAtFloor2=function(e,n,t){if(n<0||n>8)return e;if(t<1||t>9)return e;var a=i([],o(e.roomsFloor2),!1);return a[n]=t,r(r({},e),{roomsFloor2:a})}},8098:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},s=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1142);var c=i(t(7294)),d=u(t(6383)),f=u(t(4883)),A=t(8991),p=t(4429);function v(e){var n=["custom","view-AppView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function h(e,n,t,r){return a(this,void 0,void 0,(function(){var o;return l(this,(function(i){switch(i.label){case 0:return[4,(0,A.inputDigit)(n,t)];case 1:return o=i.sent(),r(e,o),[2]}}))}))}n.default=function(e){var n=(0,p.useApplicationState)(),t=n.state,r=n.setPeopleInRoomAtFloor1,o=n.setPeopleInRoomAtFloor2,i=function(e,n,t){var r,o=s(e,8),i=o[0],a=o[1],l=o[2],u=o[3],c=o[4],d=o[5],f=o[6],A=o[7],p=s(n,8),v=p[0],h=p[1],m=p[2],w=p[3],b=p[4],g=p[5],y=p[6],C=p[7];return{ruleDouble:v+h+m+w+b+g+y+C===(r=i+a+l+u+c+d+f+A,r+r),ruleN:i+a+l+v+h+m===11,ruleE:l+c+A+m+b+C===11,ruleS:d+f+A+g+y+C===11,ruleW:i+u+d+v+w+g===11,ruleTotal:t===i+a+l+u+c+d+f+A+v+h+m+w+b+g+y+C}}(t.roomsFloor1,t.roomsFloor2,t.totalPeople),a=i.ruleN,l=i.ruleE,u=i.ruleS,A=i.ruleW,m=i.ruleDouble,w=i.ruleTotal;return c.createElement("div",{className:v(e)},c.createElement(f.default,{rooms:t.roomsFloor1,background:e.assets.images.floor,onRoomClick:function(e,n,t){return h(e,n,t,r)}}),c.createElement(f.default,{rooms:t.roomsFloor2,background:e.assets.images.floor,onRoomClick:function(e,n,t){return h(e,n,t,o)}}),function(e,n,t,r,o,i,a,l,s){return c.createElement("div",{className:"fill"},c.createElement(d.default,{roomsFloor1:e,roomsFloor2:n,meshes:t.assets.meshes,compassTexture:t.assets.textures.compass}),function(e,n,t,r,o,i){return c.createElement("footer",null,c.createElement("div",{className:e?"yes":"no"},"N"),c.createElement("div",{className:n?"yes":"no"},"E"),c.createElement("div",{className:t?"yes":"no"},"S"),c.createElement("div",{className:r?"yes":"no"},"W"),c.createElement("div",{className:o?"yes":"no"},"x2"),c.createElement("div",{className:i?"yes":"no"},"∑"))}(r,o,i,a,l,s))}(t.roomsFloor1,t.roomsFloor2,e,a,l,u,A,m,w))}},1342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8098);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},3964:function(e,n,t){var r=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useCanvas3D=void 0;var i=o(t(6137)),a=t(2212),l=t(7294),s=o(t(1636));function u(e,n){var t=Math.PI*(2-e)*.5,r=1.5*Math.sin(t),o=1.5*Math.cos(t),i=new a.Mesh(new a.PlaneGeometry(1.4,1.4),new a.MeshPhongMaterial({map:n,transparent:!0,specular:5}));return i.position.set(r,0,o),i.rotation.set(0,t,0),i}function c(e){var n=128,t=document.createElement("canvas");t.width=n,t.height=n;var r=t.getContext("2d");if(!r)throw Error("Unable to create context 2D!");r.clearRect(0,0,n,n),r.font="bold ".concat(64,"px sans-serif");var o="".concat(e),i=.5*(n-r.measureText(o).width);r.fillStyle=11===e?"#0f0b":"#f00b",r.fillText(o,i,96),r.strokeStyle="#000",r.lineWidth=3.84,r.strokeText(o,i,96);var l=new a.CanvasTexture(t);return l.flipY=!0,l}n.useCanvas3D=function(e,n,t,o,d){var f=(0,l.useRef)((function(e,n,t,r){})),A=r(n,8),p=A[0],v=A[1],h=A[2],m=A[3],w=A[4],b=A[5],g=A[6],y=A[7],C=r(t,8),I=C[0],B=C[1],_=C[2],k=C[3],x=C[4],P=C[5],S=C[6],E=C[7],j=p+v+h+I+B+_,O=h+w+y+_+x+E,M=b+g+y+P+S+E,F=p+m+b+I+k+P;(0,l.useEffect)((function(){var n=e.current;if(n){var t=function(e,n,t){var r=new a.WebGLRenderer({canvas:e}),o=function(e){var n=new a.PerspectiveCamera(45,e,.1,100);return n.position.set(2,3,5),n.lookAt(0,0,0),n}(e.width/e.height),i=function(){var e=new a.AmbientLight(16777215,1),n=new a.DirectionalLight(16772829,2);return n.position.set(-1,1,5),n.target.position.set(0,0,0),{ambientLight:e,directionalLight:n}}(),l=i.ambientLight,s=i.directionalLight,d=new a.Scene;d.background=new a.Color("#def");var f=new a.Group,A=function(){var e=u(0,c(0)),n=u(1,c(1)),t=u(2,c(2)),r=u(3,c(3));return r.material.map=c(666),{faceN:e,faceE:n,faceS:t,faceW:r}}(),p=A.faceN,v=A.faceE,h=A.faceS,m=A.faceW;f.add(n.convent,function(e){var n=new a.Mesh(new a.PlaneGeometry(4,4),new a.MeshPhongMaterial({map:e,transparent:!0}));return n.position.set(0,-.5,0),n.rotateX(-Math.PI/2),n}(t),p,v,h,m),d.add(f,l,s);var w=function(e,n,t,r,o){var i=0,a=0,l=0;return function(s){var u=null!=s?s:l;l=u,e.clientWidth===i&&e.clientHeight===a||(i=e.clientWidth,a=e.clientHeight,e.width=i,e.height=a,n.aspect=i/a,n.updateProjectionMatrix(),t.setSize(i,a,!1)),r.rotation.set(0,u,0),t.render(o,n)}}(e,o,r,f,d);window.requestAnimationFrame((function(){return w()}));var b=function(e,n,t,r,o){var i=0,a=0,l=0,s=0;return function(u,d,f,A){i!==u&&(i=u,e.material.map=c(u)),a!==d&&(a=u,n.material.map=c(d)),l!==f&&(l=u,t.material.map=c(f)),s!==A&&(s=u,r.material.map=c(A)),window.requestAnimationFrame((function(){return o()}))}}(p,v,h,m,w);return{paint:w,updateTotals:b}}(n,o,d),r=t.paint,l=t.updateTotals;f.current=l;var A=new s.default(r),p=new i.default(n,A.handleStart,A.handlePan,A.handleSwipe);return function(){return p.detach()}}}),[e]),(0,l.useEffect)((function(){f.current(j,O,M,F)}),[f,j,O,M,F])}},9153:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(6114);var a=i(t(7294)),l=t(3964);function s(e){var n=["custom","view-Convent3dView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=a.useRef(null);return(0,l.useCanvas3D)(n,e.roomsFloor1,e.roomsFloor2,e.meshes,e.compassTexture),a.createElement("canvas",{className:s(e),ref:n})}},6383:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(9153);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1636:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=Math.PI,r=function(){function e(e){var n=this;this.onChange=e,this.angle=-.4,this.speed=.001,this.timeStamp=0,this.handleStart=function(){n.speed=0},this.handlePan=function(e){n.fire(n.angle+t*e.deltaX)},this.handleSwipe=function(e){n.angle+=t*e.deltaX,n.speed=e.vectorX,n.timeStamp=0,window.requestAnimationFrame(n.anim)},this.anim=function(e){if(0===n.timeStamp)return n.timeStamp=e,void window.requestAnimationFrame(n.anim);var t=e-n.timeStamp;n.timeStamp=e,n.angle+=n.speed*t,n.onChange(n.angle);var r=Math.pow(.5,.001*t);n.speed*=r,Math.abs(n.speed)>1e-4?window.requestAnimationFrame(n.anim):console.log("STOP!",n.speed)},window.requestAnimationFrame(this.anim)}return e.prototype.fire=function(e){var n=this;window.requestAnimationFrame((function(){return n.onChange(e)}))},e}();n.default=r},8252:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(7999);var a=i(t(7294)),l=[0,1,2,3],s=[4,5,6,7];function u(e){var n=["custom","view-ConventFloorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=e.rooms,t=function(e,n){return function(t){return a.createElement("div",{key:"room-".concat(t),onClick:function(e){var r=function(e){for(var n=e;n&&"static"===window.getComputedStyle(n).position;)n=n.parentElement;return n?n.getBoundingClientRect():{left:0,top:0}}(e.target),o=r.left,i=r.top;n(t,e.clientX+o,e.clientY+i)}},e[t])}}(n,e.onRoomClick);return a.createElement("div",{className:u(e),style:{backgroundImage:"url(".concat(e.background.src,")")}},a.createElement("div",null,l.map(t),a.createElement("div",{className:"total"},function(e){return e.reduce((function(e,n){return e+n}),0)}(n)),s.map(t)))}},4883:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8252);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7236:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/compass.b8b993f8a20a5319a8356fef427a810b.png"},9462:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/convent.57479d48035a9bfad3ec2ec11b8d71d9.glb"},3173:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/floor.14447419a22a2562785cec0065a16cb5.png"},2570:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"img/floor.7337eaa7fe38ab3b2726832843f956b8.webp"}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbmRleC5jc3MiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvaW5wdXQtZGlnaXQvZGlnaWNvZGUvZGlnaWNvZGUtdmlldy5jc3MiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvaW5wdXQtZGlnaXQvaW5wdXQtZGlnaXQuY3NzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3ZpZXcvYXBwL2FwcC12aWV3LmNzcyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2NvbnZlbnQtM2QvY29udmVudC0zZC12aWV3LmNzcyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2NvbnZlbnQtZmxvb3IvY29udmVudC1mbG9vci12aWV3LmNzcyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbmRleC5jc3M/OTA5NSIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbnB1dC1kaWdpdC9kaWdpY29kZS9kaWdpY29kZS12aWV3LmNzcz9lYTExIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL2lucHV0LWRpZ2l0L2lucHV0LWRpZ2l0LmNzcz9kYjI0Iiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3ZpZXcvYXBwL2FwcC12aWV3LmNzcz9lN2ExIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3ZpZXcvY29udmVudC0zZC9jb252ZW50LTNkLXZpZXcuY3NzPzhkNTIiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvdmlldy9jb252ZW50LWZsb29yL2NvbnZlbnQtZmxvb3Itdmlldy5jc3M/NjdlNyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9nZXN0dXJlcy9zd2lwZS50cyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9ob29rcy9oaXN0b3J5LXN0YXRlLnRzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbnB1dC1kaWdpdC9kaWdpY29kZS9kaWdpY29kZS12aWV3LnRzeCIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbnB1dC1kaWdpdC9kaWdpY29kZS9pbmRleC50cyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbnB1dC1kaWdpdC9pbmRleC50cyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9pbnB1dC1kaWdpdC9pbnB1dC1kaWdpdC50c3giLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvbG9hZGVyLnRzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3N0YXRlL2luZGV4LnRzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3N0YXRlL3N0YXRlLnRzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL3ZpZXcvYXBwL2FwcC12aWV3LnRzeCIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2FwcC9pbmRleC50cyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2NvbnZlbnQtM2QvY29udmVudC0zZC1ob29rcy50cyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2NvbnZlbnQtM2QvY29udmVudC0zZC12aWV3LnRzeCIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy92aWV3L2NvbnZlbnQtM2QvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvdmlldy9jb252ZW50LTNkL3JvdGF0aW9uLW1hbmFnZXIudHMiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvdmlldy9jb252ZW50LWZsb29yL2NvbnZlbnQtZmxvb3Itdmlldy50c3giLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvdmlldy9jb252ZW50LWZsb29yL2luZGV4LnRzIiwid2VicGFjazovL3B1enpsZS1jb252ZW50Ly4vc3JjL2dmeC9jb21wYXNzLnBuZyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9nZngvY29udmVudC5nbGIiLCJ3ZWJwYWNrOi8vcHV6emxlLWNvbnZlbnQvLi9zcmMvZ2Z4L2Zsb29yLnBuZyIsIndlYnBhY2s6Ly9wdXp6bGUtY29udmVudC8uL3NyYy9nZngvZmxvb3Iud2VicCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWwsXFxyXFxuYm9keSB7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gICAgZm9udC1zaXplOiA1dm1pbjtcXHJcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxyXFxuICAgIG1hcmdpbjogMDtcXHJcXG4gICAgcGFkZGluZzogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RlZjtcXHJcXG59XFxyXFxuXFxyXFxuI3RnZC1sb2dvLnZhbmlzaCB7XFxyXFxuICAgIG9wYWNpdHk6IDA7XFxyXFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC45cztcXHJcXG59XFxyXFxuXFxyXFxuaHIge1xcclxcbiAgICBtYXJnaW46IDEuNXJlbSAwO1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMXB4O1xcclxcbiAgICBib3JkZXI6IDA7XFxyXFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChcXHJcXG4gICAgICAgIHRvIHJpZ2h0LFxcclxcbiAgICAgICAgdHJhbnNwYXJlbnQsXFxyXFxuICAgICAgICBjdXJyZW50Q29sb3IsXFxyXFxuICAgICAgICBjdXJyZW50Q29sb3IsXFxyXFxuICAgICAgICB0cmFuc3BhcmVudFxcclxcbiAgICApO1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaW5kZXguY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztJQUVJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0lBQ3ZCLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsV0FBVztJQUNYLFdBQVc7SUFDWCxTQUFTO0lBQ1Q7Ozs7OztLQU1DO0FBQ0xcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbiAgICBmb250LXNpemU6IDV2bWluO1xcclxcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBwYWRkaW5nOiAwO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGVmO1xcclxcbn1cXHJcXG5cXHJcXG4jdGdkLWxvZ28udmFuaXNoIHtcXHJcXG4gICAgb3BhY2l0eTogMDtcXHJcXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjlzO1xcclxcbn1cXHJcXG5cXHJcXG5ociB7XFxyXFxuICAgIG1hcmdpbjogMS41cmVtIDA7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxcHg7XFxyXFxuICAgIGJvcmRlcjogMDtcXHJcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxcclxcbiAgICAgICAgdG8gcmlnaHQsXFxyXFxuICAgICAgICB0cmFuc3BhcmVudCxcXHJcXG4gICAgICAgIGN1cnJlbnRDb2xvcixcXHJcXG4gICAgICAgIGN1cnJlbnRDb2xvcixcXHJcXG4gICAgICAgIHRyYW5zcGFyZW50XFxyXFxuICAgICk7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5pbnB1dERpZ2l0LURpZ2ljb2RlVmlldyB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcXG4gICAgZ2FwOiA2cHg7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycztcXG59XFxuXFxuLmlucHV0RGlnaXQtRGlnaWNvZGVWaWV3ID4gYnV0dG9uIHtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IG9sZGxhY2U7XFxuICAgIGNvbG9yOiAjNzUyO1xcbiAgICB0ZXh0LXNoYWRvdzogMC4wNjI1ZW0gMC4wNjI1ZW0gMC4xMjVlbSAjMDAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogMmVtO1xcbiAgICBoZWlnaHQ6IDJlbTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9pbnB1dC1kaWdpdC9kaWdpY29kZS9kaWdpY29kZS12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IscUNBQXFDO0lBQ3JDLGtDQUFrQztJQUNsQyxRQUFRO0lBQ1IsVUFBVTtJQUNWLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixlQUFlO0lBQ2YsWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsMkNBQTJDO0lBQzNDLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsVUFBVTtJQUNWLFdBQVc7SUFDWCxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5pbnB1dERpZ2l0LURpZ2ljb2RlVmlldyB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMywgMWZyKTtcXG4gICAgZ2FwOiA2cHg7XFxuICAgIG9wYWNpdHk6IDA7XFxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycztcXG59XFxuXFxuLmlucHV0RGlnaXQtRGlnaWNvZGVWaWV3ID4gYnV0dG9uIHtcXG4gICAgZm9udDogaW5oZXJpdDtcXG4gICAgZm9udC1zaXplOiAzMHB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IG9sZGxhY2U7XFxuICAgIGNvbG9yOiAjNzUyO1xcbiAgICB0ZXh0LXNoYWRvdzogMC4wNjI1ZW0gMC4wNjI1ZW0gMC4xMjVlbSAjMDAwO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbiAgICB3aWR0aDogMmVtO1xcbiAgICBoZWlnaHQ6IDJlbTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImRpdi5pbnB1dERpZ2l0IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7XFxuICAgIHotaW5kZXg6IDk5OTk7XFxufVxcblxcbmRpdi5pbnB1dERpZ2l0LmRhcmtlbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA3O1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvaW5wdXQtZGlnaXQvaW5wdXQtZGlnaXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0IsaUNBQWlDO0lBQ2pDLGFBQWE7QUFDakI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiZGl2LmlucHV0RGlnaXQge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcXG4gICAgei1pbmRleDogOTk5OTtcXG59XFxuXFxuZGl2LmlucHV0RGlnaXQuZGFya2VuIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDc7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi52aWV3LUFwcFZpZXcge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgZ2FwOiAwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xcbiAgICAudmlldy1BcHBWaWV3IHtcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIH1cXG59XFxuXFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxuICAgIC52aWV3LUFwcFZpZXcge1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgfVxcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gKiB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDFlbTtcXG4gICAgcmlnaHQ6IDFlbTtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBwYWRkaW5nOiAwLjI1ZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtIDFyZW0gMCAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgICBib3JkZXI6IDAuMjVlbSBzb2xpZCAjNjQyO1xcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xcbiAgICBib3gtc2hhZG93OiAwIDAuMTI1ZW0gMC4xMjVlbSAjMDAwIGluc2V0O1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIgPiBkaXYge1xcbiAgICBib3JkZXItcmFkaXVzOiA5OTl2bWF4O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBsaW5lLWhlaWdodDogMS41ZW07XFxuICAgIHdpZHRoOiAxLjVlbTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcXG4gICAgYm94LXNoYWRvdzogMCAwLjEyNWVtIDAuMTI1ZW0gIzAwMDtcXG59XFxuXFxuLnZpZXctQXBwVmlldyA+IC5maWxsID4gZm9vdGVyID4gZGl2LnllcyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZjM7XFxuICAgIGNvbG9yOiAjMDAwO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIgPiBkaXYubm8ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjAwO1xcbiAgICBjb2xvcjogI2ZmZjtcXG59XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3ZpZXcvYXBwL2FwcC12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtJQUNiLDJCQUEyQjtJQUMzQixvQkFBb0I7SUFDcEIsTUFBTTtJQUNOLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJO1FBQ0ksc0JBQXNCO0lBQzFCO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLG1CQUFtQjtJQUN2QjtBQUNKOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsU0FBUztJQUNULGVBQWU7SUFDZixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixtQkFBbUI7SUFDbkIsNEJBQTRCO0lBQzVCLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixVQUFVO0lBQ1Ysa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsb0JBQW9CO0lBQ3BCLGtDQUFrQztBQUN0Qzs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsV0FBVztBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi52aWV3LUFwcFZpZXcge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcbiAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcXG4gICAgZ2FwOiAwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xcbiAgICAudmlldy1BcHBWaWV3IHtcXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIH1cXG59XFxuXFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxuICAgIC52aWV3LUFwcFZpZXcge1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgfVxcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gKiB7XFxuICAgIGZsZXg6IDAgMCBhdXRvO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIGZsZXg6IDEgMSBhdXRvO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDFlbTtcXG4gICAgcmlnaHQ6IDFlbTtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBwYWRkaW5nOiAwLjI1ZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtIDFyZW0gMCAwO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xcbiAgICBib3JkZXI6IDAuMjVlbSBzb2xpZCAjNjQyO1xcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xcbiAgICBib3gtc2hhZG93OiAwIDAuMTI1ZW0gMC4xMjVlbSAjMDAwIGluc2V0O1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIgPiBkaXYge1xcbiAgICBib3JkZXItcmFkaXVzOiA5OTl2bWF4O1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBsaW5lLWhlaWdodDogMS41ZW07XFxuICAgIHdpZHRoOiAxLjVlbTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcXG4gICAgYm94LXNoYWRvdzogMCAwLjEyNWVtIDAuMTI1ZW0gIzAwMDtcXG59XFxuXFxuLnZpZXctQXBwVmlldyA+IC5maWxsID4gZm9vdGVyID4gZGl2LnllcyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZjM7XFxuICAgIGNvbG9yOiAjMDAwO1xcbn1cXG5cXG4udmlldy1BcHBWaWV3ID4gLmZpbGwgPiBmb290ZXIgPiBkaXYubm8ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjAwO1xcbiAgICBjb2xvcjogI2ZmZjtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnZpZXctQ29udmVudDNkVmlldyB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdmlldy9jb252ZW50LTNkL2NvbnZlbnQtM2Qtdmlldy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsT0FBTztJQUNQLE1BQU07SUFDTixXQUFXO0lBQ1gsWUFBWTtBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudmlldy1Db252ZW50M2RWaWV3IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi52aWV3LUNvbnZlbnRGbG9vclZpZXcge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbiAgICAtLXNpemU6IGNhbGMoMTAwdm1heCAqIDAuMyk7XFxuICAgIC0taW5uZXItc2l6ZTogY2FsYyh2YXIoLS1zaXplKSAqIDAuNyk7XFxuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IGNhbGModmFyKC0taW5uZXItc2l6ZSkgKiAwLjIpO1xcbn1cXG5cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBwb3J0cmFpdCkge1xcbiAgICAudmlldy1Db252ZW50Rmxvb3JWaWV3IHtcXG4gICAgICAgIGhlaWdodDogdmFyKC0tc2l6ZSk7XFxuICAgICAgICB3aWR0aDogYXV0bztcXG4gICAgfVxcbn1cXG5cXG5AbWVkaWEgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIHtcXG4gICAgLnZpZXctQ29udmVudEZsb29yVmlldyB7XFxuICAgICAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XFxuICAgICAgICBoZWlnaHQ6IGF1dG87XFxuICAgIH1cXG59XFxuXFxuLnZpZXctQ29udmVudEZsb29yVmlldyA+IGRpdiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIHBsYWNlLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XFxuICAgIHdpZHRoOiB2YXIoLS1pbm5lci1zaXplKTtcXG4gICAgaGVpZ2h0OiB2YXIoLS1pbm5lci1zaXplKTtcXG59XFxuXFxuLnZpZXctQ29udmVudEZsb29yVmlldyA+IGRpdiA+IGRpdiB7XFxuICAgIGNvbG9yOiBvbGRsYWNlO1xcbiAgICB0ZXh0LXNoYWRvdzogMC4xZW0gMC4xZW0gMC4xZW0gIzAwMDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB0cmFuc2l0aW9uOiAwLjNzIGNvbG9yO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXFxuLnZpZXctQ29udmVudEZsb29yVmlldyA+IGRpdiA+IGRpdjpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmRiO1xcbn1cXG5cXG4udmlldy1Db252ZW50Rmxvb3JWaWV3ID4gZGl2ID4gZGl2LnRvdGFsIHtcXG4gICAgZm9udC1zaXplOiA4MCU7XFxuICAgIGNvbG9yOiAjMDAwYTtcXG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XFxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy92aWV3L2NvbnZlbnQtZmxvb3IvY29udmVudC1mbG9vci12aWV3LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsMkJBQTJCO0lBQzNCLHFDQUFxQztJQUNyQyx3QkFBd0I7SUFDeEIsNEJBQTRCO0lBQzVCLDJCQUEyQjtJQUMzQix3Q0FBd0M7QUFDNUM7O0FBRUE7SUFDSTtRQUNJLG1CQUFtQjtRQUNuQixXQUFXO0lBQ2Y7QUFDSjs7QUFFQTtJQUNJO1FBQ0ksa0JBQWtCO1FBQ2xCLFlBQVk7SUFDaEI7QUFDSjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIscUNBQXFDO0lBQ3JDLGtDQUFrQztJQUNsQyx3QkFBd0I7SUFDeEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksY0FBYztJQUNkLG1DQUFtQztJQUNuQyxlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLGlCQUFpQjtJQUNqQixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsZUFBZTtBQUNuQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudmlldy1Db252ZW50Rmxvb3JWaWV3IHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgcGxhY2UtaXRlbXM6IGNlbnRlcjtcXG4gICAgLS1zaXplOiBjYWxjKDEwMHZtYXggKiAwLjMpO1xcbiAgICAtLWlubmVyLXNpemU6IGNhbGModmFyKC0tc2l6ZSkgKiAwLjcpO1xcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XFxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiBjYWxjKHZhcigtLWlubmVyLXNpemUpICogMC4yKTtcXG59XFxuXFxuQG1lZGlhIChvcmllbnRhdGlvbjogcG9ydHJhaXQpIHtcXG4gICAgLnZpZXctQ29udmVudEZsb29yVmlldyB7XFxuICAgICAgICBoZWlnaHQ6IHZhcigtLXNpemUpO1xcbiAgICAgICAgd2lkdGg6IGF1dG87XFxuICAgIH1cXG59XFxuXFxuQG1lZGlhIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxuICAgIC52aWV3LUNvbnZlbnRGbG9vclZpZXcge1xcbiAgICAgICAgd2lkdGg6IHZhcigtLXNpemUpO1xcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xcbiAgICB9XFxufVxcblxcbi52aWV3LUNvbnZlbnRGbG9vclZpZXcgPiBkaXYge1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCAxZnIpO1xcbiAgICB3aWR0aDogdmFyKC0taW5uZXItc2l6ZSk7XFxuICAgIGhlaWdodDogdmFyKC0taW5uZXItc2l6ZSk7XFxufVxcblxcbi52aWV3LUNvbnZlbnRGbG9vclZpZXcgPiBkaXYgPiBkaXYge1xcbiAgICBjb2xvcjogb2xkbGFjZTtcXG4gICAgdGV4dC1zaGFkb3c6IDAuMWVtIDAuMWVtIDAuMWVtICMwMDA7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNpdGlvbjogMC4zcyBjb2xvcjtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcblxcbi52aWV3LUNvbnZlbnRGbG9vclZpZXcgPiBkaXYgPiBkaXY6aG92ZXIge1xcbiAgICBjb2xvcjogI2ZkYjtcXG59XFxuXFxuLnZpZXctQ29udmVudEZsb29yVmlldyA+IGRpdiA+IGRpdi50b3RhbCB7XFxuICAgIGZvbnQtc2l6ZTogODAlO1xcbiAgICBjb2xvcjogIzAwMGE7XFxuICAgIHRleHQtc2hhZG93OiBub25lO1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2RpZ2ljb2RlLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9kaWdpY29kZS12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbnB1dC1kaWdpdC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2lucHV0LWRpZ2l0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hcHAtdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2FwcC12aWV3LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb252ZW50LTNkLXZpZXcuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jb252ZW50LTNkLXZpZXcuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbnZlbnQtZmxvb3Itdmlldy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NvbnZlbnQtZmxvb3Itdmlldy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgaW50ZXJmYWNlIFBhbkV2ZW50IHtcbiAgICAvKiogUGVyY2VudGFnZSBvZiB0aGUgd2lkdGguICovXG4gICAgZGVsdGFYOiBudW1iZXJcbiAgICAvKiogUGVyY2VudGFnZSBvZiB0aGUgaGVpZ2h0LiAqL1xuICAgIGRlbHRhWTogbnVtYmVyXG59XG5cbi8qKlxuICogUGFuIHBlciBtaWxsaXNlY29uZHMuXG4gKiBUaGlzIGV2ZW50IGlzIHRyaWdnZXJlZCB3aGVuIHRoZSB0b3VjaCBlbmRzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN3aXBlRXZlbnQgZXh0ZW5kcyBQYW5FdmVudCB7XG4gICAgdmVjdG9yWDogbnVtYmVyXG4gICAgdmVjdG9yWTogbnVtYmVyXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN3aXBlR2VzdHVyZSB7XG4gICAgLyoqXG4gICAgICogSWYgdGltZXN0YW1wIGlzIGRpZmZmZXJlbnQgb2YgMCwgaXQgaXMgdGhlIHRpbWUgd2hlbiB0aGUgZWxlbWVudFxuICAgICAqIGhhcyBiZWVuIHRvdWNoZWQuXG4gICAgICovXG4gICAgcHJpdmF0ZSB0aW1lU3RhbXAgPSAwXG4gICAgLyoqXG4gICAgICogQ29vcmRzIG9mIHRoZSB0b3VjaCBpbiBwZXJjZW50YWdlIG9mIHRoZSBzaXplLlxuICAgICAqL1xuICAgIHByaXZhdGUgeCA9IDBcbiAgICBwcml2YXRlIHkgPSAwXG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBlbGVtZW50OiBIVE1MRWxlbWVudCxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBvblN0YXJ0OiAoKSA9PiB2b2lkLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG9uUGFuOiAoZXZ0OiBQYW5FdmVudCkgPT4gdm9pZCxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBvblN3aXBlOiAoZXZ0OiBTd2lwZUV2ZW50KSA9PiB2b2lkXG4gICAgKSB7XG4gICAgICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncG9pbnRlcmRvd24nLCB0aGlzLmhhbmRsZVBvaW50ZXJEb3duLCBmYWxzZSlcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIHRoaXMuaGFuZGxlUG9pbnRlck1vdmUsIGZhbHNlKVxuICAgICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIHRoaXMuaGFuZGxlUG9pbnRlclVwLCBmYWxzZSlcbiAgICB9XG5cbiAgICBwdWJsaWMgZGV0YWNoKCkge1xuICAgICAgICBjb25zdCB7IGVsZW1lbnQgfSA9IHRoaXNcbiAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFxuICAgICAgICAgICAgJ3BvaW50ZXJkb3duJyxcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlUG9pbnRlckRvd24sXG4gICAgICAgICAgICBmYWxzZVxuICAgICAgICApXG4gICAgICAgIGVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcbiAgICAgICAgICAgICdwb2ludGVybW92ZScsXG4gICAgICAgICAgICB0aGlzLmhhbmRsZVBvaW50ZXJNb3ZlLFxuICAgICAgICAgICAgZmFsc2VcbiAgICAgICAgKVxuICAgICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIHRoaXMuaGFuZGxlUG9pbnRlclVwLCBmYWxzZSlcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlYWRvbmx5IGhhbmRsZVBvaW50ZXJEb3duID0gKGV2dDogUG9pbnRlckV2ZW50KSA9PiB7XG4gICAgICAgIHRoaXMudGltZVN0YW1wID0gZXZ0LnRpbWVTdGFtcFxuICAgICAgICBjb25zdCBbeCwgeV0gPSB0aGlzLmdldENvb3JkcyhldnQpXG4gICAgICAgIHRoaXMueCA9IHhcbiAgICAgICAgdGhpcy55ID0geVxuICAgICAgICB0aGlzLm9uU3RhcnQoKVxuICAgIH1cblxuICAgIHByaXZhdGUgcmVhZG9ubHkgaGFuZGxlUG9pbnRlck1vdmUgPSAoZXZ0OiBQb2ludGVyRXZlbnQpID0+IHtcbiAgICAgICAgY29uc3QgeyB0aW1lU3RhbXAsIG9uUGFuIH0gPSB0aGlzXG4gICAgICAgIGlmICh0aW1lU3RhbXAgPT09IDApIHJldHVyblxuXG4gICAgICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMuZ2V0Q29vcmRzKGV2dClcbiAgICAgICAgY29uc3QgZXZlbnQ6IFBhbkV2ZW50ID0ge1xuICAgICAgICAgICAgZGVsdGFYOiB4IC0gdGhpcy54LFxuICAgICAgICAgICAgZGVsdGFZOiB5IC0gdGhpcy55LFxuICAgICAgICB9XG4gICAgICAgIG9uUGFuKGV2ZW50KVxuICAgIH1cblxuICAgIHByaXZhdGUgcmVhZG9ubHkgaGFuZGxlUG9pbnRlclVwID0gKGV2dDogUG9pbnRlckV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgdGltZVN0YW1wLCBvblN3aXBlIH0gPSB0aGlzXG4gICAgICAgIGNvbnN0IFt4LCB5XSA9IHRoaXMuZ2V0Q29vcmRzKGV2dClcbiAgICAgICAgY29uc3QgZGVsdGFYID0geCAtIHRoaXMueFxuICAgICAgICBjb25zdCBkZWx0YVkgPSB5IC0gdGhpcy55XG4gICAgICAgIGNvbnN0IGRlbHRhVGltZSA9IGV2dC50aW1lU3RhbXAgLSB0aW1lU3RhbXBcbiAgICAgICAgY29uc3QgZXZlbnQ6IFN3aXBlRXZlbnQgPSB7XG4gICAgICAgICAgICBkZWx0YVgsXG4gICAgICAgICAgICBkZWx0YVksXG4gICAgICAgICAgICB2ZWN0b3JYOiBkZWx0YVggLyBkZWx0YVRpbWUsXG4gICAgICAgICAgICB2ZWN0b3JZOiBkZWx0YVkgLyBkZWx0YVRpbWUsXG4gICAgICAgIH1cbiAgICAgICAgb25Td2lwZShldmVudClcbiAgICAgICAgdGhpcy50aW1lU3RhbXAgPSAwXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRDb29yZHMoZXZ0OiBQb2ludGVyRXZlbnQpOiBbeDogbnVtYmVyLCB5OiBudW1iZXJdIHtcbiAgICAgICAgY29uc3QgeyBlbGVtZW50IH0gPSB0aGlzXG4gICAgICAgIGNvbnN0IHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAoZXZ0LmNsaWVudFggLSByZWN0LmxlZnQpIC8gcmVjdC53aWR0aCxcbiAgICAgICAgICAgIChldnQuY2xpZW50WSAtIHJlY3QudG9wKSAvIHJlY3QuaGVpZ2h0LFxuICAgICAgICBdXG4gICAgfVxufVxuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmNvbnN0IEtFWSA9IGAke01hdGgucmFuZG9tKCl9SGlzdG9yeVN0YXRlJHtEYXRlLm5vdygpfWAuc3Vic3RyKDIpXG5cbi8qKlxuICogVGhlIHN0YXRlIGNhbiBjaGFuZ2Ugd2hlbiB0aGUgdXNlciBjbGljayB0aGUgYnJvd3NlcidzIGJhY2sgYnV0dG9uLlxuICogQHBhcmFtIHN0YXRlSUQgQW4gdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgdHlwZSBvZiBzdGF0ZS5cbiAqIEBwYXJhbSBpbml0aWFsU3RhdGUgVGhlIHN0YXRlIHRvIHN0YXJ0IHdpdGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VIaXN0b3J5U3RhdGU8VD4oXG4gICAgc3RhdGVJRDogc3RyaW5nLFxuICAgIGluaXRpYWxTdGF0ZTogVFxuKTogW3N0YXRlOiBULCBzZXRTdGF0ZTogKHN0YXRlOiBUKSA9PiB2b2lkXSB7XG4gICAgY29uc3QgcHVzaFN0YXRlID0gKHM6IFQpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ/CfmoAgUFVTSCAnLCBzKSAvLyBARklYTUU6IFJlbW92ZSB0aGlzIGxpbmUgd3JpdHRlbiBvbiAyMDIxLTEyLTAxIGF0IDE3OjMwXG4gICAgICAgIHdpbmRvdy5oaXN0b3J5LnB1c2hTdGF0ZShcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBbS0VZXTogc3RhdGVJRCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogcyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnJ1xuICAgICAgICApXG4gICAgfVxuICAgIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlU3RhdGUoaW5pdGlhbFN0YXRlKVxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHB1c2hTdGF0ZShpbml0aWFsU3RhdGUpXG4gICAgICAgIGNvbnN0IGhhbmRsZXIgPSAoZXZ0OiBQb3BTdGF0ZUV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRhOiB1bmtub3duID0gZXZ0LnN0YXRlXG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+agCBQT1AgJywgZGF0YSkgLy8gQEZJWE1FOiBSZW1vdmUgdGhpcyBsaW5lIHdyaXR0ZW4gb24gMjAyMS0xMi0wMSBhdCAxNzozMFxuICAgICAgICAgICAgaWYgKCFpc09iamVjdChkYXRhKSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vdCBhbiBvYmplY3QhJywgZGF0YSlcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChkYXRhW0tFWV0gIT09IHN0YXRlSUQpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdXcm9uZyBrZXk6JywgS0VZLCBkYXRhKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0U3RhdGUoZGF0YS52YWx1ZSBhcyBUKVxuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIGhhbmRsZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncG9wc3RhdGUnLCBoYW5kbGVyKVxuICAgIH0sIFtzdGF0ZUlEXSlcbiAgICByZXR1cm4gW1xuICAgICAgICBzdGF0ZSxcbiAgICAgICAgKG5ld1N0YXRlOiBUKSA9PiB7XG4gICAgICAgICAgICBzZXRTdGF0ZShuZXdTdGF0ZSlcbiAgICAgICAgICAgIHB1c2hTdGF0ZShuZXdTdGF0ZSlcbiAgICAgICAgfSxcbiAgICBdXG59XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGRhdGE6IHVua25vd24pOiBkYXRhIGlzIHsgW2tleTogc3RyaW5nXTogdW5rbm93biB9IHtcbiAgICBpZiAoIWRhdGEpIHJldHVybiBmYWxzZVxuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEpKSByZXR1cm4gZmFsc2VcbiAgICByZXR1cm4gdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnXG59XG4iLCJpbXBvcnQgJy4vaW5kZXguY3NzJ1xuXG5pbXBvcnQgeyBsb2FkR0xURiwgbG9hZEltYWdlLCBsb2FkVGV4dHVyZSB9IGZyb20gJy4vbG9hZGVyJ1xuXG5pbXBvcnQgQXBwVmlldyBmcm9tICcuL3ZpZXcvYXBwJ1xuaW1wb3J0IHsgQXNzZXRzIH0gZnJvbSAnLi90eXBlcydcbmltcG9ydCBDb21wYXNzUG5nIGZyb20gJy4vZ2Z4L2NvbXBhc3MucG5nJ1xuaW1wb3J0IENvbnZlbnRHTFRGIGZyb20gJy4vZ2Z4L2NvbnZlbnQuZ2xiJ1xuaW1wb3J0IEZsb29yUG5nIGZyb20gJy4vZ2Z4L2Zsb29yLnBuZydcbmltcG9ydCBGbG9vcldlYnAgZnJvbSAnLi9nZngvZmxvb3Iud2VicCdcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcbnN0YXJ0KClcblxuYXN5bmMgZnVuY3Rpb24gc3RhcnQoKSB7XG4gICAgY29uc3QgY29tcGFzc1RleHR1cmUgPSBhd2FpdCBsb2FkVGV4dHVyZShDb21wYXNzUG5nKVxuICAgIGNvbnN0IGZsb29ySW1hZ2UgPSBhd2FpdCBsb2FkSW1hZ2UoRmxvb3JXZWJwLCBGbG9vclBuZylcbiAgICBjb25zdCBjb252ZW50TWVzaCA9IGF3YWl0IGxvYWRHTFRGKENvbnZlbnRHTFRGKVxuICAgIGNvbnN0IGFzc2V0czogQXNzZXRzID0ge1xuICAgICAgICBpbWFnZXM6IHtcbiAgICAgICAgICAgIGZsb29yOiBmbG9vckltYWdlLFxuICAgICAgICB9LFxuICAgICAgICBtZXNoZXM6IHtcbiAgICAgICAgICAgIGNvbnZlbnQ6IGNvbnZlbnRNZXNoLFxuICAgICAgICB9LFxuICAgICAgICB0ZXh0dXJlczoge1xuICAgICAgICAgICAgY29tcGFzczogY29tcGFzc1RleHR1cmUsXG4gICAgICAgIH0sXG4gICAgfVxuICAgIFJlYWN0RE9NLnJlbmRlcihcbiAgICAgICAgPEFwcFZpZXcgYXNzZXRzPXthc3NldHN9IC8+LFxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4gICAgKVxuICAgIHJlbW92ZVNwbGFzaFNjcmVlbigpXG59XG5cbmZ1bmN0aW9uIHJlbW92ZVNwbGFzaFNjcmVlbigpIHtcbiAgICBjb25zdCBTUExBU0hfVkFOSVNISU5HX0RFTEFZID0gOTAwXG4gICAgY29uc3Qgc3BsYXNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RnZC1sb2dvJylcbiAgICBpZiAoIXNwbGFzaCkgcmV0dXJuXG5cbiAgICBzcGxhc2guY2xhc3NMaXN0LmFkZCgndmFuaXNoJylcbiAgICB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHNwbGFzaC5wYXJlbnROb2RlXG4gICAgICAgIGlmICghcGFyZW50KSByZXR1cm5cblxuICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoc3BsYXNoKVxuICAgIH0sIFNQTEFTSF9WQU5JU0hJTkdfREVMQVkpXG59XG4iLCJpbXBvcnQgJy4vZGlnaWNvZGUtdmlldy5jc3MnXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5leHBvcnQgaW50ZXJmYWNlIERpZ2ljb2RlVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICB4OiBudW1iZXJcbiAgICB5OiBudW1iZXJcbiAgICBvbkNsaWNrKGRpZ2l0OiBudW1iZXIpOiB2b2lkXG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tYWdpYy1udW1iZXJzXG5jb25zdCBESUdJVFMgPSBbMSwgMiwgMywgNCwgNSwgNiwgNywgOCwgOV1cblxuLyoqXG4gKiBBIDN4MyBncmlkIHdpdGggY2xpY2thYmxlIGRpZ2l0cyBmcm9tIDEgdG8gOS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRGlnaWNvZGVWaWV3KHByb3BzOiBEaWdpY29kZVZpZXdQcm9wcykge1xuICAgIGNvbnN0IHJlZkRpdiA9IFJlYWN0LnVzZVJlZjxudWxsIHwgSFRNTERpdkVsZW1lbnQ+KG51bGwpXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgZGl2ID0gcmVmRGl2LmN1cnJlbnRcbiAgICAgICAgaWYgKGRpdikge1xuICAgICAgICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBkaXYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgICAgIGNvbnN0IHsgYm9keSB9ID0gZG9jdW1lbnRcbiAgICAgICAgICAgIGNvbnN0IHggPSBjbGFtcChwcm9wcy54IC0gaGFsZih3aWR0aCksIDAsIGJvZHkuY2xpZW50V2lkdGggLSB3aWR0aClcbiAgICAgICAgICAgIGNvbnN0IHkgPSBjbGFtcChcbiAgICAgICAgICAgICAgICBwcm9wcy55IC0gaGFsZihoZWlnaHQpLFxuICAgICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICAgICAgYm9keS5jbGllbnRIZWlnaHQgLSBoZWlnaHRcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIGRpdi5zdHlsZS5sZWZ0ID0gYCR7eH1weGBcbiAgICAgICAgICAgIGRpdi5zdHlsZS50b3AgPSBgJHt5fXB4YFxuICAgICAgICAgICAgZGl2LnN0eWxlLm9wYWNpdHkgPSAnMSdcbiAgICAgICAgfVxuICAgIH0sIFtyZWZEaXYsIHByb3BzLngsIHByb3BzLnldKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgcmVmPXtyZWZEaXZ9IGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9PlxuICAgICAgICAgICAge0RJR0lUUy5tYXAoKGRpZ2l0KSA9PiAoXG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBrZXk9e2RpZ2l0fSBvbkNsaWNrPXsoKSA9PiBwcm9wcy5vbkNsaWNrKGRpZ2l0KX0+XG4gICAgICAgICAgICAgICAgICAgIHtkaWdpdH1cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IERpZ2ljb2RlVmlld1Byb3BzKTogc3RyaW5nIHtcbiAgICBjb25zdCBjbGFzc05hbWVzID0gWydjdXN0b20nLCAnaW5wdXREaWdpdC1EaWdpY29kZVZpZXcnXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oJyAnKVxufVxuXG5mdW5jdGlvbiBjbGFtcCh2YWx1ZTogbnVtYmVyLCBtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIge1xuICAgIGlmICh2YWx1ZSA8IG1pbikgcmV0dXJuIG1pblxuICAgIGlmICh2YWx1ZSA+IG1heCkgcmV0dXJuIG1heFxuICAgIHJldHVybiB2YWx1ZVxufVxuZnVuY3Rpb24gaGFsZih2YWx1ZTogbnVtYmVyKSB7XG4gICAgY29uc3QgSEFMRiA9IDAuNVxuICAgIHJldHVybiBIQUxGICogdmFsdWVcbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICcuL2RpZ2ljb2RlLXZpZXcnXG4iLCJleHBvcnQgeyBpbnB1dERpZ2l0IH0gZnJvbSAnLi9pbnB1dC1kaWdpdCdcbiIsImltcG9ydCAnLi9pbnB1dC1kaWdpdC5jc3MnXG5cbmltcG9ydCBEaWdpY29kZSBmcm9tICcuL2RpZ2ljb2RlJ1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlucHV0RGlnaXQoeDogbnVtYmVyLCB5OiBudW1iZXIpOiBQcm9taXNlPG51bWJlcj4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTxudW1iZXI+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgIGNvbnN0IHNjcmVlbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICAgIHNjcmVlbi5jbGFzc0xpc3QuYWRkKCdpbnB1dERpZ2l0JylcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JlZW4pXG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHNjcmVlbi5jbGFzc0xpc3QuYWRkKCdkYXJrZW4nKSlcbiAgICAgICAgUmVhY3RET00ucmVuZGVyKFxuICAgICAgICAgICAgPERpZ2ljb2RlXG4gICAgICAgICAgICAgICAgeD17eH1cbiAgICAgICAgICAgICAgICB5PXt5fVxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhkaWdpdDogbnVtYmVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoc2NyZWVuKVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRpZ2l0KVxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAvPixcbiAgICAgICAgICAgIHNjcmVlblxuICAgICAgICApXG4gICAgfSlcbn1cbiIsImltcG9ydCB7XG4gICAgR3JvdXAgYXMgVGhyZWVHcm91cCxcbiAgICBUZXh0dXJlIGFzIFRocmVlVGV4dHVyZSxcbiAgICBUZXh0dXJlTG9hZGVyIGFzIFRocmVlVGV4dHVyZUxvYWRlcixcbn0gZnJvbSAndGhyZWUnXG5pbXBvcnQgeyBHTFRGTG9hZGVyIGFzIFRocmVlR0xURkxvYWRlciB9IGZyb20gJ3RocmVlL2V4YW1wbGVzL2pzbS9sb2FkZXJzL0dMVEZMb2FkZXInXG5cbi8qKlxuICogQXN5bmNocm9vdXNseSBsb2FkIGFuIGltYWdlIHdob3NlIFVSTCBpcyBpbiB0aGUgYHVybHNgIGxpc3QuXG4gKiBXZSB0cnkgZWFjaCBVUkwgb25jZSBhZnRlciB0aGUgb3RoZXIgdW50aWwgb25lIGlzIGxhb2RlZCB3aXRob3V0IGVycm9yLlxuICogVGhpcyBpcyB1c2VmdWwgZm9yIGNvbXBhdGliaWxpdHkgcHVycG9zZS4gRm9yIGluc3RhbmNlLCBsb2FkaW5nIHRoZSB3ZWJwXG4gKiBiZWZvcmUgdGhlIHBuZy5cbiAqIGBgYHRzXG4gKiBjb25zdCBpbWcgPSBhd2FpdCBsb2FkSW1hZ2UoXCJob3VzZS53ZWJwXCIsIFwiaG91c2UucG5nXCIpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRJbWFnZSguLi51cmxzOiBzdHJpbmdbXSk6IFByb21pc2U8SFRNTEltYWdlRWxlbWVudD4ge1xuICAgIGZvciAoY29uc3QgdXJsIG9mIHVybHMpIHtcbiAgICAgICAgY29uc3QgaW1nID0gYXdhaXQgdHJ5VG9Mb2FkSW1hZ2UodXJsKVxuICAgICAgICBpZiAoaW1nKSByZXR1cm4gaW1nXG4gICAgfVxuICAgIHRocm93IEVycm9yKFxuICAgICAgICBgVW5hYmxlIHRvIGxvYWQgaW1hZ2UgZnJvbSAke3VybHMubWFwKCh1cmwpID0+IGBcIiR7dXJsfVwiYCkuam9pbignLCAnKX1gXG4gICAgKVxufVxuXG5hc3luYyBmdW5jdGlvbiB0cnlUb0xvYWRJbWFnZSh1cmw6IHN0cmluZyk6IFByb21pc2U8SFRNTEltYWdlRWxlbWVudCB8IG51bGw+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2U8SFRNTEltYWdlRWxlbWVudCB8IG51bGw+KChyZXNvbHZlKSA9PiB7XG4gICAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpXG4gICAgICAgIGltZy5zcmMgPSB1cmxcbiAgICAgICAgaW1nLm9ubG9hZCA9ICgpID0+IHJlc29sdmUoaW1nKVxuICAgICAgICBpbWcub25lcnJvciA9ICgpID0+IHJlc29sdmUobnVsbClcbiAgICB9KVxufVxuXG5jb25zdCBHTFRGTG9hZGVyID0gbmV3IFRocmVlR0xURkxvYWRlcigpXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2FkR0xURih1cmw6IHN0cmluZyk6IFByb21pc2U8VGhyZWVHcm91cD4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGdsdGYgPSBhd2FpdCBHTFRGTG9hZGVyLmxvYWRBc3luYyh1cmwpXG4gICAgICAgIHJldHVybiBnbHRmLnNjZW5lXG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgVW5hYmxlIHRvIGxvYWQgR0xURiBcIiR7dXJsfVwiOmAsIGV4KVxuICAgICAgICB0aHJvdyBleFxuICAgIH1cbn1cblxuY29uc3QgVGV4dHVyZUxvYWRlciA9IG5ldyBUaHJlZVRleHR1cmVMb2FkZXIoKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZFRleHR1cmUodXJsOiBzdHJpbmcpOiBQcm9taXNlPFRocmVlVGV4dHVyZT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gVGV4dHVyZUxvYWRlci5sb2FkKHVybCwgcmVzb2x2ZSlcbiAgICB9KVxufVxuIiwiZXhwb3J0IHsgdXNlQXBwbGljYXRpb25TdGF0ZSwgU3RhdGUgfSBmcm9tICcuL3N0YXRlJ1xuIiwiaW1wb3J0IHsgUm9vbXMgfSBmcm9tICcuLi90eXBlcydcbmltcG9ydCB7IHVzZUhpc3RvcnlTdGF0ZSB9IGZyb20gJy4uL2hvb2tzL2hpc3Rvcnktc3RhdGUnXG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGUge1xuICAgIHJvb21zRmxvb3IxOiBSb29tc1xuICAgIHJvb21zRmxvb3IyOiBSb29tc1xuICAgIHRvdGFsUGVvcGxlOiBudW1iZXJcbiAgICBzdGVwOiBudW1iZXJcbiAgICBzaG93SW5zdHJ1Y3Rpb25zOiBib29sZWFuXG59XG5cbmNvbnN0IElOSVRJQUxfU1RBVEU6IFN0YXRlID0ge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tYWdpYy1udW1iZXJzXG4gICAgcm9vbXNGbG9vcjE6IFszLCAxLCAzLCAyLCAyLCAzLCAxLCAzXSxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWFnaWMtbnVtYmVyc1xuICAgIHJvb21zRmxvb3IyOiBbMywgMSwgMywgMiwgMiwgMywgMSwgM10sXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW1hZ2ljLW51bWJlcnNcbiAgICB0b3RhbFBlb3BsZTogMzYsXG4gICAgc3RlcDogMSxcbiAgICBzaG93SW5zdHJ1Y3Rpb25zOiB0cnVlLFxufVxuXG5jb25zdCBNQVhfUk9PTV9JTkRFWCA9IDhcbmNvbnN0IE1JTl9OQl9QRU9QTEUgPSAxXG5jb25zdCBNQVhfTkJfUEVPUExFID0gOVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXBwbGljYXRpb25TdGF0ZSgpIHtcbiAgICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZUhpc3RvcnlTdGF0ZSgncHV6emxlL2NvbnZlbnQnLCBJTklUSUFMX1NUQVRFKVxuICAgIHJldHVybiB7XG4gICAgICAgIHN0YXRlLFxuICAgICAgICBzZXRQZW9wbGVJblJvb21BdEZsb29yMShcbiAgICAgICAgICAgIHRoaXM6IHZvaWQsXG4gICAgICAgICAgICByb29tSW5kZXg6IG51bWJlcixcbiAgICAgICAgICAgIG51bWJlck9mUGVvcGxlOiBudW1iZXJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgcm9vbUluZGV4IDwgMCB8fFxuICAgICAgICAgICAgICAgIHJvb21JbmRleCA+IE1BWF9ST09NX0lOREVYIHx8XG4gICAgICAgICAgICAgICAgbnVtYmVyT2ZQZW9wbGUgPCBNSU5fTkJfUEVPUExFIHx8XG4gICAgICAgICAgICAgICAgbnVtYmVyT2ZQZW9wbGUgPiBNQVhfTkJfUEVPUExFXG4gICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJvb21zRmxvb3IxOiBSb29tcyA9IFsuLi5zdGF0ZS5yb29tc0Zsb29yMV1cbiAgICAgICAgICAgIHJvb21zRmxvb3IxW3Jvb21JbmRleF0gPSBudW1iZXJPZlBlb3BsZVxuICAgICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgICAgIHJvb21zRmxvb3IxLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSxcbiAgICAgICAgc2V0UGVvcGxlSW5Sb29tQXRGbG9vcjIoXG4gICAgICAgICAgICB0aGlzOiB2b2lkLFxuICAgICAgICAgICAgcm9vbUluZGV4OiBudW1iZXIsXG4gICAgICAgICAgICBudW1iZXJPZlBlb3BsZTogbnVtYmVyXG4gICAgICAgICkge1xuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgIHJvb21JbmRleCA8IDAgfHxcbiAgICAgICAgICAgICAgICByb29tSW5kZXggPiBNQVhfUk9PTV9JTkRFWCB8fFxuICAgICAgICAgICAgICAgIG51bWJlck9mUGVvcGxlIDwgTUlOX05CX1BFT1BMRSB8fFxuICAgICAgICAgICAgICAgIG51bWJlck9mUGVvcGxlID4gTUFYX05CX1BFT1BMRVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByb29tc0Zsb29yMjogUm9vbXMgPSBbLi4uc3RhdGUucm9vbXNGbG9vcjJdXG4gICAgICAgICAgICByb29tc0Zsb29yMltyb29tSW5kZXhdID0gbnVtYmVyT2ZQZW9wbGVcbiAgICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICByb29tc0Zsb29yMixcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0sXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0UGVvcGxlSW5Sb29tQXRGbG9vcjEoXG4gICAgc3RhdGU6IFN0YXRlLFxuICAgIHJvb21JbmRleDogbnVtYmVyLFxuICAgIG51bWJlck9mUGVvcGxlOiBudW1iZXJcbik6IFN0YXRlIHtcbiAgICBpZiAocm9vbUluZGV4IDwgMCB8fCByb29tSW5kZXggPiBNQVhfUk9PTV9JTkRFWCkgcmV0dXJuIHN0YXRlXG4gICAgaWYgKG51bWJlck9mUGVvcGxlIDwgTUlOX05CX1BFT1BMRSB8fCBudW1iZXJPZlBlb3BsZSA+IE1BWF9OQl9QRU9QTEUpXG4gICAgICAgIHJldHVybiBzdGF0ZVxuICAgIGNvbnN0IG5ld1Jvb21zRmxvb3IxOiBSb29tcyA9IFsuLi5zdGF0ZS5yb29tc0Zsb29yMV1cbiAgICBuZXdSb29tc0Zsb29yMVtyb29tSW5kZXhdID0gbnVtYmVyT2ZQZW9wbGVcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgcm9vbXNGbG9vcjE6IG5ld1Jvb21zRmxvb3IxLFxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldFBlb3BsZUluUm9vbUF0Rmxvb3IyKFxuICAgIHN0YXRlOiBTdGF0ZSxcbiAgICByb29tSW5kZXg6IG51bWJlcixcbiAgICBudW1iZXJPZlBlb3BsZTogbnVtYmVyXG4pOiBTdGF0ZSB7XG4gICAgaWYgKHJvb21JbmRleCA8IDAgfHwgcm9vbUluZGV4ID4gTUFYX1JPT01fSU5ERVgpIHJldHVybiBzdGF0ZVxuICAgIGlmIChudW1iZXJPZlBlb3BsZSA8IE1JTl9OQl9QRU9QTEUgfHwgbnVtYmVyT2ZQZW9wbGUgPiBNQVhfTkJfUEVPUExFKVxuICAgICAgICByZXR1cm4gc3RhdGVcbiAgICBjb25zdCBuZXdSb29tc0Zsb29yMjogUm9vbXMgPSBbLi4uc3RhdGUucm9vbXNGbG9vcjJdXG4gICAgbmV3Um9vbXNGbG9vcjJbcm9vbUluZGV4XSA9IG51bWJlck9mUGVvcGxlXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHJvb21zRmxvb3IyOiBuZXdSb29tc0Zsb29yMixcbiAgICB9XG59XG4iLCJpbXBvcnQgJy4vYXBwLXZpZXcuY3NzJ1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgQXNzZXRzLCBSb29tcyB9IGZyb20gJy4uLy4uL3R5cGVzJ1xuXG5pbXBvcnQgQ29udmVudDNEVmlldyBmcm9tICcuLi9jb252ZW50LTNkJ1xuaW1wb3J0IEZsb29yVmlldyBmcm9tICcuLi9jb252ZW50LWZsb29yJ1xuaW1wb3J0IHsgaW5wdXREaWdpdCB9IGZyb20gJy4uLy4uL2lucHV0LWRpZ2l0J1xuaW1wb3J0IHsgdXNlQXBwbGljYXRpb25TdGF0ZSB9IGZyb20gJy4uLy4uL3N0YXRlJ1xuXG5leHBvcnQgaW50ZXJmYWNlIEFwcFZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgYXNzZXRzOiBBc3NldHNcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQXBwVmlldyhwcm9wczogQXBwVmlld1Byb3BzKSB7XG4gICAgY29uc3QgeyBzdGF0ZSwgc2V0UGVvcGxlSW5Sb29tQXRGbG9vcjEsIHNldFBlb3BsZUluUm9vbUF0Rmxvb3IyIH0gPVxuICAgICAgICB1c2VBcHBsaWNhdGlvblN0YXRlKClcbiAgICBjb25zdCB7IHJ1bGVOLCBydWxlRSwgcnVsZVMsIHJ1bGVXLCBydWxlRG91YmxlLCBydWxlVG90YWwgfSA9IGNoZWNrUnVsZXMoXG4gICAgICAgIHN0YXRlLnJvb21zRmxvb3IxLFxuICAgICAgICBzdGF0ZS5yb29tc0Zsb29yMixcbiAgICAgICAgc3RhdGUudG90YWxQZW9wbGVcbiAgICApXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2dldENsYXNzTmFtZXMocHJvcHMpfT5cbiAgICAgICAgICAgIDxGbG9vclZpZXdcbiAgICAgICAgICAgICAgICByb29tcz17c3RhdGUucm9vbXNGbG9vcjF9XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZD17cHJvcHMuYXNzZXRzLmltYWdlcy5mbG9vcn1cbiAgICAgICAgICAgICAgICBvblJvb21DbGljaz17KHJvb21JbmRleDogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlcikgPT5cbiAgICAgICAgICAgICAgICAgICAgaW5wdXROYlBlb3BsZShyb29tSW5kZXgsIHgsIHksIHNldFBlb3BsZUluUm9vbUF0Rmxvb3IxKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8Rmxvb3JWaWV3XG4gICAgICAgICAgICAgICAgcm9vbXM9e3N0YXRlLnJvb21zRmxvb3IyfVxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ9e3Byb3BzLmFzc2V0cy5pbWFnZXMuZmxvb3J9XG4gICAgICAgICAgICAgICAgb25Sb29tQ2xpY2s9eyhyb29tSW5kZXg6IG51bWJlciwgeDogbnVtYmVyLCB5OiBudW1iZXIpID0+XG4gICAgICAgICAgICAgICAgICAgIGlucHV0TmJQZW9wbGUocm9vbUluZGV4LCB4LCB5LCBzZXRQZW9wbGVJblJvb21BdEZsb29yMilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge3JlbmRlclByZXZpZXdQYW5lKFxuICAgICAgICAgICAgICAgIHN0YXRlLnJvb21zRmxvb3IxLFxuICAgICAgICAgICAgICAgIHN0YXRlLnJvb21zRmxvb3IyLFxuICAgICAgICAgICAgICAgIHByb3BzLFxuICAgICAgICAgICAgICAgIHJ1bGVOLFxuICAgICAgICAgICAgICAgIHJ1bGVFLFxuICAgICAgICAgICAgICAgIHJ1bGVTLFxuICAgICAgICAgICAgICAgIHJ1bGVXLFxuICAgICAgICAgICAgICAgIHJ1bGVEb3VibGUsXG4gICAgICAgICAgICAgICAgcnVsZVRvdGFsXG4gICAgICAgICAgICApfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIHJlbmRlclByZXZpZXdQYW5lKFxuICAgIHJvb21zRmxvb3IxOiBSb29tcyxcbiAgICByb29tc0Zsb29yMjogUm9vbXMsXG4gICAgcHJvcHM6IEFwcFZpZXdQcm9wcyxcbiAgICBydWxlTjogYm9vbGVhbixcbiAgICBydWxlRTogYm9vbGVhbixcbiAgICBydWxlUzogYm9vbGVhbixcbiAgICBydWxlVzogYm9vbGVhbixcbiAgICBydWxlRG91YmxlOiBib29sZWFuLFxuICAgIHJ1bGVUb3RhbDogYm9vbGVhblxuKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWxsXCI+XG4gICAgICAgICAgICA8Q29udmVudDNEVmlld1xuICAgICAgICAgICAgICAgIHJvb21zRmxvb3IxPXtyb29tc0Zsb29yMX1cbiAgICAgICAgICAgICAgICByb29tc0Zsb29yMj17cm9vbXNGbG9vcjJ9XG4gICAgICAgICAgICAgICAgbWVzaGVzPXtwcm9wcy5hc3NldHMubWVzaGVzfVxuICAgICAgICAgICAgICAgIGNvbXBhc3NUZXh0dXJlPXtwcm9wcy5hc3NldHMudGV4dHVyZXMuY29tcGFzc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7cmVuZGVyRm9vdGVyKHJ1bGVOLCBydWxlRSwgcnVsZVMsIHJ1bGVXLCBydWxlRG91YmxlLCBydWxlVG90YWwpfVxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIHJlbmRlckZvb3RlcihcbiAgICBydWxlTjogYm9vbGVhbixcbiAgICBydWxlRTogYm9vbGVhbixcbiAgICBydWxlUzogYm9vbGVhbixcbiAgICBydWxlVzogYm9vbGVhbixcbiAgICBydWxlRG91YmxlOiBib29sZWFuLFxuICAgIHJ1bGVUb3RhbDogYm9vbGVhblxuKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGZvb3Rlcj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtydWxlTiA/ICd5ZXMnIDogJ25vJ30+TjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3J1bGVFID8gJ3llcycgOiAnbm8nfT5FPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17cnVsZVMgPyAneWVzJyA6ICdubyd9PlM8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtydWxlVyA/ICd5ZXMnIDogJ25vJ30+VzwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3J1bGVEb3VibGUgPyAneWVzJyA6ICdubyd9PngyPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17cnVsZVRvdGFsID8gJ3llcycgOiAnbm8nfT7iiJE8L2Rpdj5cbiAgICAgICAgPC9mb290ZXI+XG4gICAgKVxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBBcHBWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbJ2N1c3RvbScsICd2aWV3LUFwcFZpZXcnXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oJyAnKVxufVxuXG5mdW5jdGlvbiBjaGVja1J1bGVzKFxuICAgIHJvb21zRmxvb3IxOiBSb29tcyxcbiAgICByb29tc0Zsb29yMjogUm9vbXMsXG4gICAgZXhwZWN0ZWRQZW9wbGU6IG51bWJlclxuKToge1xuICAgIHJ1bGVOOiBib29sZWFuXG4gICAgcnVsZUU6IGJvb2xlYW5cbiAgICBydWxlUzogYm9vbGVhblxuICAgIHJ1bGVXOiBib29sZWFuXG4gICAgcnVsZURvdWJsZTogYm9vbGVhblxuICAgIHJ1bGVUb3RhbDogYm9vbGVhblxufSB7XG4gICAgY29uc3QgU0xFRVBFUl9QRVJfRkFDRSA9IDExXG4gICAgY29uc3QgW2EsIGIsIGMsIGQsIGUsIGYsIGcsIGhdID0gcm9vbXNGbG9vcjFcbiAgICBjb25zdCBbQSwgQiwgQywgRCwgRSwgRiwgRywgSF0gPSByb29tc0Zsb29yMlxuICAgIHJldHVybiB7XG4gICAgICAgIHJ1bGVEb3VibGU6XG4gICAgICAgICAgICBBICsgQiArIEMgKyBEICsgRSArIEYgKyBHICsgSCA9PT1cbiAgICAgICAgICAgIGRvdWJsZShhICsgYiArIGMgKyBkICsgZSArIGYgKyBnICsgaCksXG4gICAgICAgIHJ1bGVOOiBhICsgYiArIGMgKyBBICsgQiArIEMgPT09IFNMRUVQRVJfUEVSX0ZBQ0UsXG4gICAgICAgIHJ1bGVFOiBjICsgZSArIGggKyBDICsgRSArIEggPT09IFNMRUVQRVJfUEVSX0ZBQ0UsXG4gICAgICAgIHJ1bGVTOiBmICsgZyArIGggKyBGICsgRyArIEggPT09IFNMRUVQRVJfUEVSX0ZBQ0UsXG4gICAgICAgIHJ1bGVXOiBhICsgZCArIGYgKyBBICsgRCArIEYgPT09IFNMRUVQRVJfUEVSX0ZBQ0UsXG4gICAgICAgIHJ1bGVUb3RhbDpcbiAgICAgICAgICAgIGV4cGVjdGVkUGVvcGxlID09PVxuICAgICAgICAgICAgYSArIGIgKyBjICsgZCArIGUgKyBmICsgZyArIGggKyBBICsgQiArIEMgKyBEICsgRSArIEYgKyBHICsgSCxcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRvdWJsZSh2YWx1ZTogbnVtYmVyKSB7XG4gICAgcmV0dXJuIHZhbHVlICsgdmFsdWVcbn1cblxuYXN5bmMgZnVuY3Rpb24gaW5wdXROYlBlb3BsZShcbiAgICByb29tSW5kZXg6IG51bWJlcixcbiAgICB4OiBudW1iZXIsXG4gICAgeTogbnVtYmVyLFxuICAgIHNldFBlb3BsZUluUm9vbTogKHRoaXM6IHZvaWQsIGluZGV4OiBudW1iZXIsIG51bWJlck9mUGVvcGxlOiBudW1iZXIpID0+IHZvaWRcbikge1xuICAgIGNvbnN0IG51bWJlck9mUGVvcGxlID0gYXdhaXQgaW5wdXREaWdpdCh4LCB5KVxuICAgIHNldFBlb3BsZUluUm9vbShyb29tSW5kZXgsIG51bWJlck9mUGVvcGxlKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vYXBwLXZpZXcnXG4iLCJpbXBvcnQgU3dpcGVHZXN0dXJlLCB7IFBhbkV2ZW50LCBTd2lwZUV2ZW50IH0gZnJvbSAnLi4vLi4vZ2VzdHVyZXMvc3dpcGUnXG5pbXBvcnQge1xuICAgIEFtYmllbnRMaWdodCBhcyBUaHJlZUFtYmllbnRMaWdodCxcbiAgICBDYW52YXNUZXh0dXJlIGFzIFRocmVlQ2FudmFzVGV4dHVyZSxcbiAgICBDb2xvciBhcyBUaHJlZUNvbG9yLFxuICAgIERpcmVjdGlvbmFsTGlnaHQgYXMgVGhyZWVEaXJlY3Rpb25hbExpZ2h0LFxuICAgIEdyb3VwIGFzIFRocmVlR3JvdXAsXG4gICAgTWVzaCBhcyBUaHJlZU1lc2gsXG4gICAgTWVzaFBob25nTWF0ZXJpYWwgYXMgVGhyZWVNZXNoUGhvbmdNYXRlcmlhbCxcbiAgICBQZXJzcGVjdGl2ZUNhbWVyYSBhcyBUaHJlZVBlcnNwZWN0aXZlQ2FtZXJhLFxuICAgIFBsYW5lR2VvbWV0cnkgYXMgVGhyZWVQbGFuZUdlb21ldHJ5LFxuICAgIFNjZW5lIGFzIFRocmVlU2NlbmUsXG4gICAgVGV4dHVyZSBhcyBUaHJlZVRleHR1cmUsXG4gICAgV2ViR0xSZW5kZXJlciBhcyBUaHJlZVdlYkdMUmVuZGVyZXIsXG59IGZyb20gJ3RocmVlJ1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgUm9vbXMgfSBmcm9tICcuLi8uLi90eXBlcydcbmltcG9ydCBSb3RhdGlvbk1hbmFnZXIgZnJvbSAnLi9yb3RhdGlvbi1tYW5hZ2VyJ1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lc2hlcyB7XG4gICAgY29udmVudDogVGhyZWVHcm91cFxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQ2FudmFzM0QoXG4gICAgcmVmQ2FudmFzOiBSZWFjdC5NdXRhYmxlUmVmT2JqZWN0PEhUTUxDYW52YXNFbGVtZW50IHwgbnVsbD4sXG4gICAgcm9vbXNGbG9vcjE6IFJvb21zLFxuICAgIHJvb21zRmxvb3IyOiBSb29tcyxcbiAgICBtZXNoZXM6IE1lc2hlcyxcbiAgICBjb21wYXNzVGV4dHVyZTogVGhyZWVUZXh0dXJlXG4pIHtcbiAgICBjb25zdCByZWZVcGRhdGVUb3RhbHMgPSB1c2VSZWYoXG4gICAgICAgIChcbiAgICAgICAgICAgIF90b3RhbE46IG51bWJlcixcbiAgICAgICAgICAgIF90b3RhbEU6IG51bWJlcixcbiAgICAgICAgICAgIF90b3RhbFM6IG51bWJlcixcbiAgICAgICAgICAgIF90b3RhbFc6IG51bWJlclxuICAgICAgICApID0+IHtcbiAgICAgICAgICAgIC8qIEVtcHR5IGZ1bmN0aW9uICovXG4gICAgICAgIH1cbiAgICApXG4gICAgY29uc3QgW2EsIGIsIGMsIGQsIGUsIGYsIGcsIGhdID0gcm9vbXNGbG9vcjFcbiAgICBjb25zdCBbQSwgQiwgQywgRCwgRSwgRiwgRywgSF0gPSByb29tc0Zsb29yMlxuICAgIGNvbnN0IHRvdGFsTiA9IGEgKyBiICsgYyArIEEgKyBCICsgQ1xuICAgIGNvbnN0IHRvdGFsRSA9IGMgKyBlICsgaCArIEMgKyBFICsgSFxuICAgIGNvbnN0IHRvdGFsUyA9IGYgKyBnICsgaCArIEYgKyBHICsgSFxuICAgIGNvbnN0IHRvdGFsVyA9IGEgKyBkICsgZiArIEEgKyBEICsgRlxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbnZhcyA9IHJlZkNhbnZhcy5jdXJyZW50XG4gICAgICAgIGlmICghY2FudmFzKSByZXR1cm4gdW5kZWZpbmVkXG5cbiAgICAgICAgY29uc3QgeyBwYWludCwgdXBkYXRlVG90YWxzIH0gPSBpbml0U2NlbmUoXG4gICAgICAgICAgICBjYW52YXMsXG4gICAgICAgICAgICBtZXNoZXMsXG4gICAgICAgICAgICBjb21wYXNzVGV4dHVyZVxuICAgICAgICApXG4gICAgICAgIHJlZlVwZGF0ZVRvdGFscy5jdXJyZW50ID0gdXBkYXRlVG90YWxzXG4gICAgICAgIGNvbnN0IHJvdGF0aW9uTWFuYWdlciA9IG5ldyBSb3RhdGlvbk1hbmFnZXIocGFpbnQpXG4gICAgICAgIGNvbnN0IGJlaGF2aW9yID0gbmV3IFN3aXBlR2VzdHVyZShcbiAgICAgICAgICAgIGNhbnZhcyxcbiAgICAgICAgICAgIHJvdGF0aW9uTWFuYWdlci5oYW5kbGVTdGFydCxcbiAgICAgICAgICAgIHJvdGF0aW9uTWFuYWdlci5oYW5kbGVQYW4sXG4gICAgICAgICAgICByb3RhdGlvbk1hbmFnZXIuaGFuZGxlU3dpcGVcbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gKCkgPT4gYmVoYXZpb3IuZGV0YWNoKClcbiAgICB9LCBbcmVmQ2FudmFzXSlcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICByZWZVcGRhdGVUb3RhbHMuY3VycmVudCh0b3RhbE4sIHRvdGFsRSwgdG90YWxTLCB0b3RhbFcpXG4gICAgfSwgW3JlZlVwZGF0ZVRvdGFscywgdG90YWxOLCB0b3RhbEUsIHRvdGFsUywgdG90YWxXXSlcbn1cblxuZnVuY3Rpb24gaW5pdFNjZW5lKFxuICAgIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsXG4gICAgbWVzaGVzOiBNZXNoZXMsXG4gICAgY29tcGFzc1RleHR1cmU6IFRocmVlVGV4dHVyZVxuKSB7XG4gICAgY29uc3QgcmVuZGVyZXIgPSBuZXcgVGhyZWVXZWJHTFJlbmRlcmVyKHsgY2FudmFzIH0pXG4gICAgY29uc3QgYXNwZWN0ID0gY2FudmFzLndpZHRoIC8gY2FudmFzLmhlaWdodFxuICAgIGNvbnN0IGNhbWVyYSA9IG1ha2VDYW1lcmEoYXNwZWN0KVxuICAgIGNvbnN0IHsgYW1iaWVudExpZ2h0LCBkaXJlY3Rpb25hbExpZ2h0IH0gPSBtYWtlTGlnaHRzKClcbiAgICBjb25zdCBzY2VuZSA9IG5ldyBUaHJlZVNjZW5lKClcbiAgICBzY2VuZS5iYWNrZ3JvdW5kID0gbmV3IFRocmVlQ29sb3IoJyNkZWYnKVxuICAgIGNvbnN0IHJvb3QgPSBuZXcgVGhyZWVHcm91cCgpXG5cbiAgICBjb25zdCB7IGZhY2VOLCBmYWNlRSwgZmFjZVMsIGZhY2VXIH0gPSBtYWtlRmFjZXNXaXRoVG90YWxzKClcbiAgICByb290LmFkZChcbiAgICAgICAgbWVzaGVzLmNvbnZlbnQsXG4gICAgICAgIG1ha2VDb21wYXNzTWVzaChjb21wYXNzVGV4dHVyZSksXG4gICAgICAgIGZhY2VOLFxuICAgICAgICBmYWNlRSxcbiAgICAgICAgZmFjZVMsXG4gICAgICAgIGZhY2VXXG4gICAgKVxuICAgIHNjZW5lLmFkZChyb290LCBhbWJpZW50TGlnaHQsIGRpcmVjdGlvbmFsTGlnaHQpXG5cbiAgICBjb25zdCBwYWludCA9IG1ha2VQYWludChjYW52YXMsIGNhbWVyYSwgcmVuZGVyZXIsIHJvb3QsIHNjZW5lKVxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gcGFpbnQoKSlcblxuICAgIGNvbnN0IHVwZGF0ZVRvdGFscyA9IG1ha2VVcGRhdGVUb3RhbHMoZmFjZU4sIGZhY2VFLCBmYWNlUywgZmFjZVcsIHBhaW50KVxuICAgIHJldHVybiB7IHBhaW50LCB1cGRhdGVUb3RhbHMgfVxufVxuXG5mdW5jdGlvbiBtYWtlVXBkYXRlVG90YWxzKFxuICAgIGZhY2VOOiBUaHJlZU1lc2g8VGhyZWVQbGFuZUdlb21ldHJ5LCBUaHJlZU1lc2hQaG9uZ01hdGVyaWFsPixcbiAgICBmYWNlRTogVGhyZWVNZXNoPFRocmVlUGxhbmVHZW9tZXRyeSwgVGhyZWVNZXNoUGhvbmdNYXRlcmlhbD4sXG4gICAgZmFjZVM6IFRocmVlTWVzaDxUaHJlZVBsYW5lR2VvbWV0cnksIFRocmVlTWVzaFBob25nTWF0ZXJpYWw+LFxuICAgIGZhY2VXOiBUaHJlZU1lc2g8VGhyZWVQbGFuZUdlb21ldHJ5LCBUaHJlZU1lc2hQaG9uZ01hdGVyaWFsPixcbiAgICBwYWludDogKG5ld0FuZ2xlPzogbnVtYmVyIHwgdW5kZWZpbmVkKSA9PiB2b2lkXG4pIHtcbiAgICBsZXQgbGFzdFRvdGFsTiA9IDBcbiAgICBsZXQgbGFzdFRvdGFsRSA9IDBcbiAgICBsZXQgbGFzdFRvdGFsUyA9IDBcbiAgICBsZXQgbGFzdFRvdGFsVyA9IDBcbiAgICBjb25zdCB1cGRhdGVUb3RhbHMgPSAoXG4gICAgICAgIHRvdGFsTjogbnVtYmVyLFxuICAgICAgICB0b3RhbEU6IG51bWJlcixcbiAgICAgICAgdG90YWxTOiBudW1iZXIsXG4gICAgICAgIHRvdGFsVzogbnVtYmVyXG4gICAgKSA9PiB7XG4gICAgICAgIGlmIChsYXN0VG90YWxOICE9PSB0b3RhbE4pIHtcbiAgICAgICAgICAgIGxhc3RUb3RhbE4gPSB0b3RhbE5cbiAgICAgICAgICAgIGZhY2VOLm1hdGVyaWFsLm1hcCA9IG1ha2VGYWNlVGV4dHVyZSh0b3RhbE4pXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGxhc3RUb3RhbEUgIT09IHRvdGFsRSkge1xuICAgICAgICAgICAgbGFzdFRvdGFsRSA9IHRvdGFsTlxuICAgICAgICAgICAgZmFjZUUubWF0ZXJpYWwubWFwID0gbWFrZUZhY2VUZXh0dXJlKHRvdGFsRSlcbiAgICAgICAgfVxuICAgICAgICBpZiAobGFzdFRvdGFsUyAhPT0gdG90YWxTKSB7XG4gICAgICAgICAgICBsYXN0VG90YWxTID0gdG90YWxOXG4gICAgICAgICAgICBmYWNlUy5tYXRlcmlhbC5tYXAgPSBtYWtlRmFjZVRleHR1cmUodG90YWxTKVxuICAgICAgICB9XG4gICAgICAgIGlmIChsYXN0VG90YWxXICE9PSB0b3RhbFcpIHtcbiAgICAgICAgICAgIGxhc3RUb3RhbFcgPSB0b3RhbE5cbiAgICAgICAgICAgIGZhY2VXLm1hdGVyaWFsLm1hcCA9IG1ha2VGYWNlVGV4dHVyZSh0b3RhbFcpXG4gICAgICAgIH1cbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiBwYWludCgpKVxuICAgIH1cbiAgICByZXR1cm4gdXBkYXRlVG90YWxzXG59XG5cbmZ1bmN0aW9uIG1ha2VQYWludChcbiAgICBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LFxuICAgIGNhbWVyYTogVGhyZWVQZXJzcGVjdGl2ZUNhbWVyYSxcbiAgICByZW5kZXJlcjogVGhyZWVXZWJHTFJlbmRlcmVyLFxuICAgIHJvb3Q6IFRocmVlR3JvdXAsXG4gICAgc2NlbmU6IFRocmVlU2NlbmVcbikge1xuICAgIGxldCB3aWR0aCA9IDBcbiAgICBsZXQgaGVpZ2h0ID0gMFxuICAgIGxldCBsYXN0QW5nbGUgPSAwXG4gICAgY29uc3QgcGFpbnQgPSAobmV3QW5nbGU/OiBudW1iZXIpID0+IHtcbiAgICAgICAgY29uc3QgYW5nbGUgPSBuZXdBbmdsZSA/PyBsYXN0QW5nbGVcbiAgICAgICAgbGFzdEFuZ2xlID0gYW5nbGVcbiAgICAgICAgaWYgKGNhbnZhcy5jbGllbnRXaWR0aCAhPT0gd2lkdGggfHwgY2FudmFzLmNsaWVudEhlaWdodCAhPT0gaGVpZ2h0KSB7XG4gICAgICAgICAgICB3aWR0aCA9IGNhbnZhcy5jbGllbnRXaWR0aFxuICAgICAgICAgICAgaGVpZ2h0ID0gY2FudmFzLmNsaWVudEhlaWdodFxuICAgICAgICAgICAgY2FudmFzLndpZHRoID0gd2lkdGhcbiAgICAgICAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHRcbiAgICAgICAgICAgIGNhbWVyYS5hc3BlY3QgPSB3aWR0aCAvIGhlaWdodFxuICAgICAgICAgICAgY2FtZXJhLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKVxuICAgICAgICAgICAgcmVuZGVyZXIuc2V0U2l6ZSh3aWR0aCwgaGVpZ2h0LCBmYWxzZSlcbiAgICAgICAgfVxuICAgICAgICByb290LnJvdGF0aW9uLnNldCgwLCBhbmdsZSwgMClcbiAgICAgICAgcmVuZGVyZXIucmVuZGVyKHNjZW5lLCBjYW1lcmEpXG4gICAgfVxuICAgIHJldHVybiBwYWludFxufVxuXG5mdW5jdGlvbiBtYWtlQ2FtZXJhKGFzcGVjdDogbnVtYmVyKSB7XG4gICAgY29uc3QgY2FtZXJhID0gbmV3IFRocmVlUGVyc3BlY3RpdmVDYW1lcmEoNDUsIGFzcGVjdCwgMC4xLCAxMDApXG4gICAgY2FtZXJhLnBvc2l0aW9uLnNldCgyLCAzLCA1KVxuICAgIGNhbWVyYS5sb29rQXQoMCwgMCwgMClcbiAgICByZXR1cm4gY2FtZXJhXG59XG5cbmZ1bmN0aW9uIG1ha2VGYWNlc1dpdGhUb3RhbHMoKSB7XG4gICAgY29uc3QgdGV4dHVyZU4gPSBtYWtlRmFjZVRleHR1cmUoMClcbiAgICBjb25zdCBmYWNlTiA9IG1ha2VGYWNlKDAsIHRleHR1cmVOKVxuICAgIGNvbnN0IHRleHR1cmVFID0gbWFrZUZhY2VUZXh0dXJlKDEpXG4gICAgY29uc3QgZmFjZUUgPSBtYWtlRmFjZSgxLCB0ZXh0dXJlRSlcbiAgICBjb25zdCB0ZXh0dXJlUyA9IG1ha2VGYWNlVGV4dHVyZSgyKVxuICAgIGNvbnN0IGZhY2VTID0gbWFrZUZhY2UoMiwgdGV4dHVyZVMpXG4gICAgY29uc3QgdGV4dHVyZVcgPSBtYWtlRmFjZVRleHR1cmUoMylcbiAgICBjb25zdCBmYWNlVyA9IG1ha2VGYWNlKDMsIHRleHR1cmVXKVxuICAgIGZhY2VXLm1hdGVyaWFsLm1hcCA9IG1ha2VGYWNlVGV4dHVyZSg2NjYpXG4gICAgcmV0dXJuIHsgZmFjZU4sIGZhY2VFLCBmYWNlUywgZmFjZVcgfVxufVxuXG5mdW5jdGlvbiBtYWtlTGlnaHRzKCkge1xuICAgIGNvbnN0IGFtYmllbnRMaWdodCA9IG5ldyBUaHJlZUFtYmllbnRMaWdodCgweGZmZmZmZiwgMSlcbiAgICBjb25zdCBkaXJlY3Rpb25hbExpZ2h0ID0gbmV3IFRocmVlRGlyZWN0aW9uYWxMaWdodCgweGZmZWVkZCwgMilcbiAgICBkaXJlY3Rpb25hbExpZ2h0LnBvc2l0aW9uLnNldCgtMSwgMSwgNSlcbiAgICBkaXJlY3Rpb25hbExpZ2h0LnRhcmdldC5wb3NpdGlvbi5zZXQoMCwgMCwgMClcbiAgICByZXR1cm4geyBhbWJpZW50TGlnaHQsIGRpcmVjdGlvbmFsTGlnaHQgfVxufVxuXG5mdW5jdGlvbiBtYWtlQ29tcGFzc01lc2goY29tcGFzc1RleHR1cmU6IFRocmVlVGV4dHVyZSk6IFRocmVlTWVzaCB7XG4gICAgY29uc3QgbWVzaCA9IG5ldyBUaHJlZU1lc2goXG4gICAgICAgIG5ldyBUaHJlZVBsYW5lR2VvbWV0cnkoNCwgNCksXG4gICAgICAgIG5ldyBUaHJlZU1lc2hQaG9uZ01hdGVyaWFsKHtcbiAgICAgICAgICAgIG1hcDogY29tcGFzc1RleHR1cmUsXG4gICAgICAgICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgICAgfSlcbiAgICApXG4gICAgbWVzaC5wb3NpdGlvbi5zZXQoMCwgLTAuNSwgMClcbiAgICBtZXNoLnJvdGF0ZVgoLU1hdGguUEkgLyAyKVxuICAgIHJldHVybiBtZXNoXG59XG5cbmZ1bmN0aW9uIG1ha2VGYWNlKHF1YXJ0ZXI6IDAgfCAxIHwgMiB8IDMsIHRleHR1cmU6IFRocmVlVGV4dHVyZSkge1xuICAgIGNvbnN0IHJhZGl1cyA9IDEuNVxuICAgIGNvbnN0IGFuZ2xlID0gTWF0aC5QSSAqICgyIC0gcXVhcnRlcikgKiAwLjVcbiAgICBjb25zdCB4ID0gcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpXG4gICAgY29uc3QgeSA9IHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKVxuICAgIGNvbnN0IGZhY2UgPSBuZXcgVGhyZWVNZXNoKFxuICAgICAgICBuZXcgVGhyZWVQbGFuZUdlb21ldHJ5KDEuNCwgMS40KSxcbiAgICAgICAgbmV3IFRocmVlTWVzaFBob25nTWF0ZXJpYWwoe1xuICAgICAgICAgICAgbWFwOiB0ZXh0dXJlLFxuICAgICAgICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsXG4gICAgICAgICAgICBzcGVjdWxhcjogNSxcbiAgICAgICAgfSlcbiAgICApXG4gICAgZmFjZS5wb3NpdGlvbi5zZXQoeCwgMCwgeSlcbiAgICBmYWNlLnJvdGF0aW9uLnNldCgwLCBhbmdsZSwgMClcbiAgICByZXR1cm4gZmFjZVxufVxuXG5mdW5jdGlvbiBtYWtlRmFjZVRleHR1cmUodmFsdWU6IG51bWJlcik6IFRocmVlVGV4dHVyZSB7XG4gICAgY29uc3QgU0laRSA9IDEyOFxuICAgIGNvbnN0IGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpXG4gICAgY2FudmFzLndpZHRoID0gU0laRVxuICAgIGNhbnZhcy5oZWlnaHQgPSBTSVpFXG4gICAgY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJylcbiAgICBpZiAoIWN0eCkgdGhyb3cgRXJyb3IoJ1VuYWJsZSB0byBjcmVhdGUgY29udGV4dCAyRCEnKVxuICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgU0laRSwgU0laRSlcbiAgICBjdHguZm9udCA9IGBib2xkICR7U0laRSAvIDJ9cHggc2Fucy1zZXJpZmBcbiAgICBjb25zdCB0ZXh0ID0gYCR7dmFsdWV9YFxuICAgIGNvbnN0IG1lYXN1cmUgPSBjdHgubWVhc3VyZVRleHQodGV4dClcbiAgICBjb25zdCB4ID0gKFNJWkUgLSBtZWFzdXJlLndpZHRoKSAqIDAuNVxuICAgIGNvbnN0IHkgPSBTSVpFICogMC43NVxuICAgIGN0eC5maWxsU3R5bGUgPSB2YWx1ZSA9PT0gMTEgPyAnIzBmMGInIDogJyNmMDBiJ1xuICAgIGN0eC5maWxsVGV4dCh0ZXh0LCB4LCB5KVxuICAgIGN0eC5zdHJva2VTdHlsZSA9ICcjMDAwJ1xuICAgIGN0eC5saW5lV2lkdGggPSBTSVpFICogMC4wM1xuICAgIGN0eC5zdHJva2VUZXh0KHRleHQsIHgsIHkpXG4gICAgY29uc3QgdGV4dHVyZSA9IG5ldyBUaHJlZUNhbnZhc1RleHR1cmUoY2FudmFzKVxuICAgIHRleHR1cmUuZmxpcFkgPSB0cnVlXG4gICAgcmV0dXJuIHRleHR1cmVcbn1cbiIsImltcG9ydCAnLi9jb252ZW50LTNkLXZpZXcuY3NzJ1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCdcblxuaW1wb3J0IHsgTWVzaGVzLCB1c2VDYW52YXMzRCB9IGZyb20gJy4vY29udmVudC0zZC1ob29rcydcblxuaW1wb3J0IHsgUm9vbXMgfSBmcm9tICcuLi8uLi90eXBlcydcbmltcG9ydCB7IFRleHR1cmUgYXMgVGhyZWVUZXh0dXJlIH0gZnJvbSAndGhyZWUnXG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29udmVudDNkVmlld1Byb3BzIHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmdcbiAgICByb29tc0Zsb29yMTogUm9vbXNcbiAgICByb29tc0Zsb29yMjogUm9vbXNcbiAgICBtZXNoZXM6IE1lc2hlc1xuICAgIGNvbXBhc3NUZXh0dXJlOiBUaHJlZVRleHR1cmVcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29udmVudDNkVmlldyhwcm9wczogQ29udmVudDNkVmlld1Byb3BzKSB7XG4gICAgY29uc3QgcmVmQ2FudmFzID0gUmVhY3QudXNlUmVmPEhUTUxDYW52YXNFbGVtZW50IHwgbnVsbD4obnVsbClcbiAgICB1c2VDYW52YXMzRChcbiAgICAgICAgcmVmQ2FudmFzLFxuICAgICAgICBwcm9wcy5yb29tc0Zsb29yMSxcbiAgICAgICAgcHJvcHMucm9vbXNGbG9vcjIsXG4gICAgICAgIHByb3BzLm1lc2hlcyxcbiAgICAgICAgcHJvcHMuY29tcGFzc1RleHR1cmVcbiAgICApXG4gICAgcmV0dXJuIDxjYW52YXMgY2xhc3NOYW1lPXtnZXRDbGFzc05hbWVzKHByb3BzKX0gcmVmPXtyZWZDYW52YXN9PjwvY2FudmFzPlxufVxuXG5mdW5jdGlvbiBnZXRDbGFzc05hbWVzKHByb3BzOiBDb252ZW50M2RWaWV3UHJvcHMpOiBzdHJpbmcge1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBbJ2N1c3RvbScsICd2aWV3LUNvbnZlbnQzZFZpZXcnXVxuICAgIGlmICh0eXBlb2YgcHJvcHMuY2xhc3NOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICBjbGFzc05hbWVzLnB1c2gocHJvcHMuY2xhc3NOYW1lKVxuICAgIH1cblxuICAgIHJldHVybiBjbGFzc05hbWVzLmpvaW4oJyAnKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vY29udmVudC0zZC12aWV3J1xuIiwiaW1wb3J0IHsgUGFuRXZlbnQsIFN3aXBlRXZlbnQgfSBmcm9tICcuLi8uLi9nZXN0dXJlcy9zd2lwZSdcblxuY29uc3QgRkFDVE9SID0gTWF0aC5QSVxuXG5jb25zdCBJTklUSUFMX0FOR0xFID0gLTAuNFxuY29uc3QgSU5JVElBTF9TUEVFRCA9IDAuMDAxXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdGF0aW9uTWFuYWdlciB7XG4gICAgcHJpdmF0ZSBhbmdsZSA9IElOSVRJQUxfQU5HTEVcblxuICAgIHByaXZhdGUgc3BlZWQgPSBJTklUSUFMX1NQRUVEXG5cbiAgICBwcml2YXRlIHRpbWVTdGFtcCA9IDBcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVhZG9ubHkgb25DaGFuZ2U6IChhbmdsZTogbnVtYmVyKSA9PiB2b2lkKSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5hbmltKVxuICAgIH1cblxuICAgIHB1YmxpYyBmaXJlKGN1cnJlbnRBbmdsZTogbnVtYmVyKSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5vbkNoYW5nZShjdXJyZW50QW5nbGUpKVxuICAgIH1cblxuICAgIHB1YmxpYyByZWFkb25seSBoYW5kbGVTdGFydCA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5zcGVlZCA9IDBcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgaGFuZGxlUGFuID0gKGV2dDogUGFuRXZlbnQpID0+IHtcbiAgICAgICAgdGhpcy5maXJlKHRoaXMuYW5nbGUgKyBGQUNUT1IgKiBldnQuZGVsdGFYKVxuICAgIH1cblxuICAgIHB1YmxpYyByZWFkb25seSBoYW5kbGVTd2lwZSA9IChldnQ6IFN3aXBlRXZlbnQpID0+IHtcbiAgICAgICAgdGhpcy5hbmdsZSArPSBGQUNUT1IgKiBldnQuZGVsdGFYXG4gICAgICAgIHRoaXMuc3BlZWQgPSBldnQudmVjdG9yWFxuICAgICAgICB0aGlzLnRpbWVTdGFtcCA9IDBcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW0pXG4gICAgfVxuXG4gICAgcHJpdmF0ZSByZWFkb25seSBhbmltID0gKHRpbWU6IG51bWJlcikgPT4ge1xuICAgICAgICBpZiAodGhpcy50aW1lU3RhbXAgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMudGltZVN0YW1wID0gdGltZVxuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW0pXG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGRlbHRhVGltZSA9IHRpbWUgLSB0aGlzLnRpbWVTdGFtcFxuICAgICAgICB0aGlzLnRpbWVTdGFtcCA9IHRpbWVcbiAgICAgICAgdGhpcy5hbmdsZSArPSB0aGlzLnNwZWVkICogZGVsdGFUaW1lXG4gICAgICAgIHRoaXMub25DaGFuZ2UodGhpcy5hbmdsZSlcbiAgICAgICAgY29uc3QgYW1vcnRpemVyID0gTWF0aC5wb3coMC41LCBkZWx0YVRpbWUgKiAwLjAwMSlcbiAgICAgICAgdGhpcy5zcGVlZCAqPSBhbW9ydGl6ZXJcbiAgICAgICAgaWYgKE1hdGguYWJzKHRoaXMuc3BlZWQpID4gMWUtNCkge1xuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnU1RPUCEnLCB0aGlzLnNwZWVkKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0ICcuL2NvbnZlbnQtZmxvb3Itdmlldy5jc3MnXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5pbXBvcnQgeyBSb29tcyB9IGZyb20gJy4uLy4uL3R5cGVzJ1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbnZlbnRGbG9vclZpZXdQcm9wcyB7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXG4gICAgYmFja2dyb3VuZDogSFRNTEltYWdlRWxlbWVudFxuICAgIHJvb21zOiBSb29tc1xuICAgIG9uUm9vbUNsaWNrKHRoaXM6IHZvaWQsIHJvb21JbmRleDogbnVtYmVyLCB4OiBudW1iZXIsIHk6IG51bWJlcik6IHZvaWRcbn1cblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW1hZ2ljLW51bWJlcnNcbmNvbnN0IEZJUlNUX1JPT01TID0gWzAsIDEsIDIsIDNdXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWFnaWMtbnVtYmVyc1xuY29uc3QgTEFTVF9ST09NUyA9IFs0LCA1LCA2LCA3XVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb252ZW50Rmxvb3JWaWV3KHByb3BzOiBDb252ZW50Rmxvb3JWaWV3UHJvcHMpIHtcbiAgICBjb25zdCB7IHJvb21zLCBvblJvb21DbGljayB9ID0gcHJvcHNcbiAgICBjb25zdCByZW5kZXJSb29tID0gbWFrZVJlbmRlclJvb20ocm9vbXMsIG9uUm9vbUNsaWNrKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Z2V0Q2xhc3NOYW1lcyhwcm9wcyl9XG4gICAgICAgICAgICBzdHlsZT17eyBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtwcm9wcy5iYWNrZ3JvdW5kLnNyY30pYCB9fVxuICAgICAgICA+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIHtGSVJTVF9ST09NUy5tYXAocmVuZGVyUm9vbSl9XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0b3RhbFwiPntzdW0ocm9vbXMpfTwvZGl2PlxuICAgICAgICAgICAgICAgIHtMQVNUX1JPT01TLm1hcChyZW5kZXJSb29tKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApXG59XG5cbmZ1bmN0aW9uIGdldENsYXNzTmFtZXMocHJvcHM6IENvbnZlbnRGbG9vclZpZXdQcm9wcyk6IHN0cmluZyB7XG4gICAgY29uc3QgY2xhc3NOYW1lcyA9IFsnY3VzdG9tJywgJ3ZpZXctQ29udmVudEZsb29yVmlldyddXG4gICAgaWYgKHR5cGVvZiBwcm9wcy5jbGFzc05hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChwcm9wcy5jbGFzc05hbWUpXG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZXMuam9pbignICcpXG59XG5cbmZ1bmN0aW9uIG1ha2VSZW5kZXJSb29tKFxuICAgIHJvb21zOiBSb29tcyxcbiAgICBvblJvb21DbGljazogKHRoaXM6IHZvaWQsIGluZGV4OiBudW1iZXIsIHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiB2b2lkXG4pIHtcbiAgICByZXR1cm4gKGluZGV4OiBudW1iZXIpOiBKU1guRWxlbWVudCA9PiAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICAgIGtleT17YHJvb20tJHtpbmRleH1gfVxuICAgICAgICAgICAgb25DbGljaz17KGV2dCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgdGFyZ2V0IH0gPSBldnRcbiAgICAgICAgICAgICAgICBjb25zdCB7IGxlZnQsIHRvcCB9ID0gZ2V0Tm9uU3RhdGljQ29ybmVyKHRhcmdldCBhcyBIVE1MRWxlbWVudClcbiAgICAgICAgICAgICAgICBvblJvb21DbGljayhpbmRleCwgZXZ0LmNsaWVudFggKyBsZWZ0LCBldnQuY2xpZW50WSArIHRvcClcbiAgICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICAgIHtyb29tc1tpbmRleF19XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZnVuY3Rpb24gc3VtKHJvb21zOiBSb29tcyk6IG51bWJlciB7XG4gICAgcmV0dXJuIHJvb21zLnJlZHVjZSgodG90YWw6IG51bWJlciwgdmFsdWU6IG51bWJlcikgPT4gdG90YWwgKyB2YWx1ZSwgMClcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uU3RhdGljQ29ybmVyKHNvdXJjZTogSFRNTEVsZW1lbnQgfCBudWxsKToge1xuICAgIGxlZnQ6IG51bWJlclxuICAgIHRvcDogbnVtYmVyXG59IHtcbiAgICBsZXQgZWxlbWVudCA9IHNvdXJjZVxuICAgIHdoaWxlIChlbGVtZW50ICYmIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpLnBvc2l0aW9uID09PSAnc3RhdGljJykge1xuICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnRFbGVtZW50XG4gICAgfVxuICAgIGlmICghZWxlbWVudCkgcmV0dXJuIHsgbGVmdDogMCwgdG9wOiAwIH1cbiAgICByZXR1cm4gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxufVxuIiwiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gJy4vY29udmVudC1mbG9vci12aWV3J1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltZy9jb21wYXNzLmI4Yjk5M2Y4YTIwYTUzMTlhODM1NmZlZjQyN2E4MTBiLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvY29udmVudC41NzQ3OWQ0ODAzNWE5YmZhZDNlYzJlYzExYjhkNzFkOS5nbGJcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2Zsb29yLjE0NDQ3NDE5YTIyYTI1NjI3ODVjZWMwMDY1YTE2Y2I1LnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvZmxvb3IuNzMzN2VhYTdmZTM4YWIzYjI3MjY4MzI4NDNmOTU2Yjgud2VicFwiOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsIm9wdGlvbnMiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsInNldEF0dHJpYnV0ZXMiLCJpbnNlcnQiLCJkb21BUEkiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJ1bmRlZmluZWQiLCJlbGVtZW50Iiwib25TdGFydCIsIm9uUGFuIiwib25Td2lwZSIsInRpbWVTdGFtcCIsIngiLCJ5IiwiaGFuZGxlUG9pbnRlckRvd24iLCJldnQiLCJnZXRDb29yZHMiLCJoYW5kbGVQb2ludGVyTW92ZSIsImRlbHRhWCIsImRlbHRhWSIsImhhbmRsZVBvaW50ZXJVcCIsImRlbHRhVGltZSIsInZlY3RvclgiLCJ2ZWN0b3JZIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRoaXMiLCJkZXRhY2giLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVjdCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImNsaWVudFgiLCJsZWZ0Iiwid2lkdGgiLCJjbGllbnRZIiwidG9wIiwiaGVpZ2h0IiwiS0VZIiwiTWF0aCIsInJhbmRvbSIsIkRhdGUiLCJub3ciLCJzdWJzdHIiLCJzdGF0ZUlEIiwiaW5pdGlhbFN0YXRlIiwicHVzaFN0YXRlIiwicyIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJoaXN0b3J5IiwidmFsdWUiLCJSZWFjdCIsInVzZVN0YXRlIiwic3RhdGUiLCJzZXRTdGF0ZSIsInVzZUVmZmVjdCIsImhhbmRsZXIiLCJkYXRhIiwiQXJyYXkiLCJpc0FycmF5IiwiaXNPYmplY3QiLCJlcnJvciIsIm5ld1N0YXRlIiwibG9hZFRleHR1cmUiLCJjb21wYXNzVGV4dHVyZSIsImxvYWRJbWFnZSIsImZsb29ySW1hZ2UiLCJsb2FkR0xURiIsImNvbnZlbnRNZXNoIiwiYXNzZXRzIiwiaW1hZ2VzIiwiZmxvb3IiLCJtZXNoZXMiLCJjb252ZW50IiwidGV4dHVyZXMiLCJjb21wYXNzIiwicmVuZGVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInNwbGFzaCIsImNsYXNzTGlzdCIsImFkZCIsInNldFRpbWVvdXQiLCJwYXJlbnQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJzdGFydCIsIkRJR0lUUyIsImdldENsYXNzTmFtZXMiLCJwcm9wcyIsImNsYXNzTmFtZXMiLCJjbGFzc05hbWUiLCJqb2luIiwiY2xhbXAiLCJtaW4iLCJtYXgiLCJoYWxmIiwicmVmRGl2IiwidXNlUmVmIiwiZGl2IiwiY3VycmVudCIsImJvZHkiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsInN0eWxlIiwib3BhY2l0eSIsInJlZiIsIm1hcCIsImRpZ2l0Iiwia2V5Iiwib25DbGljayIsImRlZmF1bHQiLCJpbnB1dERpZ2l0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJzY3JlZW4iLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kQ2hpbGQiLCJ0cnlUb0xvYWRJbWFnZSIsInVybCIsImltZyIsIkltYWdlIiwic3JjIiwib25sb2FkIiwib25lcnJvciIsInVybHMiLCJFcnJvciIsIkdMVEZMb2FkZXIiLCJsb2FkQXN5bmMiLCJzY2VuZSIsIlRleHR1cmVMb2FkZXIiLCJsb2FkIiwidXNlQXBwbGljYXRpb25TdGF0ZSIsIklOSVRJQUxfU1RBVEUiLCJyb29tc0Zsb29yMSIsInJvb21zRmxvb3IyIiwidG90YWxQZW9wbGUiLCJzdGVwIiwic2hvd0luc3RydWN0aW9ucyIsInVzZUhpc3RvcnlTdGF0ZSIsInNldFBlb3BsZUluUm9vbUF0Rmxvb3IxIiwicm9vbUluZGV4IiwibnVtYmVyT2ZQZW9wbGUiLCJzZXRQZW9wbGVJblJvb21BdEZsb29yMiIsIm5ld1Jvb21zRmxvb3IxIiwibmV3Um9vbXNGbG9vcjIiLCJpbnB1dE5iUGVvcGxlIiwic2V0UGVvcGxlSW5Sb29tIiwiZXhwZWN0ZWRQZW9wbGUiLCJhIiwiYiIsImMiLCJkIiwiZSIsImYiLCJnIiwiaCIsIkEiLCJCIiwiQyIsIkQiLCJFIiwiRiIsIkciLCJIIiwicnVsZURvdWJsZSIsInJ1bGVOIiwicnVsZUUiLCJydWxlUyIsInJ1bGVXIiwicnVsZVRvdGFsIiwiY2hlY2tSdWxlcyIsInJvb21zIiwiYmFja2dyb3VuZCIsIm9uUm9vbUNsaWNrIiwicmVuZGVyRm9vdGVyIiwicmVuZGVyUHJldmlld1BhbmUiLCJtYWtlRmFjZSIsInF1YXJ0ZXIiLCJ0ZXh0dXJlIiwiYW5nbGUiLCJQSSIsInNpbiIsImNvcyIsImZhY2UiLCJ0cmFuc3BhcmVudCIsInNwZWN1bGFyIiwicG9zaXRpb24iLCJzZXQiLCJyb3RhdGlvbiIsIm1ha2VGYWNlVGV4dHVyZSIsIlNJWkUiLCJjYW52YXMiLCJjdHgiLCJnZXRDb250ZXh0IiwiY2xlYXJSZWN0IiwiZm9udCIsInRleHQiLCJtZWFzdXJlVGV4dCIsImZpbGxTdHlsZSIsImZpbGxUZXh0Iiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJzdHJva2VUZXh0IiwiZmxpcFkiLCJyZWZDYW52YXMiLCJyZWZVcGRhdGVUb3RhbHMiLCJfdG90YWxOIiwiX3RvdGFsRSIsIl90b3RhbFMiLCJfdG90YWxXIiwidG90YWxOIiwidG90YWxFIiwidG90YWxTIiwidG90YWxXIiwicmVuZGVyZXIiLCJjYW1lcmEiLCJhc3BlY3QiLCJsb29rQXQiLCJtYWtlQ2FtZXJhIiwiYW1iaWVudExpZ2h0IiwiZGlyZWN0aW9uYWxMaWdodCIsInRhcmdldCIsIm1ha2VMaWdodHMiLCJyb290IiwiZmFjZU4iLCJmYWNlRSIsImZhY2VTIiwiZmFjZVciLCJtYXRlcmlhbCIsIm1ha2VGYWNlc1dpdGhUb3RhbHMiLCJtZXNoIiwicm90YXRlWCIsIm1ha2VDb21wYXNzTWVzaCIsInBhaW50IiwibGFzdEFuZ2xlIiwibmV3QW5nbGUiLCJ1cGRhdGVQcm9qZWN0aW9uTWF0cml4Iiwic2V0U2l6ZSIsIm1ha2VQYWludCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInVwZGF0ZVRvdGFscyIsImxhc3RUb3RhbE4iLCJsYXN0VG90YWxFIiwibGFzdFRvdGFsUyIsImxhc3RUb3RhbFciLCJtYWtlVXBkYXRlVG90YWxzIiwiaW5pdFNjZW5lIiwicm90YXRpb25NYW5hZ2VyIiwiYmVoYXZpb3IiLCJoYW5kbGVTdGFydCIsImhhbmRsZVBhbiIsImhhbmRsZVN3aXBlIiwidXNlQ2FudmFzM0QiLCJGQUNUT1IiLCJvbkNoYW5nZSIsInNwZWVkIiwiZmlyZSIsImFuaW0iLCJ0aW1lIiwiYW1vcnRpemVyIiwicG93IiwiYWJzIiwiY3VycmVudEFuZ2xlIiwiRklSU1RfUk9PTVMiLCJMQVNUX1JPT01TIiwicmVuZGVyUm9vbSIsImluZGV4Iiwic291cmNlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInBhcmVudEVsZW1lbnQiLCJnZXROb25TdGF0aWNDb3JuZXIiLCJtYWtlUmVuZGVyUm9vbSIsImJhY2tncm91bmRJbWFnZSIsInJlZHVjZSIsInRvdGFsIiwic3VtIl0sInNvdXJjZVJvb3QiOiIifQ==