"use strict";(self.webpackChunkpuzzle_convent=self.webpackChunkpuzzle_convent||[]).push([[143],{5815:(e,n,t)=>{t.d(n,{Z:()=>C});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i),s=t(1667),l=t.n(s),u=new URL(t(394),t.b),c=new URL(t(4103),t.b),f=new URL(t(2777),t.b),d=new URL(t(2696),t.b),A=new URL(t(8712),t.b),p=new URL(t(296),t.b),h=a()(o()),v=l()(u),m=l()(c),b=l()(f),y=l()(d),g=l()(A),w=l()(p);h.push([e.id,"\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+v+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+m+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+b+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+y+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+g+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+w+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./src/fonts/fuzzy-bubbles.css"],names:[],mappings:";AACA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,gHAAgH;AAClH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,mHAAmH;AACrH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,yKAAyK;AAC3K;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,gHAAgH;AAClH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,mHAAmH;AACrH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,yKAAyK;AAC3K",sourcesContent:["\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-0.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-1.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-2.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-3.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-4.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-5.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const C=h},1424:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: fuzzy-bubbles, sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n\r\n*, *::after, *::before {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    font: inherit;\r\n    border: inherit;\r\n    background-color: #f90;\r\n    font-variant: small-caps;\r\n    line-height: 2em;\r\n    padding: 0 1em;\r\n    font-weight: bold;\r\n    border-radius: .25em;\r\n    box-shadow: 0 .125em .125em #0007;\r\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;IAEI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,sCAAsC;IACtC,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,WAAW;IACX,SAAS;IACT;;;;;;KAMC;AACL;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,sBAAsB;IACtB,wBAAwB;IACxB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,oBAAoB;IACpB,iCAAiC;AACrC",sourcesContent:["html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: fuzzy-bubbles, sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n\r\n*, *::after, *::before {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    font: inherit;\r\n    border: inherit;\r\n    background-color: #f90;\r\n    font-variant: small-caps;\r\n    line-height: 2em;\r\n    padding: 0 1em;\r\n    font-weight: bold;\r\n    border-radius: .25em;\r\n    box-shadow: 0 .125em .125em #0007;\r\n}"],sourceRoot:""}]);const s=a},4073:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView div.yes,\n.view-AppView div.no {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView div.no {\n    background-color: #b00;\n    color: #fff;\n}\n\n","",{version:3,sources:["webpack://./src/view/app/app-view.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,gBAAgB;AACpB;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,4BAA4B;IAC5B,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;;IAEI,sBAAsB;IACtB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf",sourcesContent:[".view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView div.yes,\n.view-AppView div.no {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView div.no {\n    background-color: #b00;\n    color: #fff;\n}\n\n"],sourceRoot:""}]);const s=a},6448:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,'.view-app-InstructionsView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0 1rem 2rem 1rem;\n    background-color: #defd;\n    overflow: auto;\n    opacity: 1;\n    transition: opacity 0.3s;\n}\n\n.view-app-InstructionsView.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.view-app-InstructionsView::before,\n.view-app-InstructionsView::after {\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 9;\n    height: 2rem;\n    content: ".";\n    font-size: 0;\n    pointer-events: none;\n}\n\n.view-app-InstructionsView::before {\n    top: 0;\n    background-image: linear-gradient(to top, transparent, #def);\n}\n\n.view-app-InstructionsView::after {\n    bottom: 0;\n    background-image: linear-gradient(to top, #def, transparent);\n}\n\n.view-app-InstructionsView div.languages {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-app-InstructionsView div.rule {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n    font: 80%;\n    margin: 0.75rem 0;\n}\n\n.view-app-InstructionsView div.rule > * {\n    flex: 0 0 auto;\n}\n\n.view-app-InstructionsView div.rule > *:last-child {\n    flex: 1 1 auto;\n}\n',"",{version:3,sources:["webpack://./src/view/app/instructions/instructions-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,uBAAuB;IACvB,cAAc;IACd,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;;IAEI,eAAe;IACf,OAAO;IACP,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,MAAM;IACN,4DAA4D;AAChE;;AAEA;IACI,SAAS;IACT,4DAA4D;AAChE;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,UAAU;IACV,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB",sourcesContent:['.view-app-InstructionsView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0 1rem 2rem 1rem;\n    background-color: #defd;\n    overflow: auto;\n    opacity: 1;\n    transition: opacity 0.3s;\n}\n\n.view-app-InstructionsView.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.view-app-InstructionsView::before,\n.view-app-InstructionsView::after {\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 9;\n    height: 2rem;\n    content: ".";\n    font-size: 0;\n    pointer-events: none;\n}\n\n.view-app-InstructionsView::before {\n    top: 0;\n    background-image: linear-gradient(to top, transparent, #def);\n}\n\n.view-app-InstructionsView::after {\n    bottom: 0;\n    background-image: linear-gradient(to top, #def, transparent);\n}\n\n.view-app-InstructionsView div.languages {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-app-InstructionsView div.rule {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n    font: 80%;\n    margin: 0.75rem 0;\n}\n\n.view-app-InstructionsView div.rule > * {\n    flex: 0 0 auto;\n}\n\n.view-app-InstructionsView div.rule > *:last-child {\n    flex: 1 1 auto;\n}\n'],sourceRoot:""}]);const s=a},6532:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/view/convent-3d/convent-3d-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n"],sourceRoot:""}]);const s=a},5875:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n","",{version:3,sources:["webpack://./src/view/convent-floor/convent-floor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qCAAqC;IACrC,wBAAwB;IACxB,4BAA4B;IAC5B,2BAA2B;IAC3B,wCAAwC;AAC5C;;AAEA;IACI;QACI,mBAAmB;QACnB,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;IAChB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;AAC7B",sourcesContent:[".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n"],sourceRoot:""}]);const s=a},1032:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-conventFloor-RoomView {\n    position: relative;\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-conventFloor-RoomView div.directions {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    overflow: visible;\n    pointer-events: none;\n    opacity: 0;\n    transition: opacity .2s;\n}\n\n.view-conventFloor-RoomView.hover div.directions {\n    opacity: .9;\n    z-index: 9;\n}\n\n.view-conventFloor-RoomView div.directions > svg {\n    position: absolute;\n    width: 1em;\n    height: 1em;\n    margin: -.5em;\n    color: #f90;\n}\n\n.view-conventFloor-RoomView div.directions > svg.up {\n    transform: translateY(-1em);\n}\n\n.view-conventFloor-RoomView div.directions > svg.right {\n    transform: translateX(1em) rotate(90deg);\n}\n\n.view-conventFloor-RoomView div.directions > svg.down {\n    transform: translateY(1em) rotate(180deg);\n}\n\n.view-conventFloor-RoomView div.directions > svg.left {\n    transform: translateX(-1em) rotate(-90deg);\n}","",{version:3,sources:["webpack://./src/view/convent-floor/room/room-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,cAAc;IACd,mCAAmC;IACnC,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,iBAAiB;IACjB,oBAAoB;IACpB,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,UAAU;AACd;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,aAAa;IACb,WAAW;AACf;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,0CAA0C;AAC9C",sourcesContent:[".view-conventFloor-RoomView {\n    position: relative;\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-conventFloor-RoomView div.directions {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: 0;\n    height: 0;\n    overflow: visible;\n    pointer-events: none;\n    opacity: 0;\n    transition: opacity .2s;\n}\n\n.view-conventFloor-RoomView.hover div.directions {\n    opacity: .9;\n    z-index: 9;\n}\n\n.view-conventFloor-RoomView div.directions > svg {\n    position: absolute;\n    width: 1em;\n    height: 1em;\n    margin: -.5em;\n    color: #f90;\n}\n\n.view-conventFloor-RoomView div.directions > svg.up {\n    transform: translateY(-1em);\n}\n\n.view-conventFloor-RoomView div.directions > svg.right {\n    transform: translateX(1em) rotate(90deg);\n}\n\n.view-conventFloor-RoomView div.directions > svg.down {\n    transform: translateY(1em) rotate(180deg);\n}\n\n.view-conventFloor-RoomView div.directions > svg.left {\n    transform: translateX(-1em) rotate(-90deg);\n}"],sourceRoot:""}]);const s=a},80:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-LanguageButtonView {\n    cursor: pointer;\n    transform: scale(.9);\n    filter: brightness(.7);\n    transition: all .3s;\n}\n\n.view-LanguageButtonView.selected {\n    transform: scale(1);\n    filter: brightness(1);\n}\n\n.view-LanguageButtonView > svg {\n    width: 5rem;\n    height: 5rem;\n}\n","",{version:3,sources:["webpack://./src/view/language-button/language-button-view.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,oBAAoB;IACpB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-LanguageButtonView {\n    cursor: pointer;\n    transform: scale(.9);\n    filter: brightness(.7);\n    transition: all .3s;\n}\n\n.view-LanguageButtonView.selected {\n    transform: scale(1);\n    filter: brightness(1);\n}\n\n.view-LanguageButtonView > svg {\n    width: 5rem;\n    height: 5rem;\n}\n"],sourceRoot:""}]);const s=a},4249:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(5815),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},1981:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(1424),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},1142:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(4073),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},405:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(6448),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},6114:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(6532),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},7999:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(5875),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},8268:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(1032),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},1860:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),l=t.n(s),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(80),v={};v.styleTagTransform=p(),v.setAttributes=c(),v.insert=l().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d(),o()(h.Z,v);const m=h.Z&&h.Z.locals?h.Z.locals:void 0},6137:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n){var r=this;this.element=e,this.handlers=n,this.timeStamp=0,this.x=0,this.y=0,this.handlePointerDown=function(e){r.timeStamp=e.timeStamp;var n=t(r.getCoords(e),2),o=n[0],i=n[1];r.x=o,r.y=i,r.element.setPointerCapture(e.pointerId),r.onStart()},this.handlePointerMove=function(e){var n=r,o=n.timeStamp,i=n.onPan;if(0!==o){var a=t(r.getCoords(e),2),s=a[0],l=a[1];i({deltaX:s-r.x,deltaY:l-r.y})}},this.handlePointerUp=function(e){var n=r,o=n.timeStamp,i=n.onSwipe,a=t(r.getCoords(e),2),s=a[0],l=a[1],u=s-r.x,c=l-r.y,f=e.timeStamp-o;i({deltaX:u,deltaY:c,vectorX:u/f,vectorY:c/f}),r.timeStamp=0},this.onStart=function(){var e=r.handlers.onStart;e&&e()},this.onPan=function(e){var n=r.handlers.onPan;n&&n(e)},this.onSwipe=function(e){var n=r.handlers.onSwipe;n&&n(e)},e.addEventListener("pointerdown",this.handlePointerDown,!1),e.addEventListener("pointermove",this.handlePointerMove,!1),e.addEventListener("pointerup",this.handlePointerUp,!1)}return e.prototype.detach=function(){var e=this.element;e.removeEventListener("pointerdown",this.handlePointerDown,!1),e.removeEventListener("pointermove",this.handlePointerMove,!1),e.removeEventListener("pointerup",this.handlePointerUp,!1)},e.prototype.getCoords=function(e){var n=this.element.getBoundingClientRect();return[(e.clientX-n.left)/n.width,(e.clientY-n.top)/n.height]},e}();n.default=r},9927:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useHistoryState=void 0;var s=i(t(7294)),l="".concat(Math.random(),"HistoryState").concat(Date.now()).substr(2);n.useHistoryState=function(e,n){var t=function(n){var t;console.log("🚀 PUSH ",n),window.history.pushState(((t={})[l]=e,t.value=n,t),"")},r=a(s.useState(n),2),o=r[0],i=r[1];return s.useEffect((function(){t(n);var r=function(n){var t=n.state;console.log("🚀 POP ",t),function(e){return!!e&&!Array.isArray(e)&&"object"==typeof e}(t)?t[l]===e?i(t.value):console.error("Wrong key:",l,t):console.error("Not an object!",t)};return window.addEventListener("popstate",r),function(){return window.removeEventListener("popstate",r)}}),[e]),[o,function(e){t(e),i(e)}]}},9017:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useLanguage=void 0;var s=i(t(7294));n.useLanguage=function(e){var n=a(s.useState(""),2),t=n[0],r=n[1],o=function(n){e.$lang=n,e.$loadDefaultLang(n).then((function(){return r(n)})).catch(console.error)};return s.useEffect((function(){r(""),o(e.$lang)}),[e]),[t,o]}},5796:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}l((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1981),t(4249);var a=t(4827),s=i(t(1342)),l=i(t(1726)),u=i(t(9462)),c=i(t(1493)),f=i(t(3859)),d=i(t(7294)),A=i(t(3935)),p=i(t(639));!function(){r(this,void 0,void 0,(function(){var e,n,t,r;return o(this,(function(o){switch(o.label){case 0:return[4,p.default.$loadDefaultLang()];case 1:return o.sent(),[4,(0,a.loadTexture)(l.default)];case 2:return e=o.sent(),[4,(0,a.loadImage)(f.default,c.default)];case 3:return n=o.sent(),[4,(0,a.loadGLTF)(u.default)];case 4:return t=o.sent(),r={images:{floor:n},meshes:{convent:t},textures:{compass:e}},A.default.render(d.default.createElement(s.default,{assets:r}),document.getElementById("root")),(i=document.getElementById("tgd-logo"))&&(i.classList.add("vanish"),window.setTimeout((function(){var e=i.parentNode;e&&e.removeChild(i)}),900)),[2]}var i}))}))}()},4827:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}l((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},i=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.loadTexture=n.loadGLTF=n.loadImage=void 0;var a=t(2212),s=t(1217);function l(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){var t=new Image;t.src=e,t.onload=function(){return n(t)},t.onerror=function(){return n(null)}}))]}))}))}n.loadImage=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return r(this,void 0,void 0,(function(){var n,t,r,a,s,u;return o(this,(function(o){switch(o.label){case 0:o.trys.push([0,5,6,7]),n=i(e),t=n.next(),o.label=1;case 1:return t.done?[3,4]:[4,l(t.value)];case 2:if(r=o.sent())return[2,r];o.label=3;case 3:return t=n.next(),[3,1];case 4:return[3,7];case 5:return a=o.sent(),s={error:a},[3,7];case 6:try{t&&!t.done&&(u=n.return)&&u.call(n)}finally{if(s)throw s.error}return[7];case 7:throw Error("Unable to load image from ".concat(e.map((function(e){return'"'.concat(e,'"')})).join(", ")))}}))}))};var u=new s.GLTFLoader;n.loadGLTF=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,u.loadAsync(e)];case 1:return[2,t.sent().scene];case 2:throw n=t.sent(),console.error('Unable to load GLTF "'.concat(e,'":'),n),n;case 3:return[2]}}))}))};var c=new a.TextureLoader;n.loadTexture=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){c.load(e,n)}))]}))}))}},4429:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.useApplicationState=void 0;var r=t(2726);Object.defineProperty(n,"useApplicationState",{enumerable:!0,get:function(){return r.useApplicationState}})},2726:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.useApplicationState=n.StepEnum=void 0;var a,s=t(403),l=t(9927);!function(e){e[e.Introduction=0]="Introduction",e[e.FirstRound=1]="FirstRound",e[e.FirstRules=2]="FirstRules",e[e.FirstVictory=3]="FirstVictory",e[e.SecondRound=4]="SecondRound",e[e.SecondRules=5]="SecondRules",e[e.SecondVictory=6]="SecondVictory"}(a=n.StepEnum||(n.StepEnum={}));var u=r({step:a.Introduction},{roomsFloor1:[1,2,1,2,2,1,2,1],roomsFloor2:[3,3,1,5,5,1,5,1]}),c=u;function f(e){return function(n,t){var a=c,s=i([],o(a.roomsFloor1),!1);s[n]--,s[t]++;var l=a.roomsFloor2;e(r(r({},a),{roomsFloor1:s,step:v(a.step,s,l)}))}}function d(e){return function(n,t){var a=c,s=i([],o(a.roomsFloor2),!1);s[n]--,s[t]++;var l=a.roomsFloor1;e(r(r({},a),{roomsFloor2:s,step:v(a.step,l,s)}))}}function A(e){return function(){var n=c;switch(n.step){case a.FirstRound:return e(r(r({},n),{step:a.FirstRules}));case a.SecondRound:return e(r(r({},n),{step:a.SecondRules}));default:throw Error('Impossible to OPEN from step "'.concat(h(n.step),'"!'))}}}function p(e){return function(){var n=c;switch(n.step){case a.Introduction:e(r(r(r({},n),{step:a.FirstRound}),{roomsFloor1:[1,2,1,2,2,1,2,1],roomsFloor2:[3,3,1,5,5,1,5,1]}));break;case a.FirstRules:e(r(r({},n),{step:a.FirstRound}));break;case a.FirstVictory:e(r(r(r({},n),{step:a.SecondRound}),{roomsFloor1:[1,1,1,1,9,1,1,1],roomsFloor2:[3,2,3,1,1,4,5,3]}));break;case a.SecondRules:e(r(r({},n),{step:a.SecondRound}));break;case a.SecondVictory:e(r(r({},n),{step:a.Introduction}));break;default:throw Error('Impossible to CLOSE from step "'.concat(h(n.step),'"!'))}}}function h(e){switch(e){case a.FirstRound:return"FirstRound";case a.FirstRules:return"FirstRules";case a.FirstVictory:return"FirstVictory";case a.Introduction:return"Introduction";case a.SecondRound:return"SecondRound";case a.SecondRules:return"SecondRules";case a.SecondVictory:return"SecondVictory";default:return"".concat(e," ???")}}function v(e,n,t){if(e!==a.FirstRound&&e!==a.SecondRound)return e;var r=(0,s.checkRules)({roomsFloor1:n,roomsFloor2:t}),o=r.ruleN,i=r.ruleE,l=r.ruleS,u=r.ruleW;return o&&i&&l&&u?e===a.FirstRound?a.FirstVictory:a.SecondVictory:e}n.useApplicationState=function(){var e=o((0,l.useHistoryState)("puzzle/convent",u),2),n=e[0],t=e[1];return c=n,{state:n,hideInstructions:p(t),showInstructions:A(t),movePrisonerOfFloor1:f(t),movePrisonerOfFloor2:d(t),rules:(0,s.checkRules)(n)}}},639:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4235);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6463:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}l((r=r.apply(e,n||[])).next())}))},i=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},a=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},s=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},l=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0});var u,c=t(3884),f=function(){function e(){var e=this;this._lang=window.localStorage.getItem("lang")||navigator.language.substr(0,2),this.$onChange=new A,this._=function(n){for(var t,r,o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];try{var s=e._allTranslations;if(s[e.$lang]&&(f=s[e.$lang][n]))return d(f,o);var l=Object.keys(s);try{for(var u=a(l),c=u.next();!c.done;c=u.next()){var f,A=c.value,p=s[A];if("string"==typeof(f=p[n]))return d(f,o)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(t)throw t.error}}return console.error('Missing translation for item "'.concat(n,'"!'),o),""}catch(e){throw Error('Error while looking for a translation of "'.concat(n,'":\n').concat(JSON.stringify(e,null,"  ")))}},this._allTranslations={},this._loaders=[]}return Object.defineProperty(e.prototype,"$fallbackLanguage",{get:function(){return c.fallback},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$availableLanguages",{get:function(){return l([],s(c.languages),!1)},enumerable:!1,configurable:!0}),e.prototype.$loadDefaultLang=function(e){var n;return o(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return this._lang=null!==(n=null!=e?e:window.localStorage.getItem("lang"))&&void 0!==n?n:window.navigator.language.substr(0,2),[4,this._load(this._lang)];case 1:return t.sent(),this._lang===this.$fallbackLanguage?[3,3]:[4,this._load(this.$fallbackLanguage)];case 2:t.sent(),t.label=3;case 3:return this.$onChange.fire(this),[2]}}))}))},e.prototype.$toText=function(e,n){if(!e)return"";if("string"==typeof e)return e;var t=e[null!=n?n:this._lang];if("string"==typeof t)return t;var r=e[Object.keys(e)[0]];return"string"==typeof r?r:""},e.prototype.$toIntl=function(e,n){var t,r,o,i,s,l=null!=n?n:this.$lang;if(!e)return(t={})[l]="",t;if(Array.isArray(e))return(r={})[l]=e.filter(p).map((function(e){return"".concat(e)})).join(""),r;if("object"==typeof e){var u={},c=Object.keys(e).filter((function(e){return"string"==typeof e})).filter((function(e){return e.trim().length>1}));try{for(var f=a(c),d=f.next();!d.done;d=f.next()){var A=d.value;u[A]=e[A]}}catch(e){o={error:e}}finally{try{d&&!d.done&&(i=f.return)&&i.call(f)}finally{if(o)throw o.error}}return u}return(s={})[l]=e,s},e.prototype.$addTranslation=function(e,n,t){var r,o,i=this.$toIntl(t,e);i[e]=n;var s={};try{for(var l=a(Object.keys(i)),u=l.next();!u.done;u=l.next()){var c=u.value,f=i[c];0!==f.trim().length&&(s[c]=f)}}catch(e){r={error:e}}finally{try{u&&!u.done&&(o=l.return)&&o.call(l)}finally{if(r)throw r.error}}return s},Object.defineProperty(e.prototype,"$lang",{get:function(){return this.$availableLanguages.includes(this._lang)?this._lang:this.$fallbackLanguage},set:function(e){var n=this;this.$availableLanguages.includes(e)||(console.warn(e,"is not part of",this.$availableLanguages,"so we fallback to",this.$fallbackLanguage),e=this.$fallbackLanguage),window.localStorage.setItem("lang",e),e!==this._lang&&(this._lang=e,this._load(e).then((function(){return n.$onChange.fire(n)})).catch(console.error))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$",{get:function(){return this._},enumerable:!1,configurable:!0}),e.prototype._registerTranslationsLoader=function(e){this._loaders.push(e)},e.prototype._unregisterTranslationsLoader=function(e){this._loaders=this._loaders.filter((function(n){return n!==e}))},e.prototype._load=function(e){return o(this,void 0,void 0,(function(){var n,t,o,s,l,u,c,f;return i(this,(function(i){switch(i.label){case 0:if(void 0!==this._allTranslations[e])return[3,9];n={},i.label=1;case 1:i.trys.push([1,6,7,8]),t=a(this._loaders),o=t.next(),i.label=2;case 2:return o.done?[3,5]:(s=o.value,l=[r({},n)],[4,s(e)]);case 3:n=r.apply(void 0,l.concat([i.sent()])),i.label=4;case 4:return o=t.next(),[3,2];case 5:return[3,8];case 6:return u=i.sent(),c={error:u},[3,8];case 7:try{o&&!o.done&&(f=t.return)&&f.call(t)}finally{if(c)throw c.error}return[7];case 8:this._allTranslations[e]=n,i.label=9;case 9:return[2]}}))}))},e}();function d(e,n){for(var t="",r=0,o=u.Text,i=-1,a=0;a<e.length;a++){var s=e.charAt(a);switch(o){case u.Text:"\\"===s?(o=u.Escape,t+=e.substr(r,a-r),r=a+1):"$"===s&&(o=u.Placeholder,t+=e.substr(r,a-r),r=a+"$1".length);break;case u.Escape:o=u.Text;break;case u.Placeholder:if(o=u.Text,i=parseInt(s,10),isNaN(i))throw Error("Parsing error at position ".concat(a,' for translation "').concat(e,'"!\nEscape "$" if you don\'t want to use a placeholder.'));t+=n[i-1]||"";break;default:o=u.Text}}return t+e.substr(r)}n.default=f,function(e){e[e.Text=0]="Text",e[e.Escape=1]="Escape",e[e.Placeholder=2]="Placeholder"}(u||(u={}));var A=function(){function e(e){var n=this;void 0===e&&(e=""),this.name=e,this.listeners=[],this.fire=function(e){var t,r;try{for(var o=a(n.listeners),i=o.next();!i.done;i=o.next()){var s=i.value;try{s(e)}catch(t){console.error("[".concat(n.name,"] Error in a listener!")),console.error(">  ex.: ",t),console.error(">  arg.: ",e)}}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(n){return n!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();function p(e){return"string"==typeof e}},4235:function(e,n,t){var r,o=this&&this.__extends||(r=function(e,n){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},r(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(n,e,t);return a(n,e),n},l=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function s(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}l((r=r.apply(e,n||[])).next())}))},u=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}},c=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},f=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.AppTranslations=void 0;var A=function(e){function n(){var n=e.call(this)||this;return n._registerTranslationsLoader((function(e){return l(n,void 0,void 0,(function(){return u(this,(function(n){switch(n.label){case 0:switch(e){case"en":return[3,1];case"fr":return[3,3];case"it":return[3,5]}return[3,7];case 1:return[4,Promise.resolve().then((function(){return s(t(9090))}))];case 2:case 4:case 6:return[2,n.sent().default];case 3:return[4,Promise.resolve().then((function(){return s(t(4997))}))];case 5:return[4,Promise.resolve().then((function(){return s(t(4283))}))];case 7:return[2,{}]}}))}))})),n}return o(n,e),Object.defineProperty(n.prototype,"backButton",{get:function(){return this._("back-button")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"close",{get:function(){return this._("close")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"howToPlay",{get:function(){return this._("how-to-play")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"intro",{get:function(){return this._("intro")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleDouble",{get:function(){return this._("rule-double")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleEast",{get:function(){return this._("rule-east")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleNorth",{get:function(){return this._("rule-north")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleSouth",{get:function(){return this._("rule-south")},enumerable:!1,configurable:!0}),n.prototype.ruleSum=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this._.apply(this,f(["rule-sum"],c(e),!1))},Object.defineProperty(n.prototype,"ruleWest",{get:function(){return this._("rule-west")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"secondRoundButton",{get:function(){return this._("second-round-button")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"startButton",{get:function(){return this._("start-button")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"title",{get:function(){return this._("title")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"wellDone1",{get:function(){return this._("well-done1")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"wellDone2",{get:function(){return this._("well-done2")},enumerable:!1,configurable:!0}),n}(d(t(6463)).default);n.AppTranslations=A,n.default=new A},9090:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(3191));n.default=o.default},4997:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(320));n.default=o.default},4283:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(7753));n.default=o.default},8098:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1142);var s=i(t(7294)),l=t(4429),u=a(t(6383)),c=a(t(4883)),f=a(t(8077));function d(e){var n=["custom","view-AppView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=(0,l.useApplicationState)(),t=n.state,r=n.hideInstructions,o=n.showInstructions,i=n.movePrisonerOfFloor1,a=n.movePrisonerOfFloor2,A=n.rules;return s.createElement("div",{className:d(e)},function(e,n,t,r){return s.createElement(s.Fragment,null,s.createElement(c.default,{rooms:e.roomsFloor1,background:n.assets.images.floor,onMove:t}),s.createElement(c.default,{rooms:e.roomsFloor2,background:n.assets.images.floor,onMove:r}))}(t,e,i,a),function(e,n,t,r,o){var i=r.ruleN,a=r.ruleE,l=r.ruleS,c=r.ruleW;return s.createElement("div",{className:"fill"},s.createElement(u.default,{roomsFloor1:e,roomsFloor2:n,meshes:t.assets.meshes,compassTexture:t.assets.textures.compass}),function(e,n,t,r,o){return s.createElement("footer",{onClick:o},s.createElement("div",{className:e?"yes":"no"},"N"),s.createElement("div",{className:n?"yes":"no"},"E"),s.createElement("div",{className:t?"yes":"no"},"S"),s.createElement("div",{className:r?"yes":"no"},"W"))}(i,a,l,c,o))}(t.roomsFloor1,t.roomsFloor2,e,A,o),s.createElement(f.default,{onClose:r,rules:A,step:t.step}))}},1342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8098);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8077:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(9970);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},9970:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(405);var l=i(t(7294)),u=s(t(834)),c=s(t(9732)),f=t(2726),d=s(t(639)),A=t(9017);function p(e){var n=["custom","view-app-InstructionsView"];switch("string"==typeof e.className&&n.push(e.className),e.step){case f.StepEnum.Introduction:case f.StepEnum.FirstRules:case f.StepEnum.FirstVictory:case f.StepEnum.SecondRules:case f.StepEnum.SecondVictory:n.push("show");break;default:n.push("hide")}return n.join(" ")}function h(e,n,t){return l.createElement("div",{className:"rule"},l.createElement("div",{className:t?"yes":"no"},e),l.createElement(c.default,null,n))}n.default=function(e){var n=a((0,A.useLanguage)(d.default),2),t=n[0],r=n[1],o=l.useRef(null);return l.useEffect((function(){var e=o.current;e&&e.scrollTo({top:0,behavior:"auto"})}),[e.step]),l.createElement("div",{className:p(e),ref:o},function(e,n){return l.createElement("div",{className:"languages"},l.createElement(u.default,{className:"fr"===e?"selected":"",lang:"fr",label:"Français",onClick:n}),l.createElement(u.default,{className:"it"===e?"selected":"",lang:"it",label:"Italiano",onClick:n}),l.createElement(u.default,{className:"en"===e?"selected":"",lang:"en",label:"English",onClick:n}))}(t,r),function(e,n,t){switch(e){case f.StepEnum.Introduction:return function(e){return l.createElement(l.Fragment,null,l.createElement(c.default,null,d.default.intro),l.createElement("button",{onClick:e},d.default.startButton))}(t);case f.StepEnum.FirstRules:case f.StepEnum.SecondRules:return function(e,n){return l.createElement(l.Fragment,null,h("N",d.default.ruleNorth,e.ruleN),h("E",d.default.ruleEast,e.ruleE),h("S",d.default.ruleSouth,e.ruleS),h("W",d.default.ruleWest,e.ruleW),l.createElement("button",{onClick:n},d.default.backButton))}(n,t);case f.StepEnum.FirstVictory:return function(e){return l.createElement(l.Fragment,null,l.createElement(c.default,null,d.default.wellDone1),l.createElement("button",{onClick:e},d.default.startButton))}(t);case f.StepEnum.SecondVictory:return function(e){return l.createElement(l.Fragment,null,l.createElement(c.default,null,d.default.wellDone2),l.createElement("button",{onClick:e},d.default.startButton))}(t);default:return l.createElement("div",{className:"error"},"Unexpected step: ",e)}}(e.step,e.rules,e.onClose),l.createElement("hr",null),l.createElement(c.default,null,d.default.howToPlay))}},403:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.checkRules=void 0,n.checkRules=function(e){var n=e.roomsFloor1,r=e.roomsFloor2,o=t(n,8),i=o[0],a=o[1],s=o[2],l=o[3],u=o[4],c=o[5],f=o[6],d=o[7],A=t(r,8),p=A[0],h=A[1],v=A[2],m=A[3],b=A[4],y=A[5],g=A[6],w=A[7];return{ruleN:i+a+s+p+h+v===11,ruleE:s+u+d+v+b+w===11,ruleS:c+f+d+y+g+w===11,ruleW:i+l+c+p+m+y===11}}},3964:function(e,n,t){var r=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useCanvas3D=void 0;var i=o(t(6137)),a=t(2212),s=t(7294),l=o(t(1636));function u(e,n){var t=Math.PI*(2-e)*.5,r=1.5*Math.sin(t),o=1.5*Math.cos(t),i=new a.Mesh(new a.PlaneGeometry(1.4,1.4),new a.MeshPhongMaterial({map:n,transparent:!0,specular:5}));return i.position.set(r,0,o),i.rotation.set(0,t,0),i}function c(e){var n=128,t=document.createElement("canvas");t.width=n,t.height=n;var r=t.getContext("2d");if(!r)throw Error("Unable to create context 2D!");r.clearRect(0,0,n,n),r.font="bold ".concat(64,"px sans-serif");var o="".concat(e),i=.5*(n-r.measureText(o).width);r.fillStyle=11===e?"#5f3b":"#b00b",r.fillText(o,i,96),r.strokeStyle="#000",r.lineWidth=3.84,r.strokeText(o,i,96);var s=new a.CanvasTexture(t);return s.flipY=!0,s}n.useCanvas3D=function(e,n,t,o,f){var d=(0,s.useRef)((function(e,n,t,r){})),A=r(n,8),p=A[0],h=A[1],v=A[2],m=A[3],b=A[4],y=A[5],g=A[6],w=A[7],C=r(t,8),B=C[0],_=C[1],I=C[2],E=C[3],S=C[4],k=C[5],U=C[6],F=C[7],x=p+h+v+B+_+I,O=v+b+w+I+S+F,P=y+g+w+k+U+F,j=p+m+y+B+E+k;(0,s.useEffect)((function(){var n=e.current;if(n){var t=function(e,n,t){var r=new a.WebGLRenderer({canvas:e}),o=function(e){var n=new a.PerspectiveCamera(45,e,.1,100);return n.position.set(2,3,5),n.lookAt(0,0,0),n}(e.width/e.height),i=function(){var e=new a.AmbientLight(16777215,1),n=new a.DirectionalLight(16772829,2);return n.position.set(-1,1,5),n.target.position.set(0,0,0),{ambientLight:e,directionalLight:n}}(),s=i.ambientLight,l=i.directionalLight,f=new a.Scene;f.background=new a.Color("#def");var d=new a.Group,A=function(){var e=u(0,c(0)),n=u(1,c(1)),t=u(2,c(2)),r=u(3,c(3));return r.material.map=c(666),{faceN:e,faceE:n,faceS:t,faceW:r}}(),p=A.faceN,h=A.faceE,v=A.faceS,m=A.faceW;d.add(n.convent,function(e){var n=new a.Mesh(new a.PlaneGeometry(4,4),new a.MeshPhongMaterial({map:e,transparent:!0}));return n.position.set(0,-.5,0),n.rotateX(-Math.PI/2),n}(t),p,h,v,m),f.add(d,s,l);var b=function(e,n,t,r,o){var i=0,a=0,s=0;return function(l){var u=null!=l?l:s;s=u,e.clientWidth===i&&e.clientHeight===a||(i=e.clientWidth,a=e.clientHeight,e.width=i,e.height=a,n.aspect=i/a,n.updateProjectionMatrix(),t.setSize(i,a,!1)),r.rotation.set(0,u,0),t.render(o,n)}}(e,o,r,d,f);window.requestAnimationFrame((function(){return b()}));var y=function(e,n,t,r,o){var i=0,a=0,s=0,l=0;return function(u,f,d,A){i!==u&&(i=u,e.material.map=c(u)),a!==f&&(a=u,n.material.map=c(f)),s!==d&&(s=u,t.material.map=c(d)),l!==A&&(l=u,r.material.map=c(A)),window.requestAnimationFrame((function(){return o()}))}}(p,h,v,m,b);return{paint:b,updateTotals:y}}(n,o,f),r=t.paint,s=t.updateTotals;d.current=s;var A=new l.default(r),p=new i.default(n,{onStart:A.handleStart,onPan:A.handlePan,onSwipe:A.handleSwipe});return function(){return p.detach()}}}),[e]),(0,s.useEffect)((function(){d.current(x,O,P,j)}),[d,x,O,P,j])}},9153:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(6114);var a=i(t(7294)),s=t(3964);function l(e){var n=["custom","view-Convent3dView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=a.useRef(null);return(0,s.useCanvas3D)(n,e.roomsFloor1,e.roomsFloor2,e.meshes,e.compassTexture),a.createElement("canvas",{className:l(e),ref:n})}},6383:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(9153);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1636:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=Math.PI,r=function(){function e(e){var n=this;this.onChange=e,this.angle=-.4,this.speed=.001,this.timeStamp=0,this.handleStart=function(){n.speed=0},this.handlePan=function(e){n.fire(n.angle+t*e.deltaX)},this.handleSwipe=function(e){n.angle+=t*e.deltaX,n.speed=e.vectorX,n.timeStamp=0,window.requestAnimationFrame(n.anim)},this.anim=function(e){if(0===n.timeStamp)return n.timeStamp=e,void window.requestAnimationFrame(n.anim);var t=e-n.timeStamp;n.timeStamp=e,n.angle+=n.speed*t,n.onChange(n.angle);var r=Math.pow(.5,.001*t);n.speed*=r,Math.abs(n.speed)>1e-4?window.requestAnimationFrame(n.anim):console.log("STOP!",n.speed)},window.requestAnimationFrame(this.anim)}return e.prototype.fire=function(e){var n=this;window.requestAnimationFrame((function(){return n.onChange(e)}))},e}();n.default=r},8252:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(7999);var s=i(t(7294)),l=a(t(7657)),u=[0,1,2,3],c=[4,5,6,7];function f(e){var n=["custom","view-ConventFloorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=e.rooms,t=e.onMove;return s.createElement("div",{className:f(e),style:{backgroundImage:"url(".concat(e.background.src,")")}},s.createElement("div",null,u.map((function(e){return s.createElement(l.default,{key:"room-".concat(e),index:e,value:n[e],onMove:t})})),s.createElement("div",null," "),c.map((function(e){return s.createElement(l.default,{key:"room-".concat(e),index:e,value:n[e],onMove:t})}))))}},4883:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8252);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},7657:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(2525);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},2525:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var l=i(t(7294));t(8268);var u=s(t(6137)),c=[[null,1,3,null],[null,2,null,0],[null,null,4,1],[0,null,5,null],[2,null,7,null],[3,6,null,null],[null,7,null,5],[4,null,null,6]];function f(e){return l.createElement("svg",{className:e,viewBox:"0 0 24 24"},l.createElement("path",{fill:"currentColor",stroke:"#000",strokeWidth:2,d:"M1,21L12,16L23,21L12,2Z"}))}function d(e){var n=["custom","view-conventFloor-RoomView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=l.useRef(null),t=function(e,n){var t=a(l.useState(""),2),r=t[0],o=t[1];return l.useEffect((function(){var t=e.current;if(t){var r=new u.default(t,{onStart:function(){o("hover")},onSwipe:function(e){if(o(""),!(n.value<=1)){var t=function(e){var n=e.deltaX,t=e.deltaY;return console.log("🚀 [room-view] deltaX = ",n),Math.abs(n)<1&&Math.abs(t)<1?-1:Math.abs(n)>Math.abs(t)?n>0?1:3:t>0?2:0}(e),r=c[n.index][t];"number"==typeof r&&n.onMove(n.index,r)}}});return function(){r.detach()}}}),[e]),r}(n,e),r=a(c[e.index].map((function(e){return"number"==typeof e})),4),o=r[0],i=r[1],s=r[2],A=r[3];return l.createElement("div",{ref:n,className:"".concat(d(e)," ").concat(t),tabIndex:1},l.createElement("div",{className:"directions"},o&&f("up"),i&&f("right"),s&&f("down"),A&&f("left")),l.createElement("div",null,e.value))}},834:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(574);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},574:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));function s(e){var n=["custom","view-LanguageButtonView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(1860),n.default=function(e){return a.createElement("div",{className:s(e),tabIndex:1,onClick:function(){return e.onClick(e.lang)}},a.createElement("svg",{width:"48",height:"48",version:"1.1",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"},a.createElement("g",null,a.createElement("path",{d:"m12 29.5s-8.32-1.85-8.39-6.79c-0.065-4.94 1.6-7.12 5.67-9.32s23.8-2.72 29.5-0.3 6.55 5.43 6.26 9.11-2.07 5.35-7.64 7.37-21 0.577-21 0.577-2.06 3.13-4.13 4.55c-2.07 1.42-9.88 2.44-9.88 2.44s6.05-2.08 7.65-4.47c1.59-2.39 1.94-3.17 1.94-3.17z",fill:"#ffe",stroke:"#000",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:".7"}),a.createElement("text",{x:"25.1",y:"24",fill:"#000e",fontFamily:"sans-serif",fontSize:"8px",fontStyle:"italic","text-align":"center",textAnchor:"middle",style:{lineHeight:1.25}},a.createElement("tspan",{x:"25.1",y:"24"},e.label)))))}},9462:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"msh/convent.57479d48035a9bfad3ec2ec11b8d71d9.glb"},394:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-0.woff2"},4103:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-1.woff2"},2777:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-2.woff2"},2696:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-3.woff2"},8712:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-4.woff2"},296:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-5.woff2"},1726:(e,n,t)=>{e.exports=t.p+"img/compass.b8b993f8a20a5319a835.png"},1493:(e,n,t)=>{e.exports=t.p+"img/floor.14447419a22a2562785c.png"},3859:(e,n,t)=>{e.exports=t.p+"img/floor.7337eaa7fe38ab3b2726.webp"},3884:e=>{e.exports=JSON.parse('{"fallback":"en","languages":["en","fr","it"]}')},3191:e=>{e.exports=JSON.parse('{"back-button":"Back to play","close":"Close","how-to-play":"# How to play?\\n\\nTap a room on the floors plans to change the number of prisoners.\\n\\nSlide the house left and right to see the number of prisoners per face.","intro":"Everyone is under stress in the Red Goat penitentiary, for which you are the most recent person in charge.\\n\\nThe General is coming to do his ten-year inspection next week and no one has warned you.\\nEverything will have to be perfect because the General is rather finicky.\\n\\nThe penitentiary has **16 rooms** spread over **2 floors** and contains **36 prisoners**: **12 on the first floor** and **24 on the second**.\\nTo satisfy the General, it is necessary that:\\n\\n* No room is empty.\\n* The 6 rooms overlooking the **North** must contain **11 prisoners** in all.\\n* Ditto for the view to the **Sub**, to the **East** and to the **West**.\\n","rule-double":"The **second floor** should accommodate **twice** as many prisoners as the **first floor**.","rule-east":"Rooms with a **East** side window must have a total of **11** prisoners.","rule-north":"Rooms with a **North** side window must have a total of **11** prisoners.","rule-south":"Rooms with a **South** side window must have a total of **11** prisoners.","rule-sum":"The total number of prisoners must be **$1**.","rule-west":"Rooms with a **West** side window must have a total of **11** prisoners.","second-round-button":"Go back to work","start-button":"Let\'s do it!","title":"Title","well-done1":"# Well done!\\n\\nYou managed to arrange all the prisoners according to the penitentiary strict rules.  \\nNo doubts that you should be promoted for this!\\n\\nUnfortunately, the very next night, **9 prisoners** escaped because of a broken door lock.\\n\\nYou made sure to change all the locks to prevent any other evasions,\\nbut now you have to arrange the remaining **27 prisoners** in the rooms, by following the same strict rules.\\n\\nBut hurry up, because the general will come tomorrow.","well-done2":"Well done ! You live up to your reputation."}')},320:e=>{e.exports=JSON.parse('{"back-button":"Retour au jeu","close":"Fermer","how-to-play":"# Comment jouer ?\\n\\nTouchez une pièce sur les plans des étages pour modifier le nombre de prisonniers.\\n\\nFaites glisser la maison à gauche et à droite pour voir le nombre de prisonniers par face.","intro":"Tout le monde est en stress dans le pénitencier de Chèvre Rouge dont vous êtes le tout récent responsable.\\n\\nLe Général vient faire son inspection décennale la semaine prochaine et personne ne vous avait prévenu.  \\nIl va falloir que tout soit nickel parce que le Général est plutôt tatillon.\\n\\nLe pénitencier a **16 chambres** réparties sur **2 étages** et contient **36 prisonniers**: **12 au premier étage** et **24 au second**.  \\nPour satisfaire le Général, il faut que :\\n\\n* Aucune chambre ne soit vide.\\n* Les 6 chambres avec vue sur le **Nord** doivent contenir **11 prisonniers** en tout.\\n* Idem pour la vue au **Sub**, à l\'**Est** et à l\'**Ouest**.\\n","rule-double":"Le **deuxième étage** doit accueillir **deux fois** plus de prisonniers que le **premier étage**.","rule-east":"Les chambres avec une fenêtre côté **Est** doivent accueillir un total de **11** prisonniers.","rule-north":"Les chambres avec une fenêtre côté **Nord** doivent accueillir un total de **11** prisonniers.","rule-south":"Les chambres avec une fenêtre côté **Sud** doivent accueillir un total de **11** prisonniers.","rule-sum":"Le nombre total de prisonniers doit être de **$1**.","rule-west":"Les chambres avec une fenêtre côté **Ouest** doivent accueillir un total de **11** prisonniers.","second-round-button":"Retourner travailler","start-button":"À vous de jouer !","title":"Titre","well-done1":"# Bien joué!\\n\\nVous avez réussi à organiser tous les prisonniers selon les règles strictes du pénitencier.\\nAucun doute que vous devriez être promu pour cela !\\n\\nMalheureusement, la nuit suivante, **9 prisonniers** se sont évadés à cause d\'une serrure de porte cassée.\\n\\nVous avez fait en sorte de changer toutes les serrures pour éviter toute autre évasion,\\nmais maintenant vous devez redistribuer les **27 prisonniers** restants dans les chambres, en suivant les mêmes règles strictes.\\n\\nMais dépêchez-vous, car le général arrive demain.","well-done2":"Bravo ! Vous êtes bien à la hauteur de votre réputation."}')},7753:e=>{e.exports=JSON.parse('{"back-button":"Torna a giocare","close":"Chiudere","how-to-play":"# Come si gioca?\\n\\nTocca una stanza nelle planimetrie per modificare il numero di prigionieri.\\n\\nFai scorrere la casa a sinistra ea destra per vedere il numero di prigionieri per faccia.","intro":"Tutti sono sotto stress nel penitenziario di Capra Rossa, di cui sei il recente responsabile.\\n\\nIl Generale verrà a fare la sua ispezione decennale la prossima settimana e nessuno ti ha avvertito.\\nTutto dovrà essere perfetto perché il Generale è piuttosto pignolo.\\n\\nIl penitenziario dispone di **16 stanze** distribuite su **2 piani** e contiene **36 detenuti**: **12 al primo piano** e **24 al secondo**.\\nPer soddisfare il Generale, è necessario che:\\n\\n* Nessuna stanza sia vuota.\\n* Le 6 stanze con vista **Nord** devono contenere **11 detenuti** in tutto.\\n* Idem per la vista al **Sub**, all\'**Est** e all\'**Ovest**.\\n","rule-double":"Il **secondo piano** dovrebbe ospitare il **doppio** delle prigionieri rispetto al **primo piano**.","rule-east":"Le camere con finestra sul lato **Est** devono avere un totale di **11** prigionieri.","rule-north":"Le camere con finestra sul lato **Nord** devono avere un totale di **11** prigionieri.","rule-south":"Le camere con finestra sul lato **Sub** devono avere un totale di **11** prigionieri.","rule-sum":"Il numero totale di prigionieri deve essere **$1**.","rule-west":"Le camere con finestra sul lato **Ovest** devono avere un totale di **11** prigionieri.","second-round-button":"Torna al lavoro","start-button":"Facciamolo!","title":"Titolo","well-done1":"# Molto bene!\\n\\nSei riuscito a sistemare tutti i prigionieri secondo le rigide regole del penitenziario.\\nNon c\'è dubbio che dovresti essere promosso per questo!\\n\\nSfortunatamente, la notte successiva, **9 prigionieri** sono fuggiti a causa di una serratura rotta.\\n\\nTi sei assicurato di cambiare tutte le serrature per evitare altre evasioni,\\nma ora devi sistemare i restanti **27 prigionieri** nelle stanze, seguendo le stesse rigide regole.\\n\\nMa sbrigati, perché domani verrà il generale.","well-done2":"Molto bene ! Sei all\'altezza della tua reputazione."}')}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,