"use strict";(self.webpackChunkpuzzle_convent=self.webpackChunkpuzzle_convent||[]).push([[143],{5815:(e,n,t)=>{t.d(n,{Z:()=>C});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i),l=t(1667),s=t.n(l),u=new URL(t(394),t.b),c=new URL(t(4103),t.b),f=new URL(t(2777),t.b),d=new URL(t(2696),t.b),A=new URL(t(8712),t.b),p=new URL(t(296),t.b),h=a()(o()),m=s()(u),v=s()(c),b=s()(f),g=s()(d),y=s()(A),w=s()(p);h.push([e.id,"\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+m+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+v+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url("+b+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+g+") format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+y+") format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url("+w+") format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./src/fonts/fuzzy-bubbles.css"],names:[],mappings:";AACA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,gHAAgH;AAClH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,mHAAmH;AACrH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,yKAAyK;AAC3K;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,gHAAgH;AAClH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,mHAAmH;AACrH;;AAEA;EACE,0BAA0B;EAC1B,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,4DAA+D;EAC/D,yKAAyK;AAC3K",sourcesContent:["\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-0.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-1.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 400;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-2.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-3.woff2) format('woff2');\n  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-4.woff2) format('woff2');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n\n@font-face {\n  font-family: fuzzy-bubbles;\n  font-style: normal;\n  font-weight: 700;\n  font-display: swap;\n  src: url(./fuzzy-bubbles/fuzzy-bubbles-5.woff2) format('woff2');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const C=h},1424:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: fuzzy-bubbles, sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n\r\n*, *::after, *::before {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    font: inherit;\r\n    border: inherit;\r\n    background-color: #f90;\r\n    font-variant: small-caps;\r\n    line-height: 2em;\r\n    padding: 0 1em;\r\n    font-weight: bold;\r\n    border-radius: .25em;\r\n    box-shadow: 0 .125em .125em #0007;\r\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;;IAEI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,gBAAgB;IAChB,sCAAsC;IACtC,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,WAAW;IACX,WAAW;IACX,SAAS;IACT;;;;;;KAMC;AACL;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,sBAAsB;IACtB,wBAAwB;IACxB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,oBAAoB;IACpB,iCAAiC;AACrC",sourcesContent:["html,\r\nbody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    font-size: 5vmin;\r\n    font-family: fuzzy-bubbles, sans-serif;\r\n    margin: 0;\r\n    padding: 0;\r\n    background-color: #def;\r\n}\r\n\r\n#tgd-logo.vanish {\r\n    opacity: 0;\r\n    transition: opacity 0.9s;\r\n}\r\n\r\nhr {\r\n    margin: 1.5rem 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 1px;\r\n    border: 0;\r\n    background-image: linear-gradient(\r\n        to right,\r\n        transparent,\r\n        currentColor,\r\n        currentColor,\r\n        transparent\r\n    );\r\n}\r\n\r\n*, *::after, *::before {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n    font: inherit;\r\n    border: inherit;\r\n    background-color: #f90;\r\n    font-variant: small-caps;\r\n    line-height: 2em;\r\n    padding: 0 1em;\r\n    font-weight: bold;\r\n    border-radius: .25em;\r\n    box-shadow: 0 .125em .125em #0007;\r\n}"],sourceRoot:""}]);const l=a},2404:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".inputDigit-DigicodeView {\n    position: absolute;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    gap: 6px;\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n\n.inputDigit-DigicodeView > button {\n    font: inherit;\n    font-size: 30px;\n    border: none;\n    background-color: oldlace;\n    color: #752;\n    text-shadow: 0.0625em 0.0625em 0.125em #000;\n    display: grid;\n    place-items: center;\n    width: 2em;\n    height: 2em;\n    cursor: pointer;\n    border-radius: 50%;\n    padding: 0;\n}\n","",{version:3,sources:["webpack://./src/input-digit/digicode/digicode-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,aAAa;IACb,qCAAqC;IACrC,kCAAkC;IAClC,QAAQ;IACR,UAAU;IACV,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,2CAA2C;IAC3C,aAAa;IACb,mBAAmB;IACnB,UAAU;IACV,WAAW;IACX,eAAe;IACf,kBAAkB;IAClB,UAAU;AACd",sourcesContent:[".inputDigit-DigicodeView {\n    position: absolute;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    gap: 6px;\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n\n.inputDigit-DigicodeView > button {\n    font: inherit;\n    font-size: 30px;\n    border: none;\n    background-color: oldlace;\n    color: #752;\n    text-shadow: 0.0625em 0.0625em 0.125em #000;\n    display: grid;\n    place-items: center;\n    width: 2em;\n    height: 2em;\n    cursor: pointer;\n    border-radius: 50%;\n    padding: 0;\n}\n"],sourceRoot:""}]);const l=a},6956:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"div.inputDigit {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition: background-color 0.3s;\n    z-index: 9999;\n}\n\ndiv.inputDigit.darken {\n    background-color: #0007;\n}\n","",{version:3,sources:["webpack://./src/input-digit/input-digit.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,iCAAiC;IACjC,aAAa;AACjB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["div.inputDigit {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition: background-color 0.3s;\n    z-index: 9999;\n}\n\ndiv.inputDigit.darken {\n    background-color: #0007;\n}\n"],sourceRoot:""}]);const l=a},4073:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,'.view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView div.yes,\n.view-AppView div.no {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView div.no {\n    background-color: #b00;\n    color: #fff;\n}\n\n.view-AppView div.message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0 1rem 2rem 1rem;\n    background-color: #defd;\n    overflow: auto;\n    opacity: 1;\n    transition: opacity 0.3s;\n}\n\n.view-AppView div.message::before,\n.view-AppView div.message::after {\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 9;\n    height: 2rem;\n    content: ".";\n    font-size: 0;\n    pointer-events: none;\n}\n\n.view-AppView div.message::before {\n    top: 0;\n    background-image: linear-gradient(to top, transparent, #def);\n}\n\n.view-AppView div.message::after {\n    bottom: 0;\n    background-image: linear-gradient(to top, #def, transparent);\n}\n\n.view-AppView div.message.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.view-AppView div.message div.languages {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-AppView div.message div.rule {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n    font: 80%;\n    margin: 0.75rem 0;\n}\n\n.view-AppView div.message div.rule > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView div.message div.rule > *:last-child {\n    flex: 1 1 auto;\n}\n',"",{version:3,sources:["webpack://./src/view/app/app-view.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,aAAa;IACb,2BAA2B;IAC3B,oBAAoB;IACpB,MAAM;IACN,gBAAgB;AACpB;;AAEA;IACI;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,mBAAmB;IACvB;AACJ;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,SAAS;IACT,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;IACnB,4BAA4B;IAC5B,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,wCAAwC;AAC5C;;AAEA;;IAEI,sBAAsB;IACtB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;IAClB,oBAAoB;IACpB,kCAAkC;AACtC;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,yBAAyB;IACzB,uBAAuB;IACvB,cAAc;IACd,UAAU;IACV,wBAAwB;AAC5B;;AAEA;;IAEI,eAAe;IACf,OAAO;IACP,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,MAAM;IACN,4DAA4D;AAChE;;AAEA;IACI,SAAS;IACT,4DAA4D;AAChE;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,mBAAmB;IACnB,UAAU;IACV,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB",sourcesContent:['.view-AppView {\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: stretch;\n    gap: 0;\n    overflow: hidden;\n}\n\n@media (orientation: portrait) {\n    .view-AppView {\n        flex-direction: column;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-AppView {\n        flex-direction: row;\n    }\n}\n\n.view-AppView > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView > .fill {\n    position: relative;\n    flex: 1 1 auto;\n}\n\n.view-AppView > .fill > footer {\n    position: absolute;\n    left: 1em;\n    right: 1em;\n    bottom: 0;\n    padding: 0.25em;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 1rem 1rem 0 0;\n    background-color: #333;\n    border: 0.25em solid #642;\n    border-bottom: none;\n    box-shadow: 0 0.125em 0.125em #000 inset;\n}\n\n.view-AppView div.yes,\n.view-AppView div.no {\n    border-radius: 999vmax;\n    padding: 0;\n    line-height: 1.5em;\n    width: 1.5em;\n    text-align: center;\n    transition: all 0.3s;\n    box-shadow: 0 0.125em 0.125em #000;\n}\n\n.view-AppView div.yes {\n    background-color: #5f3;\n    color: #000;\n}\n\n.view-AppView div.no {\n    background-color: #b00;\n    color: #fff;\n}\n\n.view-AppView div.message {\n    position: absolute;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0 1rem 2rem 1rem;\n    background-color: #defd;\n    overflow: auto;\n    opacity: 1;\n    transition: opacity 0.3s;\n}\n\n.view-AppView div.message::before,\n.view-AppView div.message::after {\n    position: fixed;\n    left: 0;\n    right: 0;\n    z-index: 9;\n    height: 2rem;\n    content: ".";\n    font-size: 0;\n    pointer-events: none;\n}\n\n.view-AppView div.message::before {\n    top: 0;\n    background-image: linear-gradient(to top, transparent, #def);\n}\n\n.view-AppView div.message::after {\n    bottom: 0;\n    background-image: linear-gradient(to top, #def, transparent);\n}\n\n.view-AppView div.message.hide {\n    opacity: 0;\n    pointer-events: none;\n}\n\n.view-AppView div.message div.languages {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n}\n\n.view-AppView div.message div.rule {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    gap: 0.5em;\n    font: 80%;\n    margin: 0.75rem 0;\n}\n\n.view-AppView div.message div.rule > * {\n    flex: 0 0 auto;\n}\n\n.view-AppView div.message div.rule > *:last-child {\n    flex: 1 1 auto;\n}\n'],sourceRoot:""}]);const l=a},6532:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/view/convent-3d/convent-3d-view.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-Convent3dView {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n}\n"],sourceRoot:""}]);const l=a},5875:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n    border-radius: 50%;\n    padding: .25em;\n    background-color: #b00;\n    color: #fffe;\n}\n\n.view-ConventFloorView > div > div.total.ok {\n    background-color: #5f3;\n    color: #000e;\n}","",{version:3,sources:["webpack://./src/view/convent-floor/convent-floor-view.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,qCAAqC;IACrC,wBAAwB;IACxB,4BAA4B;IAC5B,2BAA2B;IAC3B,wCAAwC;AAC5C;;AAEA;IACI;QACI,mBAAmB;QACnB,WAAW;IACf;AACJ;;AAEA;IACI;QACI,kBAAkB;QAClB,YAAY;IAChB;AACJ;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,qCAAqC;IACrC,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,mCAAmC;IACnC,eAAe;IACf,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,cAAc;IACd,iBAAiB;IACjB,oBAAoB;IACpB,eAAe;IACf,kBAAkB;IAClB,cAAc;IACd,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,YAAY;AAChB",sourcesContent:[".view-ConventFloorView {\n    display: grid;\n    place-items: center;\n    --size: calc(100vmax * 0.3);\n    --inner-size: calc(var(--size) * 0.7);\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    font-size: calc(var(--inner-size) * 0.2);\n}\n\n@media (orientation: portrait) {\n    .view-ConventFloorView {\n        height: var(--size);\n        width: auto;\n    }\n}\n\n@media (orientation: landscape) {\n    .view-ConventFloorView {\n        width: var(--size);\n        height: auto;\n    }\n}\n\n.view-ConventFloorView > div {\n    display: grid;\n    place-items: center;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n    width: var(--inner-size);\n    height: var(--inner-size);\n}\n\n.view-ConventFloorView > div > div {\n    color: oldlace;\n    text-shadow: 0.1em 0.1em 0.1em #000;\n    cursor: pointer;\n    transition: 0.3s color;\n    user-select: none;\n    -moz-user-select: none;\n}\n\n.view-ConventFloorView > div > div:hover {\n    color: #fdb;\n}\n\n.view-ConventFloorView > div > div.total {\n    font-size: 80%;\n    text-shadow: none;\n    pointer-events: none;\n    cursor: default;\n    border-radius: 50%;\n    padding: .25em;\n    background-color: #b00;\n    color: #fffe;\n}\n\n.view-ConventFloorView > div > div.total.ok {\n    background-color: #5f3;\n    color: #000e;\n}"],sourceRoot:""}]);const l=a},80:(e,n,t)=>{t.d(n,{Z:()=>l});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,".view-LanguageButtonView {\n    cursor: pointer;\n    transform: scale(.9);\n    filter: brightness(.7);\n    transition: all .3s;\n}\n\n.view-LanguageButtonView.selected {\n    transform: scale(1);\n    filter: brightness(1);\n}\n\n.view-LanguageButtonView > svg {\n    width: 5rem;\n    height: 5rem;\n}\n","",{version:3,sources:["webpack://./src/view/language-button/language-button-view.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,oBAAoB;IACpB,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:[".view-LanguageButtonView {\n    cursor: pointer;\n    transform: scale(.9);\n    filter: brightness(.7);\n    transition: all .3s;\n}\n\n.view-LanguageButtonView.selected {\n    transform: scale(1);\n    filter: brightness(1);\n}\n\n.view-LanguageButtonView > svg {\n    width: 5rem;\n    height: 5rem;\n}\n"],sourceRoot:""}]);const l=a},4249:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(5815),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},1981:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(1424),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},5389:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(2404),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},3286:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(6956),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},1142:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(4073),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},6114:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(6532),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},7999:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(5875),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},1860:(e,n,t)=>{t.r(n),t.d(n,{default:()=>v});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),l=t(569),s=t.n(l),u=t(3565),c=t.n(u),f=t(9216),d=t.n(f),A=t(4589),p=t.n(A),h=t(80),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(h.Z,m);const v=h.Z&&h.Z.locals?h.Z.locals:void 0},6137:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,n,r,o){var i=this;this.element=e,this.onStart=n,this.onPan=r,this.onSwipe=o,this.timeStamp=0,this.x=0,this.y=0,this.handlePointerDown=function(e){i.timeStamp=e.timeStamp;var n=t(i.getCoords(e),2),r=n[0],o=n[1];i.x=r,i.y=o,i.onStart()},this.handlePointerMove=function(e){var n=i,r=n.timeStamp,o=n.onPan;if(0!==r){var a=t(i.getCoords(e),2),l=a[0],s=a[1];o({deltaX:l-i.x,deltaY:s-i.y})}},this.handlePointerUp=function(e){var n=i,r=n.timeStamp,o=n.onSwipe,a=t(i.getCoords(e),2),l=a[0],s=a[1],u=l-i.x,c=s-i.y,f=e.timeStamp-r;o({deltaX:u,deltaY:c,vectorX:u/f,vectorY:c/f}),i.timeStamp=0},e.addEventListener("pointerdown",this.handlePointerDown,!1),e.addEventListener("pointermove",this.handlePointerMove,!1),e.addEventListener("pointerup",this.handlePointerUp,!1)}return e.prototype.detach=function(){var e=this.element;e.removeEventListener("pointerdown",this.handlePointerDown,!1),e.removeEventListener("pointermove",this.handlePointerMove,!1),e.removeEventListener("pointerup",this.handlePointerUp,!1)},e.prototype.getCoords=function(e){var n=this.element.getBoundingClientRect();return[(e.clientX-n.left)/n.width,(e.clientY-n.top)/n.height]},e}();n.default=r},9927:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useHistoryState=void 0;var l=i(t(7294)),s="".concat(Math.random(),"HistoryState").concat(Date.now()).substr(2);n.useHistoryState=function(e,n){var t=function(n){var t;console.log("🚀 PUSH ",n),window.history.pushState(((t={})[s]=e,t.value=n,t),"")},r=a(l.useState(n),2),o=r[0],i=r[1];return l.useEffect((function(){t(n);var r=function(n){var t=n.state;console.log("🚀 POP ",t),function(e){return!!e&&!Array.isArray(e)&&"object"==typeof e}(t)?t[s]===e?i(t.value):console.error("Wrong key:",s,t):console.error("Not an object!",t)};return window.addEventListener("popstate",r),function(){return window.removeEventListener("popstate",r)}}),[e]),[o,function(e){i(e),t(e)}]}},9017:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.useLanguage=void 0;var l=i(t(7294));n.useLanguage=function(e){var n=a(l.useState(""),2),t=n[0],r=n[1],o=function(n){e.$lang=n,e.$loadDefaultLang(n).then((function(){return r(n)})).catch(console.error)};return l.useEffect((function(){r(""),o(e.$lang)}),[e]),[t,o]}},5796:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1981),t(4249);var a=t(4827),l=i(t(1342)),s=i(t(1726)),u=i(t(9462)),c=i(t(1493)),f=i(t(3859)),d=i(t(7294)),A=i(t(3935));!function(){r(this,void 0,void 0,(function(){var e,n,t,r;return o(this,(function(o){switch(o.label){case 0:return[4,(0,a.loadTexture)(s.default)];case 1:return e=o.sent(),[4,(0,a.loadImage)(f.default,c.default)];case 2:return n=o.sent(),[4,(0,a.loadGLTF)(u.default)];case 3:return t=o.sent(),r={images:{floor:n},meshes:{convent:t},textures:{compass:e}},A.default.render(d.default.createElement(l.default,{assets:r}),document.getElementById("root")),(i=document.getElementById("tgd-logo"))&&(i.classList.add("vanish"),window.setTimeout((function(){var e=i.parentNode;e&&e.removeChild(i)}),900)),[2]}var i}))}))}()},4060:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(5389);var a=i(t(7294)),l=[1,2,3,4,5,6,7,8,9];function s(e){var n=["custom","inputDigit-DigicodeView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function u(e,n,t){return e<n?n:e>t?t:e}function c(e){return.5*e}n.default=function(e){var n=a.useRef(null);return a.useEffect((function(){var t=n.current;if(t){var r=t.getBoundingClientRect(),o=r.width,i=r.height,a=document.body,l=u(e.x-c(o),0,a.clientWidth-o),s=u(e.y-c(i),0,a.clientHeight-i);t.style.left="".concat(l,"px"),t.style.top="".concat(s,"px"),t.style.opacity="1"}}),[n,e.x,e.y]),a.createElement("div",{ref:n,className:s(e)},l.map((function(n){return a.createElement("button",{key:n,onClick:function(){return e.onClick(n)}},n)})))}},254:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4060);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},8991:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.inputDigit=void 0;var r=t(417);Object.defineProperty(n,"inputDigit",{enumerable:!0,get:function(){return r.inputDigit}})},417:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.inputDigit=void 0,t(3286);var a=i(t(254)),l=i(t(7294)),s=i(t(3935));n.inputDigit=function(e,n){return r(this,void 0,void 0,(function(){return o(this,(function(t){return[2,new Promise((function(t){var r=document.createElement("div");r.classList.add("inputDigit"),document.body.appendChild(r),window.setTimeout((function(){return r.classList.add("darken")})),s.default.render(l.default.createElement(a.default,{x:e,y:n,onClick:function(e){document.body.removeChild(r),t(e)}}),r)}))]}))}))}},4827:function(e,n,t){var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},o=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},i=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(n,"__esModule",{value:!0}),n.loadTexture=n.loadGLTF=n.loadImage=void 0;var a=t(2212),l=t(1217);function s(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){var t=new Image;t.src=e,t.onload=function(){return n(t)},t.onerror=function(){return n(null)}}))]}))}))}n.loadImage=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return r(this,void 0,void 0,(function(){var n,t,r,a,l,u;return o(this,(function(o){switch(o.label){case 0:o.trys.push([0,5,6,7]),n=i(e),t=n.next(),o.label=1;case 1:return t.done?[3,4]:[4,s(t.value)];case 2:if(r=o.sent())return[2,r];o.label=3;case 3:return t=n.next(),[3,1];case 4:return[3,7];case 5:return a=o.sent(),l={error:a},[3,7];case 6:try{t&&!t.done&&(u=n.return)&&u.call(n)}finally{if(l)throw l.error}return[7];case 7:throw Error("Unable to load image from ".concat(e.map((function(e){return'"'.concat(e,'"')})).join(", ")))}}))}))};var u=new l.GLTFLoader;n.loadGLTF=function(e){return r(this,void 0,void 0,(function(){var n;return o(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,u.loadAsync(e)];case 1:return[2,t.sent().scene];case 2:throw n=t.sent(),console.error('Unable to load GLTF "'.concat(e,'":'),n),n;case 3:return[2]}}))}))};var c=new a.TextureLoader;n.loadTexture=function(e){return r(this,void 0,void 0,(function(){return o(this,(function(n){return[2,new Promise((function(n){c.load(e,n)}))]}))}))}},4429:(e,n,t)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.useApplicationState=void 0;var r=t(2726);Object.defineProperty(n,"useApplicationState",{enumerable:!0,get:function(){return r.useApplicationState}})},2726:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},i=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0}),n.setPrisonersInRoomAtFloor2=n.setPrisonersInRoomAtFloor1=n.useApplicationState=n.StageEnum=void 0;var a,l=t(9927);!function(e){e[e.Introduction=0]="Introduction",e[e.FirstRound=1]="FirstRound",e[e.FirstVictory=2]="FirstVictory",e[e.SecondRound=3]="SecondRound",e[e.SecondVictory=4]="SecondVictory"}(a=n.StageEnum||(n.StageEnum={}));var s={stage:a.Introduction,roomsFloor1:[1,2,1,2,2,1,2,1],roomsFloor2:[1,9,1,5,5,1,5,1],totalPrisoners:0,showInstructions:!1};function u(e,n){return function(t,a){if(!(t<0||t>8||a<1||a>9)){var l=i([],o(e.roomsFloor1),!1);l[t]=a,n(r(r({},e),{roomsFloor1:l}))}}}function c(e,n){return function(t,a){if(!(t<0||t>8||a<1||a>9)){var l=i([],o(e.roomsFloor2),!1);l[t]=a,n(r(r({},e),{roomsFloor2:l}))}}}function f(e){return e===a.FirstRound?36:e===a.SecondRound?27:0}n.useApplicationState=function(){var e=o((0,l.useHistoryState)("puzzle/convent",s),2),n=e[0],t=e[1];return{state:n,setStage:function(e){if(e!==n.stage){var o=r(r({},n),{stage:e,totalPrisoners:f(e)});e===a.FirstRound?(o.roomsFloor1=[1,2,1,2,2,1,2,1],o.roomsFloor2=[1,9,1,5,5,1,5,1]):e===a.SecondRound&&(o.roomsFloor1=[1,1,1,1,2,1,1,1],o.roomsFloor2=[3,2,3,1,1,4,1,3]),t(o)}},hideInstructions:function(){n.showInstructions&&t(r(r({},n),{showInstructions:!1}))},showInstructions:function(){n.showInstructions||t(r(r({},n),{showInstructions:!0}))},setPrisonersInRoomAtFloor1:u(n,t),setPrisonersInRoomAtFloor2:c(n,t)}},n.setPrisonersInRoomAtFloor1=function(e,n,t){if(n<0||n>8)return e;if(t<1||t>9)return e;var a=i([],o(e.roomsFloor1),!1);return a[n]=t,r(r({},e),{roomsFloor1:a})},n.setPrisonersInRoomAtFloor2=function(e,n,t){if(n<0||n>8)return e;if(t<1||t>9)return e;var a=i([],o(e.roomsFloor2),!1);return a[n]=t,r(r({},e),{roomsFloor2:a})}},639:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(4235);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},6463:function(e,n,t){var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},r.apply(this,arguments)},o=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},i=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},a=this&&this.__values||function(e){var n="function"==typeof Symbol&&Symbol.iterator,t=n&&e[n],r=0;if(t)return t.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(n?"Object is not iterable.":"Symbol.iterator is not defined.")},l=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},s=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))};Object.defineProperty(n,"__esModule",{value:!0});var u,c=t(3884),f=function(){function e(){var e=this;this._lang=window.localStorage.getItem("lang")||navigator.language.substr(0,2),this.$onChange=new A,this._=function(n){for(var t,r,o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];try{var l=e._allTranslations;if(l[e.$lang]&&(f=l[e.$lang][n]))return d(f,o);var s=Object.keys(l);try{for(var u=a(s),c=u.next();!c.done;c=u.next()){var f,A=c.value,p=l[A];if("string"==typeof(f=p[n]))return d(f,o)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(r=u.return)&&r.call(u)}finally{if(t)throw t.error}}return console.error('Missing translation for item "'.concat(n,'"!'),o),""}catch(e){throw Error('Error while looking for a translation of "'.concat(n,'":\n').concat(JSON.stringify(e,null,"  ")))}},this._allTranslations={},this._loaders=[]}return Object.defineProperty(e.prototype,"$fallbackLanguage",{get:function(){return c.fallback},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$availableLanguages",{get:function(){return s([],l(c.languages),!1)},enumerable:!1,configurable:!0}),e.prototype.$loadDefaultLang=function(e){var n;return o(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return this._lang=null!==(n=null!=e?e:window.localStorage.getItem("lang"))&&void 0!==n?n:window.navigator.language.substr(0,2),[4,this._load(this._lang)];case 1:return t.sent(),this._lang===this.$fallbackLanguage?[3,3]:[4,this._load(this.$fallbackLanguage)];case 2:t.sent(),t.label=3;case 3:return this.$onChange.fire(this),[2]}}))}))},e.prototype.$toText=function(e,n){if(!e)return"";if("string"==typeof e)return e;var t=e[null!=n?n:this._lang];if("string"==typeof t)return t;var r=e[Object.keys(e)[0]];return"string"==typeof r?r:""},e.prototype.$toIntl=function(e,n){var t,r,o,i,l,s=null!=n?n:this.$lang;if(!e)return(t={})[s]="",t;if(Array.isArray(e))return(r={})[s]=e.filter(p).map((function(e){return"".concat(e)})).join(""),r;if("object"==typeof e){var u={},c=Object.keys(e).filter((function(e){return"string"==typeof e})).filter((function(e){return e.trim().length>1}));try{for(var f=a(c),d=f.next();!d.done;d=f.next()){var A=d.value;u[A]=e[A]}}catch(e){o={error:e}}finally{try{d&&!d.done&&(i=f.return)&&i.call(f)}finally{if(o)throw o.error}}return u}return(l={})[s]=e,l},e.prototype.$addTranslation=function(e,n,t){var r,o,i=this.$toIntl(t,e);i[e]=n;var l={};try{for(var s=a(Object.keys(i)),u=s.next();!u.done;u=s.next()){var c=u.value,f=i[c];0!==f.trim().length&&(l[c]=f)}}catch(e){r={error:e}}finally{try{u&&!u.done&&(o=s.return)&&o.call(s)}finally{if(r)throw r.error}}return l},Object.defineProperty(e.prototype,"$lang",{get:function(){return this.$availableLanguages.includes(this._lang)?this._lang:this.$fallbackLanguage},set:function(e){var n=this;this.$availableLanguages.includes(e)||(console.warn(e,"is not part of",this.$availableLanguages,"so we fallback to",this.$fallbackLanguage),e=this.$fallbackLanguage),window.localStorage.setItem("lang",e),e!==this._lang&&(this._lang=e,this._load(e).then((function(){return n.$onChange.fire(n)})).catch(console.error))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"$",{get:function(){return this._},enumerable:!1,configurable:!0}),e.prototype._registerTranslationsLoader=function(e){this._loaders.push(e)},e.prototype._unregisterTranslationsLoader=function(e){this._loaders=this._loaders.filter((function(n){return n!==e}))},e.prototype._load=function(e){return o(this,void 0,void 0,(function(){var n,t,o,l,s,u,c,f;return i(this,(function(i){switch(i.label){case 0:if(void 0!==this._allTranslations[e])return[3,9];n={},i.label=1;case 1:i.trys.push([1,6,7,8]),t=a(this._loaders),o=t.next(),i.label=2;case 2:return o.done?[3,5]:(l=o.value,s=[r({},n)],[4,l(e)]);case 3:n=r.apply(void 0,s.concat([i.sent()])),i.label=4;case 4:return o=t.next(),[3,2];case 5:return[3,8];case 6:return u=i.sent(),c={error:u},[3,8];case 7:try{o&&!o.done&&(f=t.return)&&f.call(t)}finally{if(c)throw c.error}return[7];case 8:this._allTranslations[e]=n,i.label=9;case 9:return[2]}}))}))},e}();function d(e,n){for(var t="",r=0,o=u.Text,i=-1,a=0;a<e.length;a++){var l=e.charAt(a);switch(o){case u.Text:"\\"===l?(o=u.Escape,t+=e.substr(r,a-r),r=a+1):"$"===l&&(o=u.Placeholder,t+=e.substr(r,a-r),r=a+"$1".length);break;case u.Escape:o=u.Text;break;case u.Placeholder:if(o=u.Text,i=parseInt(l,10),isNaN(i))throw Error("Parsing error at position ".concat(a,' for translation "').concat(e,'"!\nEscape "$" if you don\'t want to use a placeholder.'));t+=n[i-1]||"";break;default:o=u.Text}}return t+e.substr(r)}n.default=f,function(e){e[e.Text=0]="Text",e[e.Escape=1]="Escape",e[e.Placeholder=2]="Placeholder"}(u||(u={}));var A=function(){function e(e){var n=this;void 0===e&&(e=""),this.name=e,this.listeners=[],this.fire=function(e){var t,r;try{for(var o=a(n.listeners),i=o.next();!i.done;i=o.next()){var l=i.value;try{l(e)}catch(t){console.error("[".concat(n.name,"] Error in a listener!")),console.error(">  ex.: ",t),console.error(">  arg.: ",e)}}}catch(e){t={error:e}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(t)throw t.error}}}}return Object.defineProperty(e.prototype,"length",{get:function(){return this.listeners.length},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this.remove(e),this.listeners.push(e)},e.prototype.remove=function(e){this.listeners=this.listeners.filter((function(n){return n!==e}))},e.prototype.removeAll=function(){this.listeners.splice(0,this.listeners.length)},e}();function p(e){return"string"==typeof e}},4235:function(e,n,t){var r,o=this&&this.__extends||(r=function(e,n){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},r(e,n)},function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function t(){this.constructor=e}r(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}),i=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(n,e,t);return a(n,e),n},s=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},u=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},c=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},f=this&&this.__spreadArray||function(e,n,t){if(t||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return e.concat(r||Array.prototype.slice.call(n))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.AppTranslations=void 0;var A=function(e){function n(){var n=e.call(this)||this;return n._registerTranslationsLoader((function(e){return s(n,void 0,void 0,(function(){return u(this,(function(n){switch(n.label){case 0:switch(e){case"en":return[3,1];case"fr":return[3,3];case"it":return[3,5]}return[3,7];case 1:return[4,Promise.resolve().then((function(){return l(t(9090))}))];case 2:case 4:case 6:return[2,n.sent().default];case 3:return[4,Promise.resolve().then((function(){return l(t(4997))}))];case 5:return[4,Promise.resolve().then((function(){return l(t(4283))}))];case 7:return[2,{}]}}))}))})),n}return o(n,e),Object.defineProperty(n.prototype,"close",{get:function(){return this._("close")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"howToPlay",{get:function(){return this._("how-to-play")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"intro",{get:function(){return this._("intro")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleDouble",{get:function(){return this._("rule-double")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleEast",{get:function(){return this._("rule-east")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleNorth",{get:function(){return this._("rule-north")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"ruleSouth",{get:function(){return this._("rule-south")},enumerable:!1,configurable:!0}),n.prototype.ruleSum=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this._.apply(this,f(["rule-sum"],c(e),!1))},Object.defineProperty(n.prototype,"ruleWest",{get:function(){return this._("rule-west")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"title",{get:function(){return this._("title")},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"wellDone1",{get:function(){return this._("well-done1")},enumerable:!1,configurable:!0}),n}(d(t(6463)).default);n.AppTranslations=A,n.default=new A},9090:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(3191));n.default=o.default},4997:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(320));n.default=o.default},4283:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=r(t(7753));n.default=o.default},8098:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n},a=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function l(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,l)}s((r=r.apply(e,n||[])).next())}))},l=this&&this.__generator||function(e,n){var t,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(i){return function(l){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=n.call(e,a)}catch(e){i=[6,e],r=0}finally{t=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,l])}}},s=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),t(1142);var c=i(t(7294)),f=t(403),d=t(4429),A=u(t(6383)),p=u(t(4883)),h=u(t(834)),m=u(t(9732)),v=t(2726),b=u(t(639)),g=t(8991),y=t(9017);function w(e,n,t){var r=n.ruleN,o=n.ruleE,i=n.ruleS,a=n.ruleW,l=n.ruleDouble,s=n.ruleTotal;return c.createElement(c.Fragment,null,C("N",b.default.ruleNorth,r,t),C("E",b.default.ruleEast,o,t),C("S",b.default.ruleSouth,i,t),C("W",b.default.ruleWest,a,t),C("x2",b.default.ruleDouble,l,t),C("∑",b.default.ruleSum("".concat(e.totalPrisoners)),s,t))}function C(e,n,t,r){return t!==r?null:c.createElement("div",{className:"rule"},c.createElement("div",{className:t?"yes":"no"},e),c.createElement(m.default,null,n))}function B(e){var n=["custom","view-AppView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}function I(e,n,t,r){return a(this,void 0,void 0,(function(){var o;return l(this,(function(i){switch(i.label){case 0:return[4,(0,g.inputDigit)(n,t)];case 1:return o=i.sent(),r(e,o),[2]}}))}))}n.default=function(e){var n=s((0,y.useLanguage)(b.default),2),t=n[0],r=n[1],o=(0,d.useApplicationState)(),i=o.state,a=o.hideInstructions,l=o.showInstructions,u=o.setPrisonersInRoomAtFloor1,g=o.setPrisonersInRoomAtFloor2,C=o.setStage,_=function(e){var n=c.useRef(null);return c.useEffect((function(){var e=n.current;e&&e.scrollTo({top:0,behavior:"auto"})}),[e.stage]),n}(i),E=function(e,n){var t=(0,f.checkRules)(e.roomsFloor1,e.roomsFloor2,e.totalPrisoners);return c.useEffect((function(){var r=t.ruleDouble,o=t.ruleE,i=t.ruleN,a=t.ruleS,l=t.ruleTotal,s=t.ruleW;r&&o&&i&&a&&l&&s&&(e.stage===v.StageEnum.FirstRound?n(v.StageEnum.FirstVictory):e.stage===v.StageEnum.SecondRound&&n(v.StageEnum.SecondVictory))}),[t.ruleDouble,t.ruleE,t.ruleN,t.ruleS,t.ruleTotal,t.ruleW]),t}(i,C),k=function(e,n,t){return function(){switch(console.log("CLOSE"),e(),n.stage){case v.StageEnum.Introduction:t(v.StageEnum.FirstRound);break;case v.StageEnum.FirstVictory:t(v.StageEnum.SecondRound)}}}(a,i,C);return c.createElement("div",{className:B(e)},function(e,n,t,r){var o=e.totalPrisoners/3,i=(e.totalPrisoners+e.totalPrisoners)/3;return c.createElement(c.Fragment,null,c.createElement(p.default,{total:o,rooms:e.roomsFloor1,background:n.assets.images.floor,onRoomClick:function(e,n,r){return I(e,n,r,t)}}),c.createElement(p.default,{total:i,rooms:e.roomsFloor2,background:n.assets.images.floor,onRoomClick:function(e,n,t){return I(e,n,t,r)}}))}(i,e,u,g),function(e,n,t,r,o){var i=r.ruleN,a=r.ruleE,l=r.ruleS,s=r.ruleW,u=r.ruleDouble,f=r.ruleTotal;return c.createElement("div",{className:"fill"},c.createElement(A.default,{roomsFloor1:e,roomsFloor2:n,meshes:t.assets.meshes,compassTexture:t.assets.textures.compass}),function(e,n,t,r,o,i,a){return c.createElement("footer",{onClick:a},c.createElement("div",{className:e?"yes":"no"},"N"),c.createElement("div",{className:n?"yes":"no"},"E"),c.createElement("div",{className:t?"yes":"no"},"S"),c.createElement("div",{className:r?"yes":"no"},"W"),c.createElement("div",{className:o?"yes":"no"},"x2"),c.createElement("div",{className:i?"yes":"no"},"∑"))}(i,a,l,s,u,f,o))}(i.roomsFloor1,i.roomsFloor2,e,E,l),function(e,n,t,r,o,i){var a=n.showInstructions||n.stage===v.StageEnum.Introduction||n.stage===v.StageEnum.FirstVictory||n.stage===v.StageEnum.SecondVictory;return c.createElement("div",{ref:e,className:"message ".concat(a?"show":"hide")},function(e,n){return c.createElement("div",{className:"languages"},c.createElement(h.default,{className:"fr"===e?"selected":"",lang:"fr",label:"Français",onClick:n}),c.createElement(h.default,{className:"it"===e?"selected":"",lang:"it",label:"Italiano",onClick:n}),c.createElement(h.default,{className:"en"===e?"selected":"",lang:"en",label:"English",onClick:n}))}(r,o),function(e,n,t,r){switch(e){case v.StageEnum.Introduction:return function(e){return c.createElement(c.Fragment,null,c.createElement(m.default,null,b.default.intro),c.createElement("hr",null),c.createElement("button",{onClick:e},b.default.close),c.createElement("hr",null),c.createElement(m.default,null,b.default.howToPlay))}(r);case v.StageEnum.FirstVictory:return function(e){return c.createElement(c.Fragment,null,c.createElement(m.default,null,b.default.wellDone1),c.createElement("hr",null),c.createElement("button",{onClick:e},b.default.close))}(r);default:return function(e,n,t){return c.createElement(c.Fragment,null,w(e,n,!1),w(e,n,!0),c.createElement("hr",null),c.createElement("button",{onClick:t},b.default.close),c.createElement("hr",null),c.createElement(m.default,null,b.default.howToPlay))}(n,t,r)}}(n.stage,n,t,i))}(_,i,E,t,r,k))}},1342:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8098);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},403:function(e,n){var t=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a};Object.defineProperty(n,"__esModule",{value:!0}),n.checkRules=void 0,n.checkRules=function(e,n,r){var o,i=t(e,8),a=i[0],l=i[1],s=i[2],u=i[3],c=i[4],f=i[5],d=i[6],A=i[7],p=t(n,8),h=p[0],m=p[1],v=p[2],b=p[3],g=p[4],y=p[5],w=p[6],C=p[7];return{ruleDouble:h+m+v+b+g+y+w+C===(o=a+l+s+u+c+f+d+A,o+o),ruleN:a+l+s+h+m+v===11,ruleE:s+c+A+v+g+C===11,ruleS:f+d+A+y+w+C===11,ruleW:a+u+f+h+b+y===11,ruleTotal:r===a+l+s+u+c+f+d+A+h+m+v+b+g+y+w+C}}},3964:function(e,n,t){var r=this&&this.__read||function(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,o,i=t.call(e),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(t=i.return)&&t.call(i)}finally{if(o)throw o.error}}return a},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.useCanvas3D=void 0;var i=o(t(6137)),a=t(2212),l=t(7294),s=o(t(1636));function u(e,n){var t=Math.PI*(2-e)*.5,r=1.5*Math.sin(t),o=1.5*Math.cos(t),i=new a.Mesh(new a.PlaneGeometry(1.4,1.4),new a.MeshPhongMaterial({map:n,transparent:!0,specular:5}));return i.position.set(r,0,o),i.rotation.set(0,t,0),i}function c(e){var n=128,t=document.createElement("canvas");t.width=n,t.height=n;var r=t.getContext("2d");if(!r)throw Error("Unable to create context 2D!");r.clearRect(0,0,n,n),r.font="bold ".concat(64,"px sans-serif");var o="".concat(e),i=.5*(n-r.measureText(o).width);r.fillStyle=11===e?"#5f3b":"#b00b",r.fillText(o,i,96),r.strokeStyle="#000",r.lineWidth=3.84,r.strokeText(o,i,96);var l=new a.CanvasTexture(t);return l.flipY=!0,l}n.useCanvas3D=function(e,n,t,o,f){var d=(0,l.useRef)((function(e,n,t,r){})),A=r(n,8),p=A[0],h=A[1],m=A[2],v=A[3],b=A[4],g=A[5],y=A[6],w=A[7],C=r(t,8),B=C[0],I=C[1],_=C[2],E=C[3],k=C[4],x=C[5],U=C[6],S=C[7],F=p+h+m+B+I+_,P=m+b+w+_+k+S,O=g+y+w+x+U+S,j=p+v+g+B+E+x;(0,l.useEffect)((function(){var n=e.current;if(n){var t=function(e,n,t){var r=new a.WebGLRenderer({canvas:e}),o=function(e){var n=new a.PerspectiveCamera(45,e,.1,100);return n.position.set(2,3,5),n.lookAt(0,0,0),n}(e.width/e.height),i=function(){var e=new a.AmbientLight(16777215,1),n=new a.DirectionalLight(16772829,2);return n.position.set(-1,1,5),n.target.position.set(0,0,0),{ambientLight:e,directionalLight:n}}(),l=i.ambientLight,s=i.directionalLight,f=new a.Scene;f.background=new a.Color("#def");var d=new a.Group,A=function(){var e=u(0,c(0)),n=u(1,c(1)),t=u(2,c(2)),r=u(3,c(3));return r.material.map=c(666),{faceN:e,faceE:n,faceS:t,faceW:r}}(),p=A.faceN,h=A.faceE,m=A.faceS,v=A.faceW;d.add(n.convent,function(e){var n=new a.Mesh(new a.PlaneGeometry(4,4),new a.MeshPhongMaterial({map:e,transparent:!0}));return n.position.set(0,-.5,0),n.rotateX(-Math.PI/2),n}(t),p,h,m,v),f.add(d,l,s);var b=function(e,n,t,r,o){var i=0,a=0,l=0;return function(s){var u=null!=s?s:l;l=u,e.clientWidth===i&&e.clientHeight===a||(i=e.clientWidth,a=e.clientHeight,e.width=i,e.height=a,n.aspect=i/a,n.updateProjectionMatrix(),t.setSize(i,a,!1)),r.rotation.set(0,u,0),t.render(o,n)}}(e,o,r,d,f);window.requestAnimationFrame((function(){return b()}));var g=function(e,n,t,r,o){var i=0,a=0,l=0,s=0;return function(u,f,d,A){i!==u&&(i=u,e.material.map=c(u)),a!==f&&(a=u,n.material.map=c(f)),l!==d&&(l=u,t.material.map=c(d)),s!==A&&(s=u,r.material.map=c(A)),window.requestAnimationFrame((function(){return o()}))}}(p,h,m,v,b);return{paint:b,updateTotals:g}}(n,o,f),r=t.paint,l=t.updateTotals;d.current=l;var A=new s.default(r),p=new i.default(n,A.handleStart,A.handlePan,A.handleSwipe);return function(){return p.detach()}}}),[e]),(0,l.useEffect)((function(){d.current(F,P,O,j)}),[d,F,P,O,j])}},9153:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(6114);var a=i(t(7294)),l=t(3964);function s(e){var n=["custom","view-Convent3dView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=a.useRef(null);return(0,l.useCanvas3D)(n,e.roomsFloor1,e.roomsFloor2,e.meshes,e.compassTexture),a.createElement("canvas",{className:s(e),ref:n})}},6383:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(9153);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},1636:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0});var t=Math.PI,r=function(){function e(e){var n=this;this.onChange=e,this.angle=-.4,this.speed=.001,this.timeStamp=0,this.handleStart=function(){n.speed=0},this.handlePan=function(e){n.fire(n.angle+t*e.deltaX)},this.handleSwipe=function(e){n.angle+=t*e.deltaX,n.speed=e.vectorX,n.timeStamp=0,window.requestAnimationFrame(n.anim)},this.anim=function(e){if(0===n.timeStamp)return n.timeStamp=e,void window.requestAnimationFrame(n.anim);var t=e-n.timeStamp;n.timeStamp=e,n.angle+=n.speed*t,n.onChange(n.angle);var r=Math.pow(.5,.001*t);n.speed*=r,Math.abs(n.speed)>1e-4?window.requestAnimationFrame(n.anim):console.log("STOP!",n.speed)},window.requestAnimationFrame(this.anim)}return e.prototype.fire=function(e){var n=this;window.requestAnimationFrame((function(){return n.onChange(e)}))},e}();n.default=r},8252:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0}),t(7999);var a=i(t(7294)),l=[0,1,2,3],s=[4,5,6,7];function u(e){var n=["custom","view-ConventFloorView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}n.default=function(e){var n=e.rooms,t=function(e,n){return function(t){return a.createElement("div",{key:"room-".concat(t),onClick:function(e){var r=function(e){for(var n=e;n&&"static"===window.getComputedStyle(n).position;)n=n.parentElement;return n?n.getBoundingClientRect():{left:0,top:0}}(e.target),o=r.left,i=r.top;n(t,e.clientX+o,e.clientY+i)}},e[t])}}(n,e.onRoomClick),r=function(e){return e.reduce((function(e,n){return e+n}),0)}(n);return a.createElement("div",{className:u(e),style:{backgroundImage:"url(".concat(e.background.src,")")}},a.createElement("div",null,l.map(t),a.createElement("div",{className:"total ".concat(r===e.total?"ok":"")},r),s.map(t)))}},4883:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(8252);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},834:function(e,n,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=t(574);Object.defineProperty(n,"default",{enumerable:!0,get:function(){return r(o).default}})},574:function(e,n,t){var r=this&&this.__createBinding||(Object.create?function(e,n,t,r){void 0===r&&(r=t),Object.defineProperty(e,r,{enumerable:!0,get:function(){return n[t]}})}:function(e,n,t,r){void 0===r&&(r=t),e[r]=n[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(n,e,t);return o(n,e),n};Object.defineProperty(n,"__esModule",{value:!0});var a=i(t(7294));function l(e){var n=["custom","view-LanguageButtonView"];return"string"==typeof e.className&&n.push(e.className),n.join(" ")}t(1860),n.default=function(e){return a.createElement("div",{className:l(e),tabIndex:1,onClick:function(){return e.onClick(e.lang)}},a.createElement("svg",{width:"48",height:"48",version:"1.1",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg"},a.createElement("g",null,a.createElement("path",{d:"m12 29.5s-8.32-1.85-8.39-6.79c-0.065-4.94 1.6-7.12 5.67-9.32s23.8-2.72 29.5-0.3 6.55 5.43 6.26 9.11-2.07 5.35-7.64 7.37-21 0.577-21 0.577-2.06 3.13-4.13 4.55c-2.07 1.42-9.88 2.44-9.88 2.44s6.05-2.08 7.65-4.47c1.59-2.39 1.94-3.17 1.94-3.17z",fill:"#ffe",stroke:"#000",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:".7"}),a.createElement("text",{x:"25.1",y:"24",fill:"#000e",fontFamily:"sans-serif",fontSize:"8px",fontStyle:"italic","text-align":"center",textAnchor:"middle",style:{lineHeight:1.25}},a.createElement("tspan",{x:"25.1",y:"24"},e.label)))))}},9462:(e,n,t)=>{t.r(n),t.d(n,{default:()=>r});const r=t.p+"msh/convent.57479d48035a9bfad3ec2ec11b8d71d9.glb"},394:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-0.woff2"},4103:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-1.woff2"},2777:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-2.woff2"},2696:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-3.woff2"},8712:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-4.woff2"},296:(e,n,t)=>{e.exports=t.p+"fnt/fuzzy-bubbles-5.woff2"},1726:(e,n,t)=>{e.exports=t.p+"img/compass.b8b993f8a20a5319a835.png"},1493:(e,n,t)=>{e.exports=t.p+"img/floor.14447419a22a2562785c.png"},3859:(e,n,t)=>{e.exports=t.p+"img/floor.7337eaa7fe38ab3b2726.webp"},3884:e=>{e.exports=JSON.parse('{"fallback":"en","languages":["en","fr","it"]}')},3191:e=>{e.exports=JSON.parse('{"close":"Close","how-to-play":"# How to play?\\n\\nTap a room on the floors plans to change the number of prisoners.\\n\\nSlide the house left and right to see the number of prisoners per face.","intro":"Everyone is under stress in the Red Goat penitentiary, for which you are the most recent person in charge.\\n\\nThe General is coming to do his ten-year inspection next week and no one has warned you.\\nEverything will have to be perfect because the General is rather finicky.\\n\\nThe penitentiary has **16 rooms** spread over **2 floors** and contains **36 prisoners**: **12 on the first floor** and **24 on the second**.\\nTo satisfy the General, it is necessary that:\\n\\n* No room is empty.\\n* The 6 rooms overlooking the **North** must contain **11 prisoners** in all.\\n* Ditto for the view to the **Sub**, to the **East** and to the **West**.\\n\\nLet\'s do it!","rule-double":"The **second floor** should accommodate **twice** as many prisoners as the **first floor**.","rule-east":"Rooms with a **East** side window must have a total of **11** prisoners.","rule-north":"Rooms with a **North** side window must have a total of **11** prisoners.","rule-south":"Rooms with a **South** side window must have a total of **11** prisoners.","rule-sum":"The total number of prisoners must be **$1**.","rule-west":"Rooms with a **West** side window must have a total of **11** prisoners.","title":"Title","well-done1":"# Well done!\\n\\nYou managed to arrange all the prisoners according to the penitentiary strict rules.  \\nNo doubts that you should be promoted for this!\\n\\nUnfortunately, the very next night, **9 prisoners** escaped because of a broken door lock.\\n\\nYou made sure to change all the locks to prevent any other evasions,\\nbut now you have to arrange the remaining **27 prisoners** in the rooms, by following the same strict rules.\\n\\nBut hurry up, because the general will come tomorrow."}')},320:e=>{e.exports=JSON.parse('{"close":"Fermer","how-to-play":"# Comment jouer ?\\n\\nTouchez une pièce sur les plans des étages pour modifier le nombre de prisonniers.\\n\\nFaites glisser la maison à gauche et à droite pour voir le nombre de prisonniers par face.","intro":"Tout le monde est en stress dans le pénitencier de Chèvre Rouge dont vous êtes le tout récent responsable.\\n\\nLe Général vient faire son inspection décennale la semaine prochaine et personne ne vous avait prévenu.  \\nIl va falloir que tout soit nickel parce que le Général est plutôt tatillon.\\n\\nLe pénitencier a **16 chambres** réparties sur **2 étages** et contient **36 prisonniers**: **12 au premier étage** et **24 au second**.  \\nPour satisfaire le Général, il faut que :\\n\\n* Aucune chambre ne soit vide.\\n* Les 6 chambres avec vue sur le **Nord** doivent contenir **11 prisonniers** en tout.\\n* Idem pour la vue au **Sub**, à l\'**Est** et à l\'**Ouest**.\\n\\nÀ vous de jouer !","rule-double":"Le **deuxième étage** doit accueillir **deux fois** plus de prisonniers que le **premier étage**.","rule-east":"Les chambres avec une fenêtre côté **Est** doivent accueillir un total de **11** prisonniers.","rule-north":"Les chambres avec une fenêtre côté **Nord** doivent accueillir un total de **11** prisonniers.","rule-south":"Les chambres avec une fenêtre côté **Sud** doivent accueillir un total de **11** prisonniers.","rule-sum":"Le nombre total de prisonniers doit être de **$1**.","rule-west":"Les chambres avec une fenêtre côté **Ouest** doivent accueillir un total de **11** prisonniers.","title":"Titre","well-done1":"# Bien joué!\\n\\nVous avez réussi à organiser tous les prisonniers selon les règles strictes du pénitencier.\\nAucun doute que vous devriez être promu pour cela !\\n\\nMalheureusement, la nuit suivante, **9 prisonniers** se sont évadés à cause d\'une serrure de porte cassée.\\n\\nVous avez fait en sorte de changer toutes les serrures pour éviter toute autre évasion,\\nmais maintenant vous devez ranger les **27 prisonniers** restants dans les chambres, en suivant les mêmes règles strictes.\\n\\nMais dépêchez-vous, car le général arrive demain."}')},7753:e=>{e.exports=JSON.parse('{"close":"Chiudere","how-to-play":"# Come si gioca?\\n\\nTocca una stanza nelle planimetrie per modificare il numero di prigionieri.\\n\\nFai scorrere la casa a sinistra ea destra per vedere il numero di prigionieri per faccia.","intro":"Tutti sono sotto stress nel penitenziario di Capra Rossa, di cui sei il recente responsabile.\\n\\nIl Generale verrà a fare la sua ispezione decennale la prossima settimana e nessuno ti ha avvertito.\\nTutto dovrà essere perfetto perché il Generale è piuttosto pignolo.\\n\\nIl penitenziario dispone di **16 stanze** distribuite su **2 piani** e contiene **36 detenuti**: **12 al primo piano** e **24 al secondo**.\\nPer soddisfare il Generale, è necessario che:\\n\\n* Nessuna stanza sia vuota.\\n* Le 6 stanze con vista **Nord** devono contenere **11 detenuti** in tutto.\\n* Idem per la vista al **Sub**, all\'**Est** e all\'**Ovest**.\\n\\nFacciamolo!","rule-double":"Il **secondo piano** dovrebbe ospitare il **doppio** delle prigionieri rispetto al **primo piano**.","rule-east":"Le camere con finestra sul lato **Est** devono avere un totale di **11** prigionieri.","rule-north":"Le camere con finestra sul lato **Nord** devono avere un totale di **11** prigionieri.","rule-south":"Le camere con finestra sul lato **Sub** devono avere un totale di **11** prigionieri.","rule-sum":"Il numero totale di prigionieri deve essere **$1**.","rule-west":"Le camere con finestra sul lato **Ovest** devono avere un totale di **11** prigionieri.","title":"Titolo","well-done1":"# Molto bene!\\n\\nSei riuscito a sistemare tutti i prigionieri secondo le rigide regole del penitenziario.\\nNon c\'è dubbio che dovresti essere promosso per questo!\\n\\nSfortunatamente, la notte successiva, **9 prigionieri** sono fuggiti a causa di una serratura rotta.\\n\\nTi sei assicurato di cambiare tutte le serrature per evitare altre evasioni,\\nma ora devi sistemare i restanti **27 prigionieri** nelle stanze, seguendo le stesse rigide regole.\\n\\nMa sbrigati, perché domani verrà il generale."}')}},e=>{e.O(0,[977],(()=>(5796,e(e.s=5796)))),e.O()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,